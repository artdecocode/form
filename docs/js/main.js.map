{
  "version": 3,
  "file": "splendid/js/main.js",
  "lineCount": 1065,
  "mappings": "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",
  "sources": [
    " [synthetic:es6/util/arrayiterator] ",
    " [synthetic:es6/util/makeiterator] ",
    " [synthetic:util/objectcreate] ",
    " [synthetic:es6/util/setprototypeof] ",
    " [synthetic:es6/util/inherits] ",
    " [synthetic:util/global] ",
    " [synthetic:util/defineproperty] ",
    " [synthetic:util/polyfill] ",
    " [synthetic:es6/promise/promise] ",
    " [synthetic:es6/symbol] ",
    " [synthetic:es6/generator_engine] ",
    " [synthetic:es6/execute_async_generator] ",
    " [synthetic:es6/util/iteratorfromarray] ",
    " [synthetic:es6/array/values] ",
    " [synthetic:es6/util/assign] ",
    " [synthetic:util/owns] ",
    " [synthetic:es6/object/assign] ",
    "/../node_modules/preact/src/vnode.js",
    "/../node_modules/preact/src/options.js",
    "/../node_modules/preact/src/h.js",
    "/../node_modules/preact/src/util.js",
    "/../node_modules/preact/src/constants.js",
    "/../node_modules/preact/src/render-queue.js",
    "/../node_modules/preact/src/vdom/index.js",
    "/../node_modules/preact/src/dom/index.js",
    "/../node_modules/preact/src/vdom/diff.js",
    "/../node_modules/preact/src/vdom/component.js",
    "/../node_modules/preact/src/vdom/component-recycler.js",
    "/../node_modules/preact/src/component.js",
    "/src/lib/index.js",
    "/src/Select.jsx",
    "/src/TextArea.jsx",
    "/src/Input.jsx",
    "/../node_modules/unfetch/src/index.mjs",
    "/src/SubmitForm.jsx",
    "/src/index.jsx",
    "/example/ExampleForm.jsx",
    "/example/App.jsx"
  ],
  "sourcesContent": [
    "/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Utility method for creating an iterator for Arrays.\n */\n'require base';\n\n/**\n * Returns an internal iterator from the given array.\n * @param {!Array<T>} array\n * @return {function():!IIterableResult<T>}\n * @template T\n */\n$jscomp.arrayIteratorImpl = function(array) {\n  var index = 0;\n  return function() {\n    if (index < array.length) {\n      return {\n        done: false,\n        value: array[index++],\n      };\n    } else {\n      return {done: true};\n    }\n  };\n};\n\n/**\n * Returns an internal iterator from the given array.\n * @param {!Array<T>} array\n * @return {!Iterator<T>}\n * @template T\n */\n$jscomp.arrayIterator = function(array) {\n  return /** @type {!Iterator<T>} */ ({next: $jscomp.arrayIteratorImpl(array)});\n};\n\n",
    "/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Polyfill for for-of loops.\n */\n'require es6/util/arrayiterator';\n\n/**\n * Creates an iterator for the given iterable.  This iterator should never\n * be exposed to user code.\n *\n * @param {string|!Iterable<T>|!Iterator<T>|!Arguments<T>} iterable\n * @return {!Iterator<T>}\n * @template T\n * @suppress {reportUnknownTypes}\n */\n$jscomp.makeIterator = function(iterable) {\n  // NOTE: Disabling typechecking because [] not allowed on @struct.\n  var iteratorFunction = typeof Symbol != 'undefined' && Symbol.iterator &&\n      (/** @type {?} */ (iterable)[Symbol.iterator]);\n  return iteratorFunction ? iteratorFunction.call(iterable) :\n      $jscomp.arrayIterator(/** @type {!Array} */ (iterable));\n};\n",
    "/*\n * Copyright 2017 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides a partial internal polyfill for Object.create.\n */\n'require util/defines';\n\n\n/**\n * Polyfill for Object.create() method:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create\n *\n * Does not implement the second argument.\n * @param {!Object} prototype\n * @return {!Object}\n */\n$jscomp.objectCreate =\n    ($jscomp.ASSUME_ES5 || typeof Object.create == 'function') ?\n    Object.create :\n    function(prototype) {\n      /** @constructor */\n      var ctor = function() {};\n      ctor.prototype = prototype;\n      return new ctor();\n    };\n",
    "/*\n * Copyright 2017 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview\n * @suppress {uselessCode}\n */\n\n/**\n * @suppress {missingProperties,reportUnknownTypes}\n * @return {boolean}\n */\n$jscomp.underscoreProtoCanBeSet = function() {\n  var x = {a: true};\n  var y = {};\n  try {\n    y.__proto__ = x;\n    return y.a;\n  } catch (e) {\n    // __proto__ property is readonly (possibly IE 10?)\n  }\n  return false;\n};\n\n/**\n * If we can implement it, this will be a function that attempts to set the\n * prototype of an object, otherwise it will be `null`.\n *\n * It returns the first argument if successful. Throws a `TypeError` if the\n * object is not extensible.\n *\n * @type {null|function(!Object, ?Object): !Object}\n */\n$jscomp.setPrototypeOf = (typeof Object.setPrototypeOf == 'function') ?\n    Object.setPrototypeOf :\n    $jscomp.underscoreProtoCanBeSet() ?\n    function(target, proto) {\n      target.__proto__ = proto;\n      if (target.__proto__ !== proto) {\n        throw new TypeError(target + ' is not extensible');\n      }\n      return target;\n    } :\n    null;\n",
    "/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Polyfill for ES6 extends keyword.\n * @suppress {uselessCode}\n */\n'require base';\n'require util/objectcreate';\n'require es6/util/setprototypeof';\n\n\n/**\n * Inherit the prototype methods and static methods from one constructor\n * into another.\n *\n * This wires up the prototype chain (like goog.inherits) and copies static\n * properties, for ES6-to-ES{3,5} transpilation.\n *\n * Usage:\n * <pre>\n *   function ParentClass() {}\n *\n *   // Regular method.\n *   ParentClass.prototype.foo = function(a) {};\n *\n *   // Static method.\n *   ParentClass.bar = function() {};\n *\n *   function ChildClass() {\n *     ParentClass.call(this);\n *   }\n *   $jscomp.inherits(ChildClass, ParentClass);\n *\n *   var child = new ChildClass();\n *   child.foo();\n *   ChildClass.bar();  // Static inheritance.\n * </pre>\n *\n * @param {!Function} childCtor Child class.\n * @param {!Function} parentCtor Parent class.\n * @suppress {strictMissingProperties} 'superClass_' is not defined on Function\n */\n$jscomp.inherits = function(childCtor, parentCtor) {\n  childCtor.prototype = $jscomp.objectCreate(parentCtor.prototype);\n  /** @override */ childCtor.prototype.constructor = childCtor;\n  if ($jscomp.setPrototypeOf) {\n    // avoid null dereference warning\n    /** @const {!Function} */\n    var setPrototypeOf = $jscomp.setPrototypeOf;\n    setPrototypeOf(childCtor, parentCtor);\n  } else {\n    // setPrototypeOf is not available so we need to copy the static\n    // methods to the child\n    for (var p in parentCtor) {\n      if (p == 'prototype') {\n        // Don't copy parentCtor.prototype to childCtor.\n        continue;\n      }\n      if (Object.defineProperties) {\n        var descriptor = Object.getOwnPropertyDescriptor(parentCtor, p);\n        if (descriptor) {\n          Object.defineProperty(childCtor, p, descriptor);\n        }\n      } else {\n        // Pre-ES5 browser. Just copy with an assignment.\n        childCtor[p] = parentCtor[p];\n      }\n    }\n  }\n\n  childCtor.superClass_ = parentCtor.prototype;\n};\n",
    "/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Runtime code to store the global object.\n */\n'require base';\n'declare global';\n'declare window';\n\n\n/**\n * @param {!Object} maybeGlobal\n * @return {!Object} The global object.\n * @suppress {undefinedVars|reportUnknownTypes}\n */\n$jscomp.getGlobal = function(maybeGlobal) {\n  // This logic can be simplified to be made more optimizable.\n  return (typeof window != 'undefined' && window === maybeGlobal) ?\n      maybeGlobal :\n      (typeof global != 'undefined' && global != null) ?\n      /** @type {!Object} */ (global) :\n      maybeGlobal;\n};\n\n\n// TODO(sdh): This should be typed as \"the global object\" now that the type\n// of \"Global\" has landed in the type system.\n/**\n * The global object. For browsers we could just use `this` but in Node that\n * doesn't work.\n * @const {?}\n */\n$jscomp.global = $jscomp.getGlobal(this);\n",
    "/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides methods to polyfill native objects.\n * @suppress {reportUnknownTypes}\n */\n'require util/defines';\n\n\n/**\n * Polyfill for Object.defineProperty() method:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\n *\n * Refuses to define properties on Array.prototype and Object.prototype,\n * since we can't make them non-enumerable and this messes up peoples' for\n * loops.  Beyond this, we simply assign values and not worry\n * about enumerability or writeability.\n * @param {?} target\n * @param {string} property\n * @param {?} descriptor\n * @suppress {reportUnknownTypes}\n */\n$jscomp.defineProperty =\n    $jscomp.ASSUME_ES5 || typeof Object.defineProperties == 'function' ?\n    Object.defineProperty :\n    function(target, property, descriptor) {\n      descriptor = /** @type {!ObjectPropertyDescriptor} */ (descriptor);\n      // NOTE: This is currently never called with a descriptor outside\n      // the control of the compiler.  If we ever decide to polyfill either\n      // Object.defineProperty or Reflect.defineProperty for ES3, we should\n      // explicitly check for `get` or `set` on the descriptor and throw a\n      // TypeError, since it's impossible to properly polyfill it.\n      if (target == Array.prototype || target == Object.prototype) return;\n      target[property] = descriptor.value;\n    };\n",
    "/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides methods to polyfill native objects.\n */\n'require util/defineproperty';\n'require util/global';\n\n\n/**\n * @param {string} target Qualified name of the class or method to polyfill,\n *     e.g. 'Array.prototype.includes' or 'Map'.\n * @param {?function(*): *} polyfill A function that takes the current browser\n *     implementation of the target and returns an optional new polyfill\n *     implementation.  If null is returned, then no polyfill will be added.  A\n *     null argument for this parameter indicates that the function will not be\n *     polyfilled, and is only useful for `build_polyfill_table.js` bookkeeping.\n * @param {string} fromLang The language level in which the target is expected\n *     to already be present in the browser.  The compiler requires that\n *     `languageOut < fromLang` before injecting a polyfill (i.e. if the\n *     specified output language already includes the feature then there's no\n *     need to polyfill it).\n * @param {string} toLang The language level required by the polyfill\n *     implementation.  The compiler will issue an error if a polyfill is\n *     required, but `languageOut < toLang`.  Additionally, the\n *     `build_polyfill_table.js` script audits the polyfill dependency tree to\n *     ensure that no polyfill with a lower `toLang` depends on one with a\n *     higher `toLang`.\n * @suppress {reportUnknownTypes}\n * @noinline\n * NOTE: We prevent inlining so RemoveUnusedPolyfills can always recognize this\n * call.\n */\n$jscomp.polyfill = function(target, polyfill, fromLang, toLang) {\n  if (!polyfill) return;\n  var obj = $jscomp.global;\n  var split = target.split('.');\n  for (var i = 0; i < split.length - 1; i++) {\n    var key = split[i];\n    if (!(key in obj)) obj[key] = {};  // Might want to be defineProperty.\n    obj = obj[key];\n  }\n  var property = split[split.length - 1];\n  var orig = obj[property];\n  var impl = polyfill(orig);\n  if (impl == orig || impl == null) return;\n  $jscomp.defineProperty(\n      obj, property, {configurable: true, writable: true, value: impl});\n};\n",
    "/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require base';\n'require es6/util/makeiterator';\n'require util/global';\n'require util/polyfill';\n\n/**\n * Should we unconditionally override a native Promise implementation with our\n * own?\n * @define {boolean}\n */\n$jscomp.FORCE_POLYFILL_PROMISE = false;\n\n\n$jscomp.polyfill('Promise',\n    /**\n     * @param {*} NativePromise\n     * @return {*}\n     * @suppress {reportUnknownTypes}\n     */\n    function(NativePromise) {\n  // TODO(bradfordcsmith): Do we need to add checks for standards conformance?\n  //     e.g. The version of FireFox we currently use for testing has a Promise\n  //     that fails to reject attempts to fulfill it with itself, but that\n  //     isn't reasonably testable here.\n  if (NativePromise && !$jscomp.FORCE_POLYFILL_PROMISE) {\n    return NativePromise;\n  }\n\n  /**\n    * Schedules code to be executed asynchronously.\n    * @constructor\n    * @struct\n    */\n  function AsyncExecutor() {\n    /**\n     * Batch of functions to execute.\n     *\n     * Will be `null` initially and immediately after a batch finishes\n     * executing.\n     * @private {?Array<function()>}\n     */\n    this.batch_ = null;\n  }\n\n  /**\n   * Schedule a function to execute asynchronously.\n   *\n   * -   The function will execute:\n   *     -   After the current call stack has completed executing.\n   *     -   After any functions previously scheduled using this object.\n   * -   The return value will be ignored.\n   * -   An exception thrown by the method will be caught and asynchronously\n   *     rethrown when it cannot interrupt any other code. This class provides\n   *     no way to catch such exceptions.\n   * @param {function():?} f\n   */\n  AsyncExecutor.prototype.asyncExecute = function(f) {\n    if (this.batch_ == null) {\n      // no batch created yet, or last batch was fully executed\n      this.batch_ = [];\n      var self = this;\n      this.asyncExecuteFunction(function() { self.executeBatch_(); });\n    }\n    this.batch_.push(f);\n  };\n\n  // NOTE: We want to make sure AsyncExecutor will work as expected even if\n  // testing code should override setTimeout()\n  /** @const {function(!Function, number)} */\n  var nativeSetTimeout = $jscomp.global['setTimeout'];\n\n  /**\n   * Schedule a function to execute asynchronously as soon as possible.\n   *\n   * NOTE: May be overridden for testing.\n   * @package\n   * @param {function()} f\n   */\n  AsyncExecutor.prototype.asyncExecuteFunction = function(f) {\n    nativeSetTimeout(f, 0);\n  };\n\n  /**\n   * Execute scheduled jobs in a batch until all are executed or the batch\n   * execution time limit has been reached.\n   * @private\n   */\n  AsyncExecutor.prototype.executeBatch_ = function() {\n    while (this.batch_ && this.batch_.length) {\n      var /** !Array<?function()> */ executingBatch = this.batch_;\n      // Executions scheduled while executing this batch go into a new one to\n      // avoid the batch array getting too big.\n      this.batch_ = [];\n      for (var i = 0; i < executingBatch.length; ++i) {\n        var f = /** @type {function()} */ (executingBatch[i]);\n        executingBatch[i] = null;  // free memory\n        try {\n          f();\n        } catch (error) {\n          this.asyncThrow_(error);\n        }\n      }\n    }\n    // All jobs finished executing, so force scheduling a new batch next\n    // time asyncExecute() is called.\n    this.batch_ = null;\n  };\n\n  /**\n   * @private\n   * @param {*} exception\n   */\n  AsyncExecutor.prototype.asyncThrow_ = function(exception) {\n    this.asyncExecuteFunction(function() { throw exception; });\n  };\n\n  /**\n   * @enum {number}\n   */\n  var PromiseState = {\n    /** The Promise is waiting for resolution. */\n    PENDING: 0,\n\n    /** The Promise has been resolved with a fulfillment value. */\n    FULFILLED: 1,\n\n    /** The Promise has been resolved with a rejection reason. */\n    REJECTED: 2\n  };\n\n\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\n   * @param {function(\n   *             function((TYPE|IThenable<TYPE>|Thenable|null)=),\n   *             function(*=))} executor\n   * @constructor\n   * @extends {Promise<TYPE>}\n   * @template TYPE\n   */\n  var PolyfillPromise = function(executor) {\n    /** @private {PromiseState} */\n    this.state_ = PromiseState.PENDING;\n\n    /**\n     * The settled result of the Promise. Immutable once set with either a\n     * fulfillment value or rejection reason.\n     * @private {*}\n     */\n    this.result_ = undefined;\n\n    /**\n     * These functions must be asynchronously executed when this promise\n     * settles.\n     * @private {?Array<function()>}\n     */\n    this.onSettledCallbacks_ = [];\n\n    var resolveAndReject = this.createResolveAndReject_();\n    try {\n      executor(resolveAndReject.resolve, resolveAndReject.reject);\n    } catch (e) {\n      resolveAndReject.reject(e);\n    }\n  };\n\n\n  /**\n   * Create a pair of functions for resolving or rejecting this Promise.\n   *\n   * <p>After the resolve or reject function has been called once, later calls\n   * do nothing.\n   * @private\n   * @return {{\n   *     resolve: function((TYPE|IThenable<TYPE>|Thenable|null)=),\n   *     reject:  function(*=)\n   * }}\n   */\n  PolyfillPromise.prototype.createResolveAndReject_ = function() {\n    var thisPromise = this;\n    var alreadyCalled = false;\n    /**\n     * @param {function(this:PolyfillPromise<TYPE>, T)} method\n     * @return {function(T)}\n     * @template T\n     */\n    function firstCallWins(method) {\n      return function(x) {\n        if (!alreadyCalled) {\n          alreadyCalled = true;\n          method.call(thisPromise, x);\n        }\n      };\n    }\n    return {\n      resolve: firstCallWins(this.resolveTo_),\n      reject: firstCallWins(this.reject_)\n    };\n  };\n\n\n  /**\n   * @private\n   * @param {*} value\n   */\n  PolyfillPromise.prototype.resolveTo_ = function(value) {\n    if (value === this) {\n      this.reject_(new TypeError('A Promise cannot resolve to itself'));\n    } else if (value instanceof PolyfillPromise) {\n      this.settleSameAsPromise_(/** @type {!PolyfillPromise} */ (value));\n    } else if (isObject(value)) {\n      this.resolveToNonPromiseObj_(/** @type {!Object} */ (value));\n    } else {\n      this.fulfill_(value);\n    }\n  };\n\n\n  /**\n   * @private\n   * @param {!Object} obj\n   * @suppress {strictMissingProperties} obj.then\n   */\n  PolyfillPromise.prototype.resolveToNonPromiseObj_ = function(obj) {\n    var thenMethod = undefined;\n\n    try {\n      thenMethod = obj.then;\n    } catch (error) {\n      this.reject_(error);\n      return;\n    }\n    if (typeof thenMethod == 'function') {\n      this.settleSameAsThenable_(thenMethod, /** @type {!Thenable} */ (obj));\n    } else {\n      this.fulfill_(obj);\n    }\n  };\n\n\n  /**\n   * @param {*} value anything\n   * @return {boolean}\n   */\n  function isObject(value) {\n    switch (typeof value) {\n      case 'object':\n        return value != null;\n      case 'function':\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Reject this promise for the given reason.\n   * @private\n   * @param {*} reason\n   * @throws {!Error} if this promise is already fulfilled or rejected.\n   */\n  PolyfillPromise.prototype.reject_ = function(reason) {\n    this.settle_(PromiseState.REJECTED, reason);\n  };\n\n  /**\n   * Fulfill this promise with the given value.\n   * @private\n   * @param {!TYPE} value\n   * @throws {!Error} when this promise is already fulfilled or rejected.\n   */\n  PolyfillPromise.prototype.fulfill_ = function(value) {\n    this.settle_(PromiseState.FULFILLED, value);\n  };\n\n  /**\n   * Fulfill or reject this promise with the given value/reason.\n   * @private\n   * @param {!PromiseState} settledState (FULFILLED or REJECTED)\n   * @param {*} valueOrReason\n   * @throws {!Error} when this promise is already fulfilled or rejected.\n   */\n  PolyfillPromise.prototype.settle_ = function(settledState, valueOrReason) {\n    if (this.state_ != PromiseState.PENDING) {\n      throw new Error(\n          'Cannot settle(' + settledState + ', ' + valueOrReason +\n          '): Promise already settled in state' + this.state_);\n    }\n    this.state_ = settledState;\n    this.result_ = valueOrReason;\n    this.executeOnSettledCallbacks_();\n  };\n\n  PolyfillPromise.prototype.executeOnSettledCallbacks_ = function() {\n    if (this.onSettledCallbacks_ != null) {\n      for (var i = 0; i < this.onSettledCallbacks_.length; ++i) {\n        asyncExecutor.asyncExecute(this.onSettledCallbacks_[i]);\n      }\n      this.onSettledCallbacks_ = null;  // free memory\n    }\n  };\n\n  /**\n   * All promise async execution is managed by a single executor for the\n   * sake of efficiency.\n   * @const {!AsyncExecutor}\n   */\n  var asyncExecutor = new AsyncExecutor();\n\n  /**\n   * Arrange to settle this promise in the same way as the given thenable.\n   * @private\n   * @param {!PolyfillPromise} promise\n   */\n  PolyfillPromise.prototype.settleSameAsPromise_ = function(promise) {\n    var methods = this.createResolveAndReject_();\n\n    // Calling then() would create an unnecessary extra promise.\n    promise.callWhenSettled_(methods.resolve, methods.reject);\n  };\n\n  /**\n   * Arrange to settle this promise in the same way as the given thenable.\n   * @private\n   * @param {function(\n   *     function((TYPE|IThenable<TYPE>|Thenable|null)=),\n   *     function(*=))\n   * } thenMethod\n   * @param {!Thenable} thenable\n   */\n  PolyfillPromise.prototype.settleSameAsThenable_ = function(\n      thenMethod, thenable) {\n    var methods = this.createResolveAndReject_();\n\n    // Don't trust an unknown thenable implementation not to throw exceptions.\n    try {\n      thenMethod.call(thenable, methods.resolve, methods.reject);\n    } catch (error) {\n      methods.reject(error);\n    }\n  };\n\n  /** @override */\n  PolyfillPromise.prototype.then = function(onFulfilled, onRejected) {\n    var resolveChild;\n    var rejectChild;\n    var childPromise = new PolyfillPromise(function(resolve, reject) {\n      resolveChild = resolve;\n      rejectChild = reject;\n    });\n    function createCallback(paramF, defaultF) {\n      // The spec says to ignore non-function values for onFulfilled and\n      // onRejected\n      if (typeof paramF == 'function') {\n        return function(x) {\n          try {\n            resolveChild(paramF(x));\n          } catch (error) {\n            rejectChild(error);\n          }\n        };\n      } else {\n        return defaultF;\n      }\n    }\n\n    this.callWhenSettled_(\n        createCallback(onFulfilled, resolveChild),\n        createCallback(onRejected, rejectChild));\n    return childPromise;\n  };\n\n  /** @override */\n  PolyfillPromise.prototype.catch = function(onRejected) {\n    return this.then(undefined, onRejected);\n  };\n\n\n  PolyfillPromise.prototype.callWhenSettled_ = function(\n      onFulfilled, onRejected) {\n    var /** !PolyfillPromise */ thisPromise = this;\n    function callback() {\n      switch (thisPromise.state_) {\n        case PromiseState.FULFILLED:\n          onFulfilled(thisPromise.result_);\n          break;\n        case PromiseState.REJECTED:\n          onRejected(thisPromise.result_);\n          break;\n        default:\n          throw new Error('Unexpected state: ' + thisPromise.state_);\n      }\n    }\n    if (this.onSettledCallbacks_ == null) {\n      // we've already settled\n      asyncExecutor.asyncExecute(callback);\n    } else {\n      this.onSettledCallbacks_.push(callback);\n    }\n  };\n\n  // called locally, so give it a name\n  function resolvingPromise(opt_value) {\n    if (opt_value instanceof PolyfillPromise) {\n      return opt_value;\n    } else {\n      return new PolyfillPromise(function(resolve, reject) {\n        resolve(opt_value);\n      });\n    }\n  }\n  PolyfillPromise['resolve'] = resolvingPromise;\n\n\n  PolyfillPromise['reject'] = function(opt_reason) {\n    return new PolyfillPromise(function(resolve, reject) {\n      reject(opt_reason);\n    });\n  };\n\n\n  PolyfillPromise['race'] = function(thenablesOrValues) {\n    return new PolyfillPromise(function(resolve, reject) {\n      var /** !Iterator<*> */ iterator =\n          $jscomp.makeIterator(thenablesOrValues);\n      for (var /** !IIterableResult<*> */ iterRec = iterator.next();\n           !iterRec.done;\n           iterRec = iterator.next()) {\n        // Using resolvingPromise() allows us to treat all elements the same\n        // way.\n        // NOTE: resolvingPromise(promise) always returns the argument\n        // unchanged.\n        // Using .callWhenSettled_() instead of .then() avoids creating an\n        // unnecessary extra promise.\n        resolvingPromise(iterRec.value).callWhenSettled_(resolve, reject);\n      }\n    });\n  };\n\n\n  PolyfillPromise['all'] = function(thenablesOrValues) {\n    var /** !Iterator<*> */ iterator = $jscomp.makeIterator(thenablesOrValues);\n    var /** !IIterableResult<*> */ iterRec = iterator.next();\n\n    if (iterRec.done) {\n      return resolvingPromise([]);\n    } else {\n      return new PolyfillPromise(function(resolveAll, rejectAll) {\n        var resultsArray = [];\n        var unresolvedCount = 0;\n\n        function onFulfilled(i) {\n          return function(ithResult) {\n            resultsArray[i] = ithResult;\n            unresolvedCount--;\n            if (unresolvedCount == 0) {\n              resolveAll(resultsArray);\n            }\n          };\n        }\n\n        do {\n          resultsArray.push(undefined);\n          unresolvedCount++;\n          // Using resolvingPromise() allows us to treat all elements the same\n          // way.\n          // NOTE: resolvingPromise(promise) always returns the argument\n          // unchanged. Using .callWhenSettled_() instead of .then() avoids\n          // creating an unnecessary extra promise.\n          resolvingPromise(iterRec.value)\n              .callWhenSettled_(\n                  onFulfilled(resultsArray.length - 1), rejectAll);\n          iterRec = iterator.next();\n        } while (!iterRec.done);\n      });\n    }\n  };\n\n  return PolyfillPromise;\n}, 'es6', 'es3');\n",
    "/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require es6/util/arrayiterator';\n'require util/defineproperty';\n'require util/global';\n\n/** @const {string} */\n$jscomp.SYMBOL_PREFIX = 'jscomp_symbol_';\n\n\n/**\n * Initializes the Symbol function.\n * @suppress {reportUnknownTypes}\n */\n$jscomp.initSymbol = function() {\n  // Only need to do this once. All future calls are no-ops.\n  $jscomp.initSymbol = function() {};\n\n  if (!$jscomp.global['Symbol']) {\n    $jscomp.global['Symbol'] = $jscomp.Symbol;\n  }\n};\n\n\n/**\n * Produces \"symbols\" (actually just unique strings).\n * @param {string=} opt_description\n * @return {symbol}\n */\n$jscomp.Symbol = /** @type {function(): !Function} */ (function() {\n  var counter = 0;\n  /**\n   * @param {string=} opt_description\n   * @return {symbol}\n   * @suppress {reportUnknownTypes}\n   */\n  function Symbol(opt_description) {\n    return /** @type {?} */ (\n        $jscomp.SYMBOL_PREFIX + (opt_description || '') + (counter++));\n  }\n  return Symbol;\n})();\n\n\n/**\n * Initializes Symbol.iterator (if it's not already defined) and adds a\n * Symbol.iterator property to the Array prototype.\n * @suppress {reportUnknownTypes}\n */\n$jscomp.initSymbolIterator = function() {\n  $jscomp.initSymbol();\n  var symbolIterator = $jscomp.global['Symbol'].iterator;\n  if (!symbolIterator) {\n    symbolIterator = $jscomp.global['Symbol'].iterator =\n        $jscomp.global['Symbol']('iterator');\n  }\n\n  if (typeof Array.prototype[symbolIterator] != 'function') {\n    $jscomp.defineProperty(\n        Array.prototype, symbolIterator, {\n          configurable: true,\n          writable: true,\n          /**\n           * @this {Array}\n           * @return {!IteratorIterable}\n           */\n          value: function() {\n            return $jscomp.iteratorPrototype(\n                $jscomp.arrayIteratorImpl(this));\n          }\n        });\n  }\n\n  // Only need to do this once. All future calls are no-ops.\n  $jscomp.initSymbolIterator = function() {};\n};\n\n\n/**\n * Initializes Symbol.asyncIterator (if it's not already defined)\n * @suppress {reportUnknownTypes}\n */\n$jscomp.initSymbolAsyncIterator = function() {\n  $jscomp.initSymbol();\n  var symbolAsyncIterator = $jscomp.global['Symbol'].asyncIterator;\n  if (!symbolAsyncIterator) {\n    symbolAsyncIterator = $jscomp.global['Symbol'].asyncIterator =\n        $jscomp.global['Symbol']('asyncIterator');\n  }\n\n  // Only need to do this once. All future calls are no-ops.\n  $jscomp.initSymbolAsyncIterator = function() {};\n};\n\n\n/**\n * Returns an iterator with the given `next` method.  Passing\n * all iterators through this function allows easily extending\n * the definition of `%IteratorPrototype%` if methods are ever\n * added to it in the future.\n *\n * @param {function(this: Iterator<T>): T} next\n * @return {!IteratorIterable<T>}\n * @template T\n * @suppress {reportUnknownTypes}\n */\n$jscomp.iteratorPrototype = function(next) {\n  $jscomp.initSymbolIterator();\n\n  var iterator = {next: next};\n  /**\n   * @this {IteratorIterable}\n   * @return {!IteratorIterable}\n   */\n  iterator[$jscomp.global['Symbol'].iterator] = function() { return this; };\n  return /** @type {!IteratorIterable} */ (iterator);\n};\n",
    "/*\n * Copyright 2018 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require base';\n'require es6/symbol';\n'require es6/util/setprototypeof';\n'require es6/util/makeiterator';\n\n/**\n * @fileoverview Implementation for $jscomp.generator\n *\n * This closure-compiler internal JavaScript library provides an ES3-compatible\n * API for writing generator functions using a minimum of boilerplate.\n *\n * Example:\n * ```javascript\n * // yields numbers starting with the given value, then incrementing by the\n * // value supplied to the next() method until the computed value is <= min or\n * // >= max. Then it returns the total number of times it yielded.\n * // If the client code calls throw(), the error will be logged and then\n * // yielded, but the generator won't terminate.\n * function *es6Definition(start, min, max) {\n *   let currentValue = start;\n *   let yieldCount = 0;\n *   while (currentValue > min && currentValue < max) {\n *     try {\n *       currentValue += yield(currentValue);\n *     } catch (e) {\n *       yield(e);\n *       console.log('client threw error', e);\n *     } finally {\n *       yieldCount++;\n *     }\n *   }\n *   return [yieldCount, currentValue];\n * }\n *\n * function es3Definition(start, min, max) {\n *   var currentValue;\n *   var yieldCount;\n *   var e;\n *\n *   return $jscomp.generator.createGenerator(\n *       es3Definition,\n *       function (context$) {\n *         switch (context$.nextAddress) {\n *           case 1: // execution always starts with 1\n *             currentValue = start;\n *             yieldCount = 0;\n *             // fall-through\n *\n *           case 2:\n *             if (!(currentValue > min && currentValue < max)) {\n *               // exit while loop:\n *               return context$.jumpTo(3);\n *             }\n *             // try {\n *             JSCompiler_temp_const$jscomp$1 = currentValue;\n *             context$.setCatchFinallyBlocks(4, 5);\n *             return context$.yield(currentValue, 7);\n *\n *           case 7:\n *             currentValue =\n *                 JSCompiler_temp_const$jscomp$1 + context$.yieldResult;\n *             // fall-through: execute finally block\n *\n *           case 5: // finally block start\n *             context$.enterFinallyBlock();\n *             yieldCount++;\n *             return context$.leaveFinallyBlock(6);\n *\n *           case 4: // catch block start\n *             e = context$.enterCatchBlock();\n *             return context$.yield(e, 8);\n *\n *           case 8: // finish catch block\n *             console.log('client threw error', e);\n *             return context$.jumpTo(5);\n *\n *           case 6:\n *             context$.jumpTo(2);\n *             break;\n *\n *           case 3:\n *             // come back here when while loop block exits\n *             return context$.return([yieldCount, currentValue]);\n *         }\n *       }\n *   });\n * };\n * ```\n */\n\n/** @const */\n$jscomp.generator = {};\n\n/**\n * Ensures that the iterator result is actually an object.\n *\n * @private\n * @final\n * @param {*} result\n * @return {void}\n * @throws {TypeError} if the result is not an instenace of Object.\n */\n$jscomp.generator.ensureIteratorResultIsObject_ = function(result) {\n  if (result instanceof Object) {\n    return;\n  }\n  throw new TypeError('Iterator result ' + result + ' is not an object');\n};\n\n\n/**\n * Tracks state machine state used by generator.Engine.\n *\n * @template VALUE\n * @constructor\n * @final\n * @struct\n */\n$jscomp.generator.Context = function() {\n  /**\n   * Whether the generator program is being executed at the moment in the\n   * current context. Is used to prevent reentrancy.\n   *\n   * @private\n   * @type {boolean}\n   */\n  this.isRunning_ = false;\n\n  /**\n   * An iterator that should yield all its values before the main program can\n   * continue.\n   *\n   * @private\n   * @type {?Iterator<VALUE>}\n   */\n  this.yieldAllIterator_ = null;\n\n  /**\n   * The value that will be sent to the program as the result of suspended\n   * yield expression.\n   *\n   * @type {?}\n   */\n  this.yieldResult = undefined;\n\n  /**\n   * The next address where the state machine execution should be resumed.\n   *\n   * <p>Program execution starts at 1 and ends at 0.\n   *\n   * @type {number}\n   */\n  this.nextAddress = 1;\n\n  /**\n   * The address that should be executed once an exception is thrown.\n   *\n   * <p>Value of 0 means no catch block exist that would handles an exception.\n   *\n   * @private\n   * @type {number}\n   */\n  this.catchAddress_ = 0;\n\n  /**\n   * The address that should be executed once the result is being returned\n   * or if the exception is thrown and there is no catchAddress specified.\n   *\n   * <p>Value of 0 means no finally block is set.\n   *\n   * @private\n   * @type {number}\n   */\n  this.finallyAddress_ = 0;\n\n  /**\n   * Stores information for the runtime propagation of values and control\n   * flow such as the behaviour of statements (break, continue, return and\n   * throw) that perform nonlocal transfers of control.\n   *\n   * @private\n   * @type {null|{return: VALUE}|{exception, isException: boolean}|{jumpTo: number}}.\n   */\n  this.abruptCompletion_ = null;\n\n  /**\n   * The preserved abruptCompletion_ when entering a `finally` block. If\n   * the `finally` block completes normally the preserved abruptCompletion_ is\n   * restored:\n   * <pre>\n   * try {\n   * } finally {  // nesting level 0\n   *   // abruptCompletion_ is saved in finallyContexts_[0]\n   *   try {\n   *   } finally {  // nesting level 1\n   *     // abruptCompletion_ is saved in finallyContexts_[1]\n   *     ...\n   *     // abruptCompletion_ is restored from finallyContexts_[1]\n   *   }\n   *   // abruptCompletion_ is restored from finallyContexts_[0]\n   * }\n   * <pre>\n   *\n   * @private\n   * @type {?Array<null|{return: VALUE}|{exception, isException: boolean}|{jumpTo: number}>}.\n   */\n  this.finallyContexts_ = null;\n};\n\n/**\n * Marks generator program as being run.\n *\n * @private\n * @final\n * @return {void}\n * @throws {TypeError} if generator is already running.\n */\n$jscomp.generator.Context.prototype.start_ = function() {\n  if (this.isRunning_) {\n    throw new TypeError('Generator is already running');\n  }\n  this.isRunning_ = true;\n};\n\n/**\n *\n *\n * @private\n * @final\n * @return {void}\n */\n$jscomp.generator.Context.prototype.stop_ = function() {\n  this.isRunning_ = false;\n};\n\n/**\n * Transfers program execution to an appropriate catch/finally block that\n * should be executed if exception occurs.\n *\n * @private\n * @final\n * @return {void}\n */\n$jscomp.generator.Context.prototype.jumpToErrorHandler_ = function() {\n  this.nextAddress = this.catchAddress_ || this.finallyAddress_;\n};\n\n/**\n * Sets the result of suspended yield expression.\n *\n * @private\n * @final\n * @param {?=} value The value to send to the generator.\n * @return {void}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Context.prototype.next_ = function(value) {\n  this.yieldResult = value;\n};\n\n/**\n * Throws exception as the result of suspended yield.\n *\n * @private\n * @final\n * @param {?} e\n * @return {void}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Context.prototype.throw_ = function(e) {\n  this.abruptCompletion_ = {exception: e, isException: true};\n  this.jumpToErrorHandler_();\n};\n\n/**\n * Returns a value as the result of generator function.\n *\n * @final\n * @param {VALUE=} value\n * @return {void}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Context.prototype.return = function(value) {\n  this.abruptCompletion_ = {return: /** @type {VALUE} */ (value)};\n  this.nextAddress = this.finallyAddress_;\n};\n\n/**\n * Changes the context so the program execution will continue from the given\n * state after executing nessesary pending finally blocks first.\n *\n * @final\n * @param {number} nextAddress The state that should be run.\n * @return {void}\n */\n$jscomp.generator.Context.prototype.jumpThroughFinallyBlocks = function(\n    nextAddress) {\n  this.abruptCompletion_ = {jumpTo: nextAddress};\n  this.nextAddress = this.finallyAddress_;\n};\n\n/**\n * Pauses the state machine program assosiated with generator function to yield\n * a value.\n *\n * @final\n * @param {VALUE} value The value to return from the generator function via\n *     the iterator protocol.\n * @param {number} resumeAddress The address where the program should resume.\n * @return {{value: VALUE}}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Context.prototype.yield = function(value, resumeAddress) {\n  this.nextAddress = resumeAddress;\n  return {value: value};\n};\n\n/**\n * Causes the state machine program to yield all values from an iterator.\n *\n * @final\n * @param {string|!Iterator<VALUE>|!Iterable<VALUE>|!Arguments<VALUE>} iterable\n *     Iterator to yeild all values from.\n * @param {number} resumeAddress The address where the program should resume.\n * @return {void | {value: VALUE}}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Context.prototype.yieldAll = function(\n    iterable, resumeAddress) {\n  /** @const @type {!Iterator<VALUE>} */ var iterator =\n      $jscomp.makeIterator(iterable);\n  /** @const */ var result = iterator.next();\n  $jscomp.generator.ensureIteratorResultIsObject_(result);\n  if (result.done) {\n    // If `someGenerator` in `x = yield *someGenerator` completes immediately,\n    // x is the return value of that generator.\n    this.yieldResult = result.value;\n    this.nextAddress = resumeAddress;\n    return;\n  }\n  this.yieldAllIterator_ = iterator;\n  return this.yield(result.value, resumeAddress);\n};\n\n/**\n * Changes the context so the program execution will continue from the given\n * state.\n *\n * @final\n * @param {number} nextAddress The state the program should continue\n * @return {void}\n */\n$jscomp.generator.Context.prototype.jumpTo = function(nextAddress) {\n  this.nextAddress = nextAddress;\n};\n\n/**\n * Changes the context so the program execution ends.\n *\n * @final\n * @return {void}\n */\n$jscomp.generator.Context.prototype.jumpToEnd = function() {\n  this.nextAddress = 0;\n};\n\n/**\n * Sets catch / finally handlers.\n * Used for try statements with catch blocks.\n *\n * @final\n * @param {number} catchAddress The address of the catch block.\n * @param {number=} finallyAddress The address of the finally block.\n * @return {void}\n */\n$jscomp.generator.Context.prototype.setCatchFinallyBlocks = function(\n    catchAddress, finallyAddress) {\n  this.catchAddress_ = catchAddress;\n  if (finallyAddress != undefined) {\n    this.finallyAddress_ = finallyAddress;\n  }\n};\n\n/**\n * Sets finally handler.\n * Used for try statements without catch blocks.\n *\n * @const\n * @param {number=} finallyAddress The address of the finally block or 0.\n * @return {void}\n */\n$jscomp.generator.Context.prototype.setFinallyBlock = function(finallyAddress) {\n  this.catchAddress_ = 0;\n  this.finallyAddress_ = finallyAddress || 0;\n};\n\n/**\n * Sets a catch handler and jumps to the next address.\n * Used for try statements without finally blocks.\n *\n * @final\n * @param {number} nextAddress The state that should be run next.\n * @param {number=} catchAddress The address of the catch block or 0.\n * @return {void}\n */\n$jscomp.generator.Context.prototype.leaveTryBlock = function(\n    nextAddress, catchAddress) {\n  this.nextAddress = nextAddress;\n  this.catchAddress_ = catchAddress || 0;\n};\n\n/**\n * Initializes exception variable in the beginning of catch block.\n *\n * @final\n * @param {number=} nextCatchBlockAddress The address of the next catch block\n *     that is preceded by no finally blocks.\n * @return {?} Returns an exception that was thrown from \"try\" block.\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Context.prototype.enterCatchBlock = function(\n    nextCatchBlockAddress) {\n  this.catchAddress_ = nextCatchBlockAddress || 0;\n  /** @const */ var exception =\n      /** @type {{exception, isException: boolean}} */ (this.abruptCompletion_)\n          .exception;\n  this.abruptCompletion_ = null;\n  return exception;\n};\n\n/**\n * Saves the current throw context which will be restored at the end of finally\n * block.\n *\n * @final\n * @param {number=} nextCatchAddress\n * @param {number=} nextFinallyAddress\n * @param {number=} finallyDepth The nesting level of current \"finally\" block.\n * @return {void}\n */\n$jscomp.generator.Context.prototype.enterFinallyBlock = function(\n    nextCatchAddress, nextFinallyAddress, finallyDepth) {\n  if (!finallyDepth) {\n    this.finallyContexts_ = [this.abruptCompletion_];\n  } else {\n    /**\n     * @type {!Array<null|{return: VALUE}|{exception, isException: boolean}|{jumpTo: number}>}\n     */\n    (this.finallyContexts_)[finallyDepth] = this.abruptCompletion_;\n  }\n  this.catchAddress_ = nextCatchAddress || 0;\n  this.finallyAddress_ = nextFinallyAddress || 0;\n};\n\n/**\n * Figures out whether the program execution should continue normally, or jump\n * to the closest catch/finally block.\n *\n * @final\n * @param {number} nextAddress The state that should be run next.\n * @param {number=} finallyDepth The nesting level of current \"finally\" block.\n * @return {void}\n * @suppress {strictMissingProperties}\n */\n$jscomp.generator.Context.prototype.leaveFinallyBlock = function(\n    nextAddress, finallyDepth) {\n  // There could be trailing finally contexts if a nested finally throws an\n  // exception or return.\n  // e.g.\n  // try {\n  //   ...\n  //   return 1;\n  // } finally {\n  //   // finallyDepth == 0\n  //   // finallyContext == [{return: 1}]\n  //   try {\n  //     ...\n  //     try {\n  //       throw new Error(2);\n  //     } finally {\n  //       // finallyDepth == 1\n  //       // finallyContext == [{return: 1}, {exception: Error(2)}]\n  //       try {\n  //         throw new Error(3);\n  //       } finally {\n  //         // finallyDepth == 2\n  //         // finallyContext == [\n  //         //     {return: 1},\n  //         //     {exception: Error(2)},\n  //         //     {exception: Error(3)}\n  //         // ]\n  //         throw new Error(4); // gets written in abruptCompletion_\n  //         // leaveFinallyBlock() never gets called here\n  //       }\n  //       // leaveFinallyBlock() never gets called here\n  //     }\n  //   } catch (e) {\n  //      // swallow error\n  //      // abruptCompletion becomes null\n  //   } finally {\n  //     // finallyDepth == 1\n  //     // finallyContext == [\n  //     //     {return: 1},\n  //     //     null, // overwritten, because catch swallowed the error\n  //     //     {exception: Error(3)}  // left over\n  //     // ]\n  //     // leaveFinallyBlock() called here\n  //     // finallyContext == [{return: 1}]\n  //     // abruptCompletion == null\n  //   }\n  //   // leaveFinallyBlock() called here\n  //   // finallyContext = []\n  //   // abruptCompletion == {return: 1};\n  // }\n  /** @const */ var preservedContext =\n      /**\n       * @type {!Array<null|{return: VALUE}|{exception, isException: boolean}|{jumpTo: number}>}\n       */\n      (this.finallyContexts_).splice(finallyDepth || 0)[0];\n  /** @const */ var abruptCompletion = this.abruptCompletion_ =\n      this.abruptCompletion_ || preservedContext;\n  if (abruptCompletion) {\n    if (abruptCompletion.isException) {\n      return this.jumpToErrorHandler_();\n    }\n    // Check if there is a pending break/continue jump that is not preceded by\n    // finally blocks that should be executed before.\n    // We always generate case numbers for the start and end of loops before\n    // numbers for anything they contain, so any finally blocks within will be\n    // guaranteed to have higher addresses than the loop break and continue\n    // positions.\n    // e.g.\n    // l1: while (...) {            // generated addresses: 100: break l1;\n    //       try {                  // generated addresses: 101: finally,\n    //         try {                // generated addresses: 102: finally,\n    //           l2: while (...) {  // generated addresses: 103: break l2;\n    //\n    //                 if (...) {\n    //                   break l1;  // becomes\n    //                              // $context.jumpThroughFinallyBlocks(101),\n    //                              // since 2 finally blocks must be crossed\n    //                 }\n    //                 break l2;    // becomes $context.jumpTo(103)\n    //               }\n    //         } finally {\n    //           // When leaving this finally block:\n    //           // 1. We keep the abrupt completion indicating 'break l1'\n    //           // 2. We jump to the enclosing finally block.\n    //         }\n    //       } finally {\n    //         // When leaving this finally block:\n    //         // 1. We complete the abruptCompletion indicating 'break l1' by\n    //         //   jumping to the loop start address.\n    //         // 2. Abrupt completion is now null, so normal execution\n    //         //   continues from there.\n    //       }\n    //     }\n    if (abruptCompletion.jumpTo != undefined &&\n        this.finallyAddress_ < abruptCompletion.jumpTo) {\n      this.nextAddress = abruptCompletion.jumpTo;\n      this.abruptCompletion_ = null;\n    } else {\n      this.nextAddress = this.finallyAddress_;\n    }\n  } else {\n    this.nextAddress = nextAddress;\n  }\n};\n\n/**\n * Is used in transpilation of `for in` statements.\n *\n * <p><code>for (var i in obj) {...}</code> becomes:\n * <pre>\n * for (var i, $for$in = context$.forIn(obj);\n *      (i = $for$in.getNext()) != null;\n *      ) {\n *   ...\n * }\n * </pre>\n *\n * @final\n * @param {?} object\n * @return {!$jscomp.generator.Context.PropertyIterator}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Context.prototype.forIn = function(object) {\n  return new $jscomp.generator.Context.PropertyIterator(object);\n};\n\n/**\n * @constructor\n * @final\n * @struct\n * @param {?} object\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Context.PropertyIterator = function(object) {\n  /**\n   * @private\n   * @const\n   * @type {?}\n   */\n  this.object_ = object;\n\n  /**\n   * @private\n   * @const\n   * @type {!Array<string>}\n   */\n  this.properties_ = [];\n\n  for (var property in /** @type {!Object} */ (object)) {\n    this.properties_.push(property);\n  }\n  this.properties_.reverse();\n};\n\n/**\n * Returns the next object's property that is still valid.\n *\n * @final\n * @return {?string}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Context.PropertyIterator.prototype.getNext = function() {\n  // The JS spec does not require that properties added after the loop begins\n  // be included in the loop, but it does require that the current property\n  // must still exist on the object when the loop iteration starts.\n  while (this.properties_.length > 0) {\n    /** @const */ var property = this.properties_.pop();\n    if (property in /** @type {!Object} */ (this.object_)) {\n      return property;\n    }\n  }\n  return null;\n};\n\n/**\n * Engine handling execution of a state machine associated with the generator\n * program and its context.\n *\n * @private\n * @template VALUE\n * @constructor\n * @final\n * @struct\n * @param {function(!$jscomp.generator.Context<VALUE>): (void|{value: VALUE})} program\n */\n$jscomp.generator.Engine_ = function(program) {\n  /**\n   * @private\n   * @const\n   * @type {!$jscomp.generator.Context<VALUE>}\n   */\n  this.context_ = new $jscomp.generator.Context();\n\n  /**\n   * @private\n   * @const\n   * @type {function(!$jscomp.generator.Context<VALUE>): (void|{value: VALUE})}\n   */\n  this.program_ = program;\n};\n\n/**\n * Returns an object with two properties done and value.\n * You can also provide a parameter to the next method to send a value to the\n * generator.\n *\n * @private\n * @final\n * @param {?=} value The value to send to the generator.\n * @return {!IIterableResult<VALUE>}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Engine_.prototype.next_ = function(value) {\n  this.context_.start_();\n  if (this.context_.yieldAllIterator_) {\n    return this.yieldAllStep_(\n        this.context_.yieldAllIterator_.next, value, this.context_.next_);\n  }\n  this.context_.next_(value);\n  return this.nextStep_();\n};\n\n/**\n * Attempts to finish the generator with a given value.\n *\n * @private\n * @final\n * @param {VALUE} value The value to return.\n * @return {!IIterableResult<VALUE>}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Engine_.prototype.return_ = function(value) {\n  this.context_.start_();\n  /** @const */ var yieldAllIterator = this.context_.yieldAllIterator_;\n  if (yieldAllIterator) {\n    /** @const @type {function(VALUE): !IIterableResult<VALUE>} */ var\n        returnFunction =\n            'return' in yieldAllIterator ? yieldAllIterator['return'] :\n                                           function(v) {\n                                             return {value: v, done: true};\n                                           };\n    return this.yieldAllStep_(returnFunction, value, this.context_.return);\n  }\n  this.context_.return(value);\n  return this.nextStep_();\n};\n\n/**\n * Resumes the execution of a generator by throwing an error into it and\n * returns an object with two properties done and value.\n *\n * @private\n * @final\n * @param {?} exception The exception to throw.\n * @return {!IIterableResult<VALUE>}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Engine_.prototype.throw_ = function(exception) {\n  this.context_.start_();\n  if (this.context_.yieldAllIterator_) {\n    return this.yieldAllStep_(\n        this.context_.yieldAllIterator_['throw'], exception,\n        this.context_.next_);\n  }\n  this.context_.throw_(exception);\n  return this.nextStep_();\n};\n\n/**\n * Redirects next/throw/return method calls to an iterator passed to \"yield *\".\n *\n * @private\n * @final\n * @template T\n * @param {function(this:Iterator<VALUE>, T): !IIterableResult<VALUE>} action\n * @param {T} value\n * @param {function(this:$jscomp.generator.Context, VALUE): void} nextAction\n * @return {!IIterableResult<VALUE>}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Engine_.prototype.yieldAllStep_ = function(\n    action, value, nextAction) {\n  try {\n    /** @const */ var result = action.call(\n        /** @type {!Iterator<VALUE>} */ (this.context_.yieldAllIterator_),\n        value);\n    $jscomp.generator.ensureIteratorResultIsObject_(result);\n    if (!result.done) {\n      this.context_.stop_();\n      return result;\n    }\n    // After `x = yield *someGenerator()` x is the return value of the\n    // generator, not a value passed to this generator by the next() method.\n    /** @const */ var resultValue = result.value;\n  } catch (e) {\n    this.context_.yieldAllIterator_ = null;\n    this.context_.throw_(e);\n    return this.nextStep_();\n  }\n  this.context_.yieldAllIterator_ = null;\n  nextAction.call(this.context_, resultValue);\n  return this.nextStep_();\n};\n\n/**\n * Continues/resumes program execution until the next suspension point (yield).\n *\n * @private\n * @final\n * @return {!IIterableResult<VALUE>}\n * @suppress {reportUnknownTypes, strictMissingProperties}\n */\n$jscomp.generator.Engine_.prototype.nextStep_ = function() {\n  while (this.context_.nextAddress) {\n    try {\n      /** @const */ var yieldValue = this.program_(this.context_);\n      if (yieldValue) {\n        this.context_.stop_();\n        return {value: yieldValue.value, done: false};\n      }\n    } catch (e) {\n      this.context_.yieldResult = undefined;\n      this.context_.throw_(e);\n    }\n  }\n\n  this.context_.stop_();\n  if (this.context_.abruptCompletion_) {\n    /** @const */ var abruptCompletion = this.context_.abruptCompletion_;\n    this.context_.abruptCompletion_ = null;\n    if (abruptCompletion.isException) {\n      throw abruptCompletion.exception;\n    }\n    return {value: abruptCompletion.return, done: true};\n  }\n  return {value: /** @type {?} */ (undefined), done: true};\n};\n\n/**\n * The Generator object that is returned by a generator function and it\n * conforms to both the iterable protocol and the iterator protocol.\n *\n * @private\n * @template VALUE\n * @constructor\n * @final\n * @implements {Generator<VALUE>}\n * @param {!$jscomp.generator.Engine_<VALUE>} engine\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Generator_ = function(engine) {\n  /** @const @override */\n  this.next = function(opt_value) {\n    return engine.next_(opt_value);\n  };\n\n  /** @const @override */\n  this.throw = function(exception) {\n    return engine.throw_(exception);\n  };\n\n  /** @const @override */\n  this.return = function(value) {\n    return engine.return_(value);\n  };\n\n  $jscomp.initSymbolIterator();\n\n  /** @this {$jscomp.generator.Generator_<VALUE>} */\n  this[Symbol.iterator] = function() {\n    return this;\n  };\n\n  // TODO(skill): uncomment once Symbol.toStringTag is polyfilled:\n  // this[Symbol.toStringTag] = 'Generator';\n};\n\n/**\n * Creates a generator backed up by Engine running a given program.\n *\n * @final\n * @template VALUE\n * @param {function(this:?, ...): (!Iterator<VALUE>|!Iterable<VALUE>)} generator\n * @param {function(!$jscomp.generator.Context<VALUE>): (void|{value: VALUE})} program\n * @return {!Generator<VALUE>}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.createGenerator = function(generator, program) {\n  /** @const */ var result =\n      new $jscomp.generator.Generator_(new $jscomp.generator.Engine_(program));\n  // The spec says that `myGenFunc() instanceof myGenFunc` must be true.\n  // We'll make this work by setting the prototype before calling the\n  // constructor every time. All of the methods of the object are defined on the\n  // instance by the constructor, so this does no harm.\n  // We also cast Generator_ to Object to hide dynamic inheritance from\n  // jscompiler, it makes ConformanceRules$BanUnknownThis happy.\n  if ($jscomp.setPrototypeOf) {\n    /** @type {function(!Object, ?Object): !Object} */ ($jscomp.setPrototypeOf)(\n        result, generator.prototype);\n  }\n  return result;\n};\n",
    "/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require base';\n'require es6/promise';\n'require es6/generator_engine';\n\n/**\n * Handles the execution of an async function.\n *\n * An async function, foo(a, b), will be rewritten as:\n *\n * ```\n * function foo(a, b) {\n *   let $jscomp$async$this = this;\n *   let $jscomp$async$arguments = arguments;\n *   let $jscomp$async$super$get$x = () => super.x;\n *   function* $jscomp$async$generator() {\n *     // original body of foo() with:\n *     // - await (x) replaced with yield (x)\n *     // - arguments replaced with $jscomp$async$arguments\n *     // - this replaced with $jscomp$async$this\n *     // - super.x replaced with $jscomp$async$super$get$x()\n *     // - super.x(5) replaced with  $jscomp$async$super$get$x()\n *     //      .call($jscomp$async$this, 5)\n *   }\n *   return $jscomp.executeAsyncGenerator($jscomp$async$generator());\n * }\n * ```\n * @param {!Generator<?>} generator\n * @return {!Promise<?>}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.asyncExecutePromiseGenerator = function(generator) {\n  function passValueToGenerator(value) {\n    return generator.next(value);\n  }\n\n  function passErrorToGenerator(error) {\n    return generator.throw(error);\n  }\n\n  return new Promise(function(resolve, reject) {\n    function handleGeneratorRecord(/** !IIterableResult<*> */ genRec) {\n      if (genRec.done) {\n        resolve(genRec.value);\n      } else {\n        // One can await a non-promise, so genRec.value\n        // might not already be a promise.\n        Promise.resolve(genRec.value)\n            .then(passValueToGenerator, passErrorToGenerator)\n            .then(handleGeneratorRecord, reject);\n      }\n    }\n\n    handleGeneratorRecord(generator.next());\n  });\n};\n\n/**\n * Handles the execution of a generator function returning promises.\n *\n * An async function, foo(a, b), will be rewritten as:\n *\n * ```\n * function foo(a, b) {\n *   let $jscomp$async$this = this;\n *   let $jscomp$async$arguments = arguments;\n *   let $jscomp$async$super$get$x = () => super.x;\n *   return $jscomp.asyncExecutePromiseGeneratorFunction(\n *       function* () {\n *         // original body of foo() with:\n *         // - await (x) replaced with yield (x)\n *         // - arguments replaced with $jscomp$async$arguments\n *         // - this replaced with $jscomp$async$this\n *         // - super.x replaced with $jscomp$async$super$get$x()\n *         // - super.x(5) replaced with  $jscomp$async$super$get$x()\n *         //      .call($jscomp$async$this, 5)\n *       });\n * }\n * ```\n * @param {function(): !Generator<?>} generatorFunction\n * @return {!Promise<?>}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.asyncExecutePromiseGeneratorFunction = function(generatorFunction) {\n  return $jscomp.asyncExecutePromiseGenerator(generatorFunction());\n};\n\n/**\n * Handles the execution of a state machine program that represents transpiled\n * async function.\n *\n * @final\n * @param {function(!$jscomp.generator.Context<?>): (void|{value: ?})} program\n * @return {!Promise<?>}\n * @suppress {reportUnknownTypes, visibility}\n */\n$jscomp.asyncExecutePromiseGeneratorProgram = function(program) {\n  return $jscomp.asyncExecutePromiseGenerator(\n      new $jscomp.generator.Generator_(\n          new $jscomp.generator.Engine_(\n              program)));\n};\n",
    "/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Utilities for iterator-returning methods.\n */\n'require es6/symbol';\n\n\n/**\n * Creates an iterator from an array-like, with a transformation function.\n * @param {!IArrayLike<INPUT>} array\n * @param {function(number, INPUT): OUTPUT} transform\n * @return {!IteratorIterable<OUTPUT>}\n * @template INPUT, OUTPUT\n * @suppress {checkTypes|reportUnknownTypes}\n */\n$jscomp.iteratorFromArray = function(array, transform) {\n  $jscomp.initSymbolIterator();\n  // NOTE: IE8 doesn't support indexing from boxed Strings.\n  if (array instanceof String) array = array + '';\n  var i = 0;\n  var iter = {\n    next: function() {\n      if (i < array.length) {\n        var index = i++;\n        return {value: transform(index, array[index]), done: false};\n      }\n      iter.next = function() { return {done: true, value: void 0}; };\n      return iter.next();\n    }\n  };\n  iter[Symbol.iterator] = function() { return iter; };\n  return iter;\n};\n",
    "/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require es6/util/iteratorfromarray';\n'require util/polyfill';\n\n// NOTE: Although Array.prototype.values was added to the 2015 edition of the\n// spec, we consider it an \"ES8\" feature because many browsers which are\n// otherwise ES6-compatible, have not implemented it due to web compatibility\n// issues. See https://bugs.chromium.org/p/chromium/issues/detail?id=615873\n$jscomp.polyfill('Array.prototype.values', function(orig) {\n  if (orig) return orig;\n\n  /**\n   * Returns an iterator of values of the given array.\n   *\n   * @this {!IArrayLike<VALUE>}\n   * @return {!IteratorIterable<VALUE>}\n   * @template VALUE\n   * @suppress {reportUnknownTypes}\n   */\n  var polyfill = function() {\n    return $jscomp.iteratorFromArray(this, function(k, v) { return v; });\n  };\n\n  return polyfill;\n}, 'es8', 'es3');\n",
    "/*\n * Copyright 2018 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview\n * @suppress {uselessCode}\n */\n'require util/owns';\n\n/**\n * Equivalent to the Object.assign() method, but guaranteed to be available for use in code\n * generated by the compiler.\n *\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n *\n * Copies values of all enumerable own properties from one or more\n * sources to the given target object, and returns the target.\n *\n * @final\n * @param {!Object} target The target object onto which to copy.\n * @param {...?Object} var_args The source objects.\n * @return {!Object} The target object is returned.\n */\n$jscomp.assign = (typeof Object.assign == 'function') ?\n    Object.assign :\n    /**\n     * @param {!Object} target\n     * @param {...?Object} var_args\n     * @return {!Object}\n     * @suppress {reportUnknownTypes}\n     */\n    function(target, var_args) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n        if (!source) continue;\n        for (var key in source) {\n          if ($jscomp.owns(source, key)) target[key] = source[key];\n        }\n      }\n      return target;\n    };\n",
    "/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require base';\n\n/**\n * Synonym for Object.prototype.hasOwnProperty.call(obj, prop).\n * @param {!Object} obj\n * @param {string} prop\n * @return {boolean}\n */\n$jscomp.owns = function(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n};\n",
    "/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview\n * @suppress {uselessCode}\n */\n'require es6/util/assign';\n'require util/polyfill';\n\n$jscomp.polyfill('Object.assign', function(orig) {\n  return orig || $jscomp.assign;\n}, 'es6', 'es3');\n",
    "/**\n * Virtual DOM Node\n * @typedef VNode\n * @property {string | function} nodeName The string of the DOM node to create or Component constructor to render\n * @property {Array<VNode | string>} children The children of node\n * @property {string | number | undefined} key The key used to identify this VNode in a list\n * @property {object} attributes The properties of this VNode\n */\nexport const VNode = function VNode() {};\n",
    "/**\n * @typedef {import('./component').Component} Component\n * @typedef {import('./vnode').VNode} VNode\n */\n\n/**\n * Global options\n * @public\n * @typedef Options\n * @property {boolean} [syncComponentUpdates] If `true`, `prop` changes trigger synchronous component updates. Defaults to true.\n * @property {(vnode: VNode) => void} [vnode] Processes all created VNodes.\n * @property {(component: Component) => void} [afterMount] Hook invoked after a component is mounted.\n * @property {(component: Component) => void} [afterUpdate] Hook invoked after the DOM is updated with a component's latest render.\n * @property {(component: Component) => void} [beforeUnmount] Hook invoked immediately before a component is unmounted.\n * @property {(rerender: function) => void} [debounceRendering] Hook invoked whenever a rerender is requested. Can be used to debounce rerenders.\n * @property {(event: Event) => Event | void} [event] Hook invoked before any Preact event listeners. The return value (if any) replaces the native browser event given to event listeners\n */\n\n/** @type {Options}  */\nconst options = {};\n\nexport default options;\n",
    "import { VNode } from './vnode';\nimport options from './options';\n\n\nconst stack = [];\n\nconst EMPTY_CHILDREN = [];\n\n/**\n * JSX/hyperscript reviver.\n * @see http://jasonformat.com/wtf-is-jsx\n * Benchmarks: https://esbench.com/bench/57ee8f8e330ab09900a1a1a0\n *\n * Note: this is exported as both `h()` and `createElement()` for compatibility\n * reasons.\n *\n * Creates a VNode (virtual DOM element). A tree of VNodes can be used as a\n * lightweight representation of the structure of a DOM tree. This structure can\n * be realized by recursively comparing it against the current _actual_ DOM\n * structure, and applying only the differences.\n *\n * `h()`/`createElement()` accepts an element name, a list of attributes/props,\n * and optionally children to append to the element.\n *\n * @example The following DOM tree\n *\n * `<div id=\"foo\" name=\"bar\">Hello!</div>`\n *\n * can be constructed using this function as:\n *\n * `h('div', { id: 'foo', name : 'bar' }, 'Hello!');`\n *\n * @param {string | function} nodeName An element name. Ex: `div`, `a`, `span`, etc.\n * @param {object | null} attributes Any attributes/props to set on the created element.\n * @param {VNode[]} [rest] Additional arguments are taken to be children to\n *  append. Can be infinitely nested Arrays.\n *\n * @public\n */\nexport function h(nodeName, attributes) {\n\tlet children=EMPTY_CHILDREN, lastSimple, child, simple, i;\n\tfor (i=arguments.length; i-- > 2; ) {\n\t\tstack.push(arguments[i]);\n\t}\n\tif (attributes && attributes.children!=null) {\n\t\tif (!stack.length) stack.push(attributes.children);\n\t\tdelete attributes.children;\n\t}\n\twhile (stack.length) {\n\t\tif ((child = stack.pop()) && child.pop!==undefined) {\n\t\t\tfor (i=child.length; i--; ) stack.push(child[i]);\n\t\t}\n\t\telse {\n\t\t\tif (typeof child==='boolean') child = null;\n\n\t\t\tif ((simple = typeof nodeName!=='function')) {\n\t\t\t\tif (child==null) child = '';\n\t\t\t\telse if (typeof child==='number') child = String(child);\n\t\t\t\telse if (typeof child!=='string') simple = false;\n\t\t\t}\n\n\t\t\tif (simple && lastSimple) {\n\t\t\t\tchildren[children.length-1] += child;\n\t\t\t}\n\t\t\telse if (children===EMPTY_CHILDREN) {\n\t\t\t\tchildren = [child];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tchildren.push(child);\n\t\t\t}\n\n\t\t\tlastSimple = simple;\n\t\t}\n\t}\n\n\tlet p = new VNode();\n\tp.nodeName = nodeName;\n\tp.children = children;\n\tp.attributes = attributes==null ? undefined : attributes;\n\tp.key = attributes==null ? undefined : attributes.key;\n\n\t// if a \"vnode hook\" is defined, pass every created VNode to it\n\tif (options.vnode!==undefined) options.vnode(p);\n\n\treturn p;\n}\n",
    "/**\n * Copy all properties from `props` onto `obj`.\n * @param {object} obj Object onto which properties should be copied.\n * @param {object} props Object from which to copy properties.\n * @returns {object}\n * @private\n */\nexport function extend(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn obj;\n}\n\n/** Invoke or update a ref, depending on whether it is a function or object ref.\n *  @param {object|function} [ref=null]\n *  @param {any} [value]\n */\nexport function applyRef(ref, value) {\n\tif (ref!=null) {\n\t\tif (typeof ref=='function') ref(value);\n\t\telse ref.current = value;\n\t}\n}\n\n/**\n * Call a function asynchronously, as soon as possible. Makes\n * use of HTML Promise to schedule the callback if available,\n * otherwise falling back to `setTimeout` (mainly for IE<11).\n * @type {(callback: function) => void}\n */\nexport const defer = typeof Promise=='function' ? Promise.resolve().then.bind(Promise.resolve()) : setTimeout;\n",
    "// render modes\n\n/** Do not re-render a component */\nexport const NO_RENDER = 0;\n/** Synchronously re-render a component and its children */\nexport const SYNC_RENDER = 1;\n/** Synchronously re-render a component, even if its lifecycle methods attempt to prevent it. */\nexport const FORCE_RENDER = 2;\n/** Queue asynchronous re-render of a component and it's children */\nexport const ASYNC_RENDER = 3;\n\n\nexport const ATTR_KEY = '__preactattr_';\n\n/** DOM properties that should NOT have \"px\" added when numeric */\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i;\n\n",
    "import options from './options';\nimport { defer } from './util';\nimport { renderComponent } from './vdom/component';\n\n/**\n * Managed queue of dirty components to be re-rendered\n * @type {Array<import('./component').Component>}\n */\nlet items = [];\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./component').Component} component The component to rerender\n */\nexport function enqueueRender(component) {\n\tif (!component._dirty && (component._dirty = true) && items.push(component)==1) {\n\t\t(options.debounceRendering || defer)(rerender);\n\t}\n}\n\n/** Rerender all enqueued dirty components */\nexport function rerender() {\n\tlet p;\n\twhile ( (p = items.pop()) ) {\n\t\tif (p._dirty) renderComponent(p);\n\t}\n}\n",
    "import { extend } from '../util';\n\n\n/**\n * Check if two nodes are equivalent.\n * @param {import('../dom').PreactElement} node DOM Node to compare\n * @param {import('../vnode').VNode} vnode Virtual DOM node to compare\n * @param {boolean} [hydrating=false] If true, ignores component constructors\n *  when comparing.\n * @private\n */\nexport function isSameNodeType(node, vnode, hydrating) {\n\tif (typeof vnode==='string' || typeof vnode==='number') {\n\t\treturn node.splitText!==undefined;\n\t}\n\tif (typeof vnode.nodeName==='string') {\n\t\treturn !node._componentConstructor && isNamedNode(node, vnode.nodeName);\n\t}\n\treturn hydrating || node._componentConstructor===vnode.nodeName;\n}\n\n\n/**\n * Check if an Element has a given nodeName, case-insensitively.\n * @param {import('../dom').PreactElement} node A DOM Element to inspect the name of.\n * @param {string} nodeName Unnormalized name to compare against.\n */\nexport function isNamedNode(node, nodeName) {\n\treturn node.normalizedNodeName===nodeName || node.nodeName.toLowerCase()===nodeName.toLowerCase();\n}\n\n\n/**\n * Reconstruct Component-style `props` from a VNode.\n * Ensures default/fallback values from `defaultProps`:\n * Own-properties of `defaultProps` not present in `vnode.attributes` are added.\n * @param {import('../vnode').VNode} vnode The VNode to get props for\n * @returns {object} The props to use for this VNode\n */\nexport function getNodeProps(vnode) {\n\tlet props = extend({}, vnode.attributes);\n\tprops.children = vnode.children;\n\n\tlet defaultProps = vnode.nodeName.defaultProps;\n\tif (defaultProps!==undefined) {\n\t\tfor (let i in defaultProps) {\n\t\t\tif (props[i]===undefined) {\n\t\t\t\tprops[i] = defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn props;\n}\n",
    "import { IS_NON_DIMENSIONAL } from '../constants';\nimport { applyRef } from '../util';\nimport options from '../options';\n\n/**\n * A DOM event listener\n * @typedef {(e: Event) => void} EventListner\n */\n\n/**\n * A mapping of event types to event listeners\n * @typedef {Object.<string, EventListener>} EventListenerMap\n */\n\n/**\n * Properties Preact adds to elements it creates\n * @typedef PreactElementExtensions\n * @property {string} [normalizedNodeName] A normalized node name to use in diffing\n * @property {EventListenerMap} [_listeners] A map of event listeners added by components to this DOM node\n * @property {import('../component').Component} [_component] The component that rendered this DOM node\n * @property {function} [_componentConstructor] The constructor of the component that rendered this DOM node\n */\n\n/**\n * A DOM element that has been extended with Preact properties\n * @typedef {Element & ElementCSSInlineStyle & PreactElementExtensions} PreactElement\n */\n\n/**\n * Create an element with the given nodeName.\n * @param {string} nodeName The DOM node to create\n * @param {boolean} [isSvg=false] If `true`, creates an element within the SVG\n *  namespace.\n * @returns {PreactElement} The created DOM node\n */\nexport function createNode(nodeName, isSvg) {\n\t/** @type {PreactElement} */\n\tlet node = isSvg ? document.createElementNS('http://www.w3.org/2000/svg', nodeName) : document.createElement(nodeName);\n\tnode.normalizedNodeName = nodeName;\n\treturn node;\n}\n\n\n/**\n * Remove a child node from its parent if attached.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\n\n/**\n * Set a named attribute on the given Node, with special behavior for some names\n * and event handlers. If `value` is `null`, the attribute/handler will be\n * removed.\n * @param {PreactElement} node An element to mutate\n * @param {string} name The name/key to set, such as an event or attribute name\n * @param {*} old The last value that was set for this name/node pair\n * @param {*} value An attribute value, such as a function to be used as an\n *  event handler\n * @param {boolean} isSvg Are we currently diffing inside an svg?\n * @private\n */\nexport function setAccessor(node, name, old, value, isSvg) {\n\tif (name==='className') name = 'class';\n\n\n\tif (name==='key') {\n\t\t// ignore\n\t}\n\telse if (name==='ref') {\n\t\tapplyRef(old, null);\n\t\tapplyRef(value, node);\n\t}\n\telse if (name==='class' && !isSvg) {\n\t\tnode.className = value || '';\n\t}\n\telse if (name==='style') {\n\t\tif (!value || typeof value==='string' || typeof old==='string') {\n\t\t\tnode.style.cssText = value || '';\n\t\t}\n\t\tif (value && typeof value==='object') {\n\t\t\tif (typeof old!=='string') {\n\t\t\t\tfor (let i in old) if (!(i in value)) node.style[i] = '';\n\t\t\t}\n\t\t\tfor (let i in value) {\n\t\t\t\tnode.style[i] = typeof value[i]==='number' && IS_NON_DIMENSIONAL.test(i)===false ? (value[i]+'px') : value[i];\n\t\t\t}\n\t\t}\n\t}\n\telse if (name==='dangerouslySetInnerHTML') {\n\t\tif (value) node.innerHTML = value.__html || '';\n\t}\n\telse if (name[0]=='o' && name[1]=='n') {\n\t\tlet useCapture = name !== (name=name.replace(/Capture$/, ''));\n\t\tname = name.toLowerCase().substring(2);\n\t\tif (value) {\n\t\t\tif (!old) node.addEventListener(name, eventProxy, useCapture);\n\t\t}\n\t\telse {\n\t\t\tnode.removeEventListener(name, eventProxy, useCapture);\n\t\t}\n\t\t(node._listeners || (node._listeners = {}))[name] = value;\n\t}\n\telse if (name!=='list' && name!=='type' && !isSvg && name in node) {\n\t\t// Attempt to set a DOM property to the given value.\n\t\t// IE & FF throw for certain property-value combinations.\n\t\ttry {\n\t\t\tnode[name] = value==null ? '' : value;\n\t\t} catch (e) { }\n\t\tif ((value==null || value===false) && name!='spellcheck') node.removeAttribute(name);\n\t}\n\telse {\n\t\tlet ns = isSvg && (name !== (name = name.replace(/^xlink:?/, '')));\n\t\t// spellcheck is treated differently than all other boolean values and\n\t\t// should not be removed when the value is `false`. See:\n\t\t// https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-spellcheck\n\t\tif (value==null || value===false) {\n\t\t\tif (ns) node.removeAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase());\n\t\t\telse node.removeAttribute(name);\n\t\t}\n\t\telse if (typeof value!=='function') {\n\t\t\tif (ns) node.setAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase(), value);\n\t\t\telse node.setAttribute(name, value);\n\t\t}\n\t}\n}\n\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\treturn this._listeners[e.type](options.event && options.event(e) || e);\n}\n",
    "import { ATTR_KEY } from '../constants';\nimport { isSameNodeType, isNamedNode } from './index';\nimport { buildComponentFromVNode } from './component';\nimport { createNode, setAccessor } from '../dom/index';\nimport { unmountComponent } from './component';\nimport options from '../options';\nimport { applyRef } from '../util';\nimport { removeNode } from '../dom/index';\n\n/**\n * Queue of components that have been mounted and are awaiting componentDidMount\n * @type {Array<import('../component').Component>}\n */\nexport const mounts = [];\n\n/** Diff recursion count, used to track the end of the diff cycle. */\nexport let diffLevel = 0;\n\n/** Global flag indicating if the diff is currently within an SVG */\nlet isSvgMode = false;\n\n/** Global flag indicating if the diff is performing hydration */\nlet hydrating = false;\n\n/** Invoke queued componentDidMount lifecycle methods */\nexport function flushMounts() {\n\tlet c;\n\twhile ((c = mounts.shift())) {\n\t\tif (options.afterMount) options.afterMount(c);\n\t\tif (c.componentDidMount) c.componentDidMount();\n\t}\n}\n\n\n/**\n * Apply differences in a given vnode (and it's deep children) to a real DOM Node.\n * @param {import('../dom').PreactElement} dom A DOM node to mutate into the shape of a `vnode`\n * @param {import('../vnode').VNode} vnode A VNode (with descendants forming a tree) representing\n *  the desired DOM structure\n * @param {object} context The current context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @param {Element} parent ?\n * @param {boolean} componentRoot ?\n * @returns {import('../dom').PreactElement} The created/mutated element\n * @private\n */\nexport function diff(dom, vnode, context, mountAll, parent, componentRoot) {\n\t// diffLevel having been 0 here indicates initial entry into the diff (not a subdiff)\n\tif (!diffLevel++) {\n\t\t// when first starting the diff, check if we're diffing an SVG or within an SVG\n\t\tisSvgMode = parent!=null && parent.ownerSVGElement!==undefined;\n\n\t\t// hydration is indicated by the existing element to be diffed not having a prop cache\n\t\thydrating = dom!=null && !(ATTR_KEY in dom);\n\t}\n\n\tlet ret = idiff(dom, vnode, context, mountAll, componentRoot);\n\n\t// append the element if its a new parent\n\tif (parent && ret.parentNode!==parent) parent.appendChild(ret);\n\n\t// diffLevel being reduced to 0 means we're exiting the diff\n\tif (!--diffLevel) {\n\t\thydrating = false;\n\t\t// invoke queued componentDidMount lifecycle methods\n\t\tif (!componentRoot) flushMounts();\n\t}\n\n\treturn ret;\n}\n\n\n/**\n * Internals of `diff()`, separated to allow bypassing diffLevel / mount flushing.\n * @param {import('../dom').PreactElement} dom A DOM node to mutate into the shape of a `vnode`\n * @param {import('../vnode').VNode} vnode A VNode (with descendants forming a tree) representing the desired DOM structure\n * @param {object} context The current context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @param {boolean} [componentRoot] ?\n * @private\n */\nfunction idiff(dom, vnode, context, mountAll, componentRoot) {\n\tlet out = dom,\n\t\tprevSvgMode = isSvgMode;\n\n\t// empty values (null, undefined, booleans) render as empty Text nodes\n\tif (vnode==null || typeof vnode==='boolean') vnode = '';\n\n\n\t// Fast case: Strings & Numbers create/update Text nodes.\n\tif (typeof vnode==='string' || typeof vnode==='number') {\n\n\t\t// update if it's already a Text node:\n\t\tif (dom && dom.splitText!==undefined && dom.parentNode && (!dom._component || componentRoot)) {\n\t\t\t/* istanbul ignore if */ /* Browser quirk that can't be covered: https://github.com/developit/preact/commit/fd4f21f5c45dfd75151bd27b4c217d8003aa5eb9 */\n\t\t\tif (dom.nodeValue!=vnode) {\n\t\t\t\tdom.nodeValue = vnode;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// it wasn't a Text node: replace it with one and recycle the old Element\n\t\t\tout = document.createTextNode(vnode);\n\t\t\tif (dom) {\n\t\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\t\t\t\trecollectNodeTree(dom, true);\n\t\t\t}\n\t\t}\n\n\t\tout[ATTR_KEY] = true;\n\n\t\treturn out;\n\t}\n\n\n\t// If the VNode represents a Component, perform a component diff:\n\tlet vnodeName = vnode.nodeName;\n\tif (typeof vnodeName==='function') {\n\t\treturn buildComponentFromVNode(dom, vnode, context, mountAll);\n\t}\n\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tisSvgMode = vnodeName==='svg' ? true : vnodeName==='foreignObject' ? false : isSvgMode;\n\n\n\t// If there's no existing element or it's the wrong type, create a new one:\n\tvnodeName = String(vnodeName);\n\tif (!dom || !isNamedNode(dom, vnodeName)) {\n\t\tout = createNode(vnodeName, isSvgMode);\n\n\t\tif (dom) {\n\t\t\t// move children into the replacement node\n\t\t\twhile (dom.firstChild) out.appendChild(dom.firstChild);\n\n\t\t\t// if the previous Element was mounted into the DOM, replace it inline\n\t\t\tif (dom.parentNode) dom.parentNode.replaceChild(out, dom);\n\n\t\t\t// recycle the old element (skips non-Element node types)\n\t\t\trecollectNodeTree(dom, true);\n\t\t}\n\t}\n\n\n\tlet fc = out.firstChild,\n\t\tprops = out[ATTR_KEY],\n\t\tvchildren = vnode.children;\n\n\tif (props==null) {\n\t\tprops = out[ATTR_KEY] = {};\n\t\tfor (let a=out.attributes, i=a.length; i--; ) props[a[i].name] = a[i].value;\n\t}\n\n\t// Optimization: fast-path for elements containing a single TextNode:\n\tif (!hydrating && vchildren && vchildren.length===1 && typeof vchildren[0]==='string' && fc!=null && fc.splitText!==undefined && fc.nextSibling==null) {\n\t\tif (fc.nodeValue!=vchildren[0]) {\n\t\t\tfc.nodeValue = vchildren[0];\n\t\t}\n\t}\n\t// otherwise, if there are existing or new children, diff them:\n\telse if (vchildren && vchildren.length || fc!=null) {\n\t\tinnerDiffNode(out, vchildren, context, mountAll, hydrating || props.dangerouslySetInnerHTML!=null);\n\t}\n\n\n\t// Apply attributes/props from VNode to the DOM Element:\n\tdiffAttributes(out, vnode.attributes, props);\n\n\n\t// restore previous SVG mode: (in case we're exiting an SVG namespace)\n\tisSvgMode = prevSvgMode;\n\n\treturn out;\n}\n\n\n/**\n * Apply child and attribute changes between a VNode and a DOM Node to the DOM.\n * @param {import('../dom').PreactElement} dom Element whose children should be compared & mutated\n * @param {Array<import('../vnode').VNode>} vchildren Array of VNodes to compare to `dom.childNodes`\n * @param {object} context Implicitly descendant context object (from most\n *  recent `getChildContext()`)\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @param {boolean} isHydrating if `true`, consumes externally created elements\n *  similar to hydration\n */\nfunction innerDiffNode(dom, vchildren, context, mountAll, isHydrating) {\n\tlet originalChildren = dom.childNodes,\n\t\tchildren = [],\n\t\tkeyed = {},\n\t\tkeyedLen = 0,\n\t\tmin = 0,\n\t\tlen = originalChildren.length,\n\t\tchildrenLen = 0,\n\t\tvlen = vchildren ? vchildren.length : 0,\n\t\tj, c, f, vchild, child;\n\n\t// Build up a map of keyed children and an Array of unkeyed children:\n\tif (len!==0) {\n\t\tfor (let i=0; i<len; i++) {\n\t\t\tlet child = originalChildren[i],\n\t\t\t\tprops = child[ATTR_KEY],\n\t\t\t\tkey = vlen && props ? child._component ? child._component.__key : props.key : null;\n\t\t\tif (key!=null) {\n\t\t\t\tkeyedLen++;\n\t\t\t\tkeyed[key] = child;\n\t\t\t}\n\t\t\telse if (props || (child.splitText!==undefined ? (isHydrating ? child.nodeValue.trim() : true) : isHydrating)) {\n\t\t\t\tchildren[childrenLen++] = child;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (vlen!==0) {\n\t\tfor (let i=0; i<vlen; i++) {\n\t\t\tvchild = vchildren[i];\n\t\t\tchild = null;\n\n\t\t\t// attempt to find a node based on key matching\n\t\t\tlet key = vchild.key;\n\t\t\tif (key!=null) {\n\t\t\t\tif (keyedLen && keyed[key]!==undefined) {\n\t\t\t\t\tchild = keyed[key];\n\t\t\t\t\tkeyed[key] = undefined;\n\t\t\t\t\tkeyedLen--;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// attempt to pluck a node of the same type from the existing children\n\t\t\telse if (min<childrenLen) {\n\t\t\t\tfor (j=min; j<childrenLen; j++) {\n\t\t\t\t\tif (children[j]!==undefined && isSameNodeType(c = children[j], vchild, isHydrating)) {\n\t\t\t\t\t\tchild = c;\n\t\t\t\t\t\tchildren[j] = undefined;\n\t\t\t\t\t\tif (j===childrenLen-1) childrenLen--;\n\t\t\t\t\t\tif (j===min) min++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// morph the matched/found/created DOM child to match vchild (deep)\n\t\t\tchild = idiff(child, vchild, context, mountAll);\n\n\t\t\tf = originalChildren[i];\n\t\t\tif (child && child!==dom && child!==f) {\n\t\t\t\tif (f==null) {\n\t\t\t\t\tdom.appendChild(child);\n\t\t\t\t}\n\t\t\t\telse if (child===f.nextSibling) {\n\t\t\t\t\tremoveNode(f);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdom.insertBefore(child, f);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\t// remove unused keyed children:\n\tif (keyedLen) {\n\t\tfor (let i in keyed) if (keyed[i]!==undefined) recollectNodeTree(keyed[i], false);\n\t}\n\n\t// remove orphaned unkeyed children:\n\twhile (min<=childrenLen) {\n\t\tif ((child = children[childrenLen--])!==undefined) recollectNodeTree(child, false);\n\t}\n}\n\n\n\n/**\n * Recursively recycle (or just unmount) a node and its descendants.\n * @param {import('../dom').PreactElement} node DOM node to start\n *  unmount/removal from\n * @param {boolean} [unmountOnly=false] If `true`, only triggers unmount\n *  lifecycle, skips removal\n */\nexport function recollectNodeTree(node, unmountOnly) {\n\tlet component = node._component;\n\tif (component) {\n\t\t// if node is owned by a Component, unmount that component (ends up recursing back here)\n\t\tunmountComponent(component);\n\t}\n\telse {\n\t\t// If the node's VNode had a ref function, invoke it with null here.\n\t\t// (this is part of the React spec, and smart for unsetting references)\n\t\tif (node[ATTR_KEY]!=null) applyRef(node[ATTR_KEY].ref, null);\n\n\t\tif (unmountOnly===false || node[ATTR_KEY]==null) {\n\t\t\tremoveNode(node);\n\t\t}\n\n\t\tremoveChildren(node);\n\t}\n}\n\n\n/**\n * Recollect/unmount all children.\n *\t- we use .lastChild here because it causes less reflow than .firstChild\n *\t- it's also cheaper than accessing the .childNodes Live NodeList\n */\nexport function removeChildren(node) {\n\tnode = node.lastChild;\n\twhile (node) {\n\t\tlet next = node.previousSibling;\n\t\trecollectNodeTree(node, true);\n\t\tnode = next;\n\t}\n}\n\n\n/**\n * Apply differences in attributes from a VNode to the given DOM Element.\n * @param {import('../dom').PreactElement} dom Element with attributes to diff `attrs` against\n * @param {object} attrs The desired end-state key-value attribute pairs\n * @param {object} old Current/previous attributes (from previous VNode or\n *  element's prop cache)\n */\nfunction diffAttributes(dom, attrs, old) {\n\tlet name;\n\n\t// remove attributes no longer present on the vnode by setting them to undefined\n\tfor (name in old) {\n\t\tif (!(attrs && attrs[name]!=null) && old[name]!=null) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = undefined, isSvgMode);\n\t\t}\n\t}\n\n\t// add new & update changed attributes\n\tfor (name in attrs) {\n\t\tif (name!=='children' && name!=='innerHTML' && (!(name in old) || attrs[name]!==(name==='value' || name==='checked' ? dom[name] : old[name]))) {\n\t\t\tsetAccessor(dom, name, old[name], old[name] = attrs[name], isSvgMode);\n\t\t}\n\t}\n}\n",
    "import { SYNC_RENDER, NO_RENDER, FORCE_RENDER, ASYNC_RENDER, ATTR_KEY } from '../constants';\nimport options from '../options';\nimport { extend, applyRef } from '../util';\nimport { enqueueRender } from '../render-queue';\nimport { getNodeProps } from './index';\nimport { diff, mounts, diffLevel, flushMounts, recollectNodeTree, removeChildren } from './diff';\nimport { createComponent, recyclerComponents } from './component-recycler';\nimport { removeNode } from '../dom/index';\n\n/**\n * Set a component's `props` and possibly re-render the component\n * @param {import('../component').Component} component The Component to set props on\n * @param {object} props The new props\n * @param {number} renderMode Render options - specifies how to re-render the component\n * @param {object} context The new context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n */\nexport function setComponentProps(component, props, renderMode, context, mountAll) {\n\tif (component._disable) return;\n\tcomponent._disable = true;\n\n\tcomponent.__ref = props.ref;\n\tcomponent.__key = props.key;\n\tdelete props.ref;\n\tdelete props.key;\n\n\tif (typeof component.constructor.getDerivedStateFromProps === 'undefined') {\n\t\tif (!component.base || mountAll) {\n\t\t\tif (component.componentWillMount) component.componentWillMount();\n\t\t}\n\t\telse if (component.componentWillReceiveProps) {\n\t\t\tcomponent.componentWillReceiveProps(props, context);\n\t\t}\n\t}\n\n\tif (context && context!==component.context) {\n\t\tif (!component.prevContext) component.prevContext = component.context;\n\t\tcomponent.context = context;\n\t}\n\n\tif (!component.prevProps) component.prevProps = component.props;\n\tcomponent.props = props;\n\n\tcomponent._disable = false;\n\n\tif (renderMode!==NO_RENDER) {\n\t\tif (renderMode===SYNC_RENDER || options.syncComponentUpdates!==false || !component.base) {\n\t\t\trenderComponent(component, SYNC_RENDER, mountAll);\n\t\t}\n\t\telse {\n\t\t\tenqueueRender(component);\n\t\t}\n\t}\n\n\tapplyRef(component.__ref, component);\n}\n\n\n\n/**\n * Render a Component, triggering necessary lifecycle events and taking\n * High-Order Components into account.\n * @param {import('../component').Component} component The component to render\n * @param {number} [renderMode] render mode, see constants.js for available options.\n * @param {boolean} [mountAll] Whether or not to immediately mount all components\n * @param {boolean} [isChild] ?\n * @private\n */\nexport function renderComponent(component, renderMode, mountAll, isChild) {\n\tif (component._disable) return;\n\n\tlet props = component.props,\n\t\tstate = component.state,\n\t\tcontext = component.context,\n\t\tpreviousProps = component.prevProps || props,\n\t\tpreviousState = component.prevState || state,\n\t\tpreviousContext = component.prevContext || context,\n\t\tisUpdate = component.base,\n\t\tnextBase = component.nextBase,\n\t\tinitialBase = isUpdate || nextBase,\n\t\tinitialChildComponent = component._component,\n\t\tskip = false,\n\t\tsnapshot = previousContext,\n\t\trendered, inst, cbase;\n\n\tif (component.constructor.getDerivedStateFromProps) {\n\t\tstate = extend(extend({}, state), component.constructor.getDerivedStateFromProps(props, state));\n\t\tcomponent.state = state;\n\t}\n\n\t// if updating\n\tif (isUpdate) {\n\t\tcomponent.props = previousProps;\n\t\tcomponent.state = previousState;\n\t\tcomponent.context = previousContext;\n\t\tif (renderMode!==FORCE_RENDER\n\t\t\t&& component.shouldComponentUpdate\n\t\t\t&& component.shouldComponentUpdate(props, state, context) === false) {\n\t\t\tskip = true;\n\t\t}\n\t\telse if (component.componentWillUpdate) {\n\t\t\tcomponent.componentWillUpdate(props, state, context);\n\t\t}\n\t\tcomponent.props = props;\n\t\tcomponent.state = state;\n\t\tcomponent.context = context;\n\t}\n\n\tcomponent.prevProps = component.prevState = component.prevContext = component.nextBase = null;\n\tcomponent._dirty = false;\n\n\tif (!skip) {\n\t\trendered = component.render(props, state, context);\n\n\t\t// context to pass to the child, can be updated via (grand-)parent component\n\t\tif (component.getChildContext) {\n\t\t\tcontext = extend(extend({}, context), component.getChildContext());\n\t\t}\n\n\t\tif (isUpdate && component.getSnapshotBeforeUpdate) {\n\t\t\tsnapshot = component.getSnapshotBeforeUpdate(previousProps, previousState);\n\t\t}\n\n\t\tlet childComponent = rendered && rendered.nodeName,\n\t\t\ttoUnmount, base;\n\n\t\tif (typeof childComponent==='function') {\n\t\t\t// set up high order component link\n\n\t\t\tlet childProps = getNodeProps(rendered);\n\t\t\tinst = initialChildComponent;\n\n\t\t\tif (inst && inst.constructor===childComponent && childProps.key==inst.__key) {\n\t\t\t\tsetComponentProps(inst, childProps, SYNC_RENDER, context, false);\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttoUnmount = inst;\n\n\t\t\t\tcomponent._component = inst = createComponent(childComponent, childProps, context);\n\t\t\t\tinst.nextBase = inst.nextBase || nextBase;\n\t\t\t\tinst._parentComponent = component;\n\t\t\t\tsetComponentProps(inst, childProps, NO_RENDER, context, false);\n\t\t\t\trenderComponent(inst, SYNC_RENDER, mountAll, true);\n\t\t\t}\n\n\t\t\tbase = inst.base;\n\t\t}\n\t\telse {\n\t\t\tcbase = initialBase;\n\n\t\t\t// destroy high order component link\n\t\t\ttoUnmount = initialChildComponent;\n\t\t\tif (toUnmount) {\n\t\t\t\tcbase = component._component = null;\n\t\t\t}\n\n\t\t\tif (initialBase || renderMode===SYNC_RENDER) {\n\t\t\t\tif (cbase) cbase._component = null;\n\t\t\t\tbase = diff(cbase, rendered, context, mountAll || !isUpdate, initialBase && initialBase.parentNode, true);\n\t\t\t}\n\t\t}\n\n\t\tif (initialBase && base!==initialBase && inst!==initialChildComponent) {\n\t\t\tlet baseParent = initialBase.parentNode;\n\t\t\tif (baseParent && base!==baseParent) {\n\t\t\t\tbaseParent.replaceChild(base, initialBase);\n\n\t\t\t\tif (!toUnmount) {\n\t\t\t\t\tinitialBase._component = null;\n\t\t\t\t\trecollectNodeTree(initialBase, false);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (toUnmount) {\n\t\t\tunmountComponent(toUnmount);\n\t\t}\n\n\t\tcomponent.base = base;\n\t\tif (base && !isChild) {\n\t\t\tlet componentRef = component,\n\t\t\t\tt = component;\n\t\t\twhile ((t=t._parentComponent)) {\n\t\t\t\t(componentRef = t).base = base;\n\t\t\t}\n\t\t\tbase._component = componentRef;\n\t\t\tbase._componentConstructor = componentRef.constructor;\n\t\t}\n\t}\n\n\tif (!isUpdate || mountAll) {\n\t\tmounts.push(component);\n\t}\n\telse if (!skip) {\n\t\t// Ensure that pending componentDidMount() hooks of child components\n\t\t// are called before the componentDidUpdate() hook in the parent.\n\t\t// Note: disabled as it causes duplicate hooks, see https://github.com/developit/preact/issues/750\n\t\t// flushMounts();\n\n\t\tif (component.componentDidUpdate) {\n\t\t\tcomponent.componentDidUpdate(previousProps, previousState, snapshot);\n\t\t}\n\t\tif (options.afterUpdate) options.afterUpdate(component);\n\t}\n\n\twhile (component._renderCallbacks.length) component._renderCallbacks.pop().call(component);\n\n\tif (!diffLevel && !isChild) flushMounts();\n}\n\n\n\n/**\n * Apply the Component referenced by a VNode to the DOM.\n * @param {import('../dom').PreactElement} dom The DOM node to mutate\n * @param {import('../vnode').VNode} vnode A Component-referencing VNode\n * @param {object} context The current context\n * @param {boolean} mountAll Whether or not to immediately mount all components\n * @returns {import('../dom').PreactElement} The created/mutated element\n * @private\n */\nexport function buildComponentFromVNode(dom, vnode, context, mountAll) {\n\tlet c = dom && dom._component,\n\t\toriginalComponent = c,\n\t\toldDom = dom,\n\t\tisDirectOwner = c && dom._componentConstructor===vnode.nodeName,\n\t\tisOwner = isDirectOwner,\n\t\tprops = getNodeProps(vnode);\n\twhile (c && !isOwner && (c=c._parentComponent)) {\n\t\tisOwner = c.constructor===vnode.nodeName;\n\t}\n\n\tif (c && isOwner && (!mountAll || c._component)) {\n\t\tsetComponentProps(c, props, ASYNC_RENDER, context, mountAll);\n\t\tdom = c.base;\n\t}\n\telse {\n\t\tif (originalComponent && !isDirectOwner) {\n\t\t\tunmountComponent(originalComponent);\n\t\t\tdom = oldDom = null;\n\t\t}\n\n\t\tc = createComponent(vnode.nodeName, props, context);\n\t\tif (dom && !c.nextBase) {\n\t\t\tc.nextBase = dom;\n\t\t\t// passing dom/oldDom as nextBase will recycle it if unused, so bypass recycling on L229:\n\t\t\toldDom = null;\n\t\t}\n\t\tsetComponentProps(c, props, SYNC_RENDER, context, mountAll);\n\t\tdom = c.base;\n\n\t\tif (oldDom && dom!==oldDom) {\n\t\t\toldDom._component = null;\n\t\t\trecollectNodeTree(oldDom, false);\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n\n\n/**\n * Remove a component from the DOM and recycle it.\n * @param {import('../component').Component} component The Component instance to unmount\n * @private\n */\nexport function unmountComponent(component) {\n\tif (options.beforeUnmount) options.beforeUnmount(component);\n\n\tlet base = component.base;\n\n\tcomponent._disable = true;\n\n\tif (component.componentWillUnmount) component.componentWillUnmount();\n\n\tcomponent.base = null;\n\n\t// recursively tear down & recollect high-order component children:\n\tlet inner = component._component;\n\tif (inner) {\n\t\tunmountComponent(inner);\n\t}\n\telse if (base) {\n\t\tif (base[ATTR_KEY]!=null) applyRef(base[ATTR_KEY].ref, null);\n\n\t\tcomponent.nextBase = base;\n\n\t\tremoveNode(base);\n\t\trecyclerComponents.push(component);\n\n\t\tremoveChildren(base);\n\t}\n\n\tapplyRef(component.__ref, null);\n}\n",
    "import { Component } from '../component';\n\n/**\n * Retains a pool of Components for re-use.\n * @type {Component[]}\n * @private\n */\nexport const recyclerComponents = [];\n\n\n/**\n * Create a component. Normalizes differences between PFC's and classful\n * Components.\n * @param {function} Ctor The constructor of the component to create\n * @param {object} props The initial props of the component\n * @param {object} context The initial context of the component\n * @returns {import('../component').Component}\n */\nexport function createComponent(Ctor, props, context) {\n\tlet inst, i = recyclerComponents.length;\n\n\tif (Ctor.prototype && Ctor.prototype.render) {\n\t\tinst = new Ctor(props, context);\n\t\tComponent.call(inst, props, context);\n\t}\n\telse {\n\t\tinst = new Component(props, context);\n\t\tinst.constructor = Ctor;\n\t\tinst.render = doRender;\n\t}\n\n\n\twhile (i--) {\n\t\tif (recyclerComponents[i].constructor===Ctor) {\n\t\t\tinst.nextBase = recyclerComponents[i].nextBase;\n\t\t\trecyclerComponents.splice(i, 1);\n\t\t\treturn inst;\n\t\t}\n\t}\n\n\treturn inst;\n}\n\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n",
    "import { FORCE_RENDER } from './constants';\nimport { extend } from './util';\nimport { renderComponent } from './vdom/component';\nimport { enqueueRender } from './render-queue';\n/**\n * Base Component class.\n * Provides `setState()` and `forceUpdate()`, which trigger rendering.\n * @typedef {object} Component\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components' getChildContext\n * @public\n *\n * @example\n * class MyFoo extends Component {\n *   render(props, state) {\n *     return <div />;\n *   }\n * }\n */\nexport function Component(props, context) {\n\tthis._dirty = true;\n\n\t/**\n\t * @public\n\t * @type {object}\n\t */\n\tthis.context = context;\n\n\t/**\n\t * @public\n\t * @type {object}\n\t */\n\tthis.props = props;\n\n\t/**\n\t * @public\n\t * @type {object}\n\t */\n\tthis.state = this.state || {};\n\n\tthis._renderCallbacks = [];\n}\n\n\nextend(Component.prototype, {\n\n\t/**\n\t * Update component state and schedule a re-render.\n\t * @param {object} state A dict of state properties to be shallowly merged\n\t * \tinto the current state, or a function that will produce such a dict. The\n\t * \tfunction is called with the current state and props.\n\t * @param {() => void} callback A function to be called once component state is\n\t * \tupdated\n\t */\n\tsetState(state, callback) {\n\t\tif (!this.prevState) this.prevState = this.state;\n\t\tthis.state = extend(\n\t\t\textend({}, this.state),\n\t\t\ttypeof state === 'function' ? state(this.state, this.props) : state\n\t\t);\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t},\n\n\n\t/**\n\t * Immediately perform a synchronous re-render of the component.\n\t * @param {() => void} callback A function to be called after component is\n\t * \tre-rendered.\n\t * @private\n\t */\n\tforceUpdate(callback) {\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\trenderComponent(this, FORCE_RENDER);\n\t},\n\n\n\t/**\n\t * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n\t * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n\t * @param {object} props Props (eg: JSX attributes) received from parent\n\t * \telement/component\n\t * @param {object} state The component's current state\n\t * @param {object} context Context object, as returned by the nearest\n\t *  ancestor's `getChildContext()`\n\t * @returns {import('./vnode').VNode | void}\n\t */\n\trender() {}\n\n});\n",
    "/**\n * Allows for changes in values via properties, and for updates originated for the Form Model update via the context. Also fires onChange with the new value from properties.\n */\nexport const shouldComponentUpdate = function (newProps, newContext) {\n  const { name, value } = this.props\n  const { value: newValue } = newProps\n  const newContextValue = this.context.values[name] != newContext.values[name]\n  if (newContextValue) return true\n\n  const nw = value != newValue\n  if (nw) {\n    if (newContext.onChange) newContext.onChange(newProps.name, newValue)\n    return false\n  }\n}",
    "import { h } from '../../node_modules/preact/dist/preact.mjs'\nimport { Component } from '../../node_modules/preact/dist/preact.mjs'\nimport { shouldComponentUpdate } from './lib/index.js'\n\nexport default class Select extends Component {\n  constructor() {\n    super()\n    /**\n     * @type {SelectProps}\n     */\n    this.props = this.props\n  }\n  shouldComponentUpdate(newProps, __, newContext) {\n    const res = shouldComponentUpdate.call(this, newProps, newContext)\n    return res\n  }\n  componentDidMount() {\n    const { value, name } = this.props\n    const { onChange } = this.context\n    if (onChange && value !== undefined) onChange(name, value)\n  }\n  render({\n    options, name, value, required,\n  }) {\n    const { onChange, hid, id, values = {} } = this.context\n    const rendered = name in values // for SSR\n    const selectValue = rendered ? values[name] : value\n    return     h('select',{\n      'name':name,\n      'value':selectValue,\n      'required':required,\n      'className':\"custom-select\",\n      'id':id,\n      'aria-describedby':hid,\n      'onChange':(e) => {\n        onChange(name, e.currentTarget.value)\n      }},\n      h('option'),\n      options.map(({ value: v, title }) => {\n        return h('option',{'key':v,'value':v,'selected':v==value},\n          title,\n        )\n      }),\n    )\n  }\n}\n\n/* documentary types/Select.xml */\n/**\n * @typedef {Object} SelectProps Options for the Select component.\n * @prop {boolean} [required] Whether this is a required field.\n * @prop {string} [name] The select name.\n * @prop {string} [value] The initial value.\n * @prop {Array<{value: *, title: string}>} [options] The array with options to render inside of the `select` element.\n */\n",
    "import { h } from '../../node_modules/preact/dist/preact.mjs'\nimport { Component } from '../../node_modules/preact/dist/preact.mjs'\nimport { shouldComponentUpdate } from './lib/index.js'\n\n/**\n * The `<textarea>` element.\n */\nexport default class TextArea extends Component {\n  constructor() {\n    super()\n    /**\n     * @type {TextAreaProps}\n     */\n    this.props = this.props\n  }\n  shouldComponentUpdate(newProps, __, newContext) {\n    const res = shouldComponentUpdate.call(this, newProps, newContext)\n    return res\n  }\n  componentDidMount() {\n    const { children: [child], name } = this.props\n    const { onChange } = this.context\n    if (child) onChange(name, child.trim())\n  }\n  render({\n    rows = 3, required, name, placeholder, children,\n  }) {\n    const { hid, id, onChange, values = {} } = this.context\n    const rendered = name in values // for SSR\n    return h('textarea',{\n      'required':required,\n      'name':name,\n      'placeholder':placeholder,\n      'aria-describedby':hid,\n      'className':\"form-control\",\n      'id':id,\n      'onChange':(e) => {\n        onChange(name, e.currentTarget.value)\n      },\n      'rows':rows},\n        rendered ? values[name] : children\n      )\n  }\n}\n\n/* documentary types/TextArea.xml */\n/**\n * @typedef {Object} TextAreaProps Options for the TextAreaProps component.\n * @prop {boolean} [required] Whether this is a required field.\n * @prop {string} [name] The textarea name.\n * @prop {string} [placeholder] The textarea placeholder.\n * @prop {number} [rows=3] How many rows should the textarea have. Default `3`.\n */\n",
    "import { h } from '../../node_modules/preact/dist/preact.mjs'\nimport { Component } from '../../node_modules/preact/dist/preact.mjs'\nimport { shouldComponentUpdate } from './lib/index.js'\n\nexport default class Input extends Component {\n  constructor() {\n    super()\n    /**\n     * @type {InputProps}\n     */\n    this.props = this.props\n  }\n  shouldComponentUpdate(newProps, __, newContext) {\n    const res = shouldComponentUpdate.call(this, newProps, newContext)\n    return res\n  }\n  componentDidMount() {\n    const { value, name } = this.props\n    const { onChange } = this.context\n    if (value !== undefined && onChange) onChange(name, value)\n  }\n  render({\n    required, name, placeholder, type = 'text', file, value, ...props\n  }) {\n    const { onChange, hid, id, values = {} } = this.context\n    const rendered = name in values // for SSR\n    return h('input',{...props,\n      'required':required,\n      'name':name,\n      'placeholder':placeholder,\n      'className':`form-control${file ? '-file' : ''}`,\n      'value':rendered ? values[name] : value,\n      'type':type,\n      'aria-describedby':hid,\n      'id':id,\n      'onChange':(e) => {\n        onChange(name, e.currentTarget.value)\n      }\n    })\n  }\n}\n\n/* documentary types/input.xml */\n/**\n * @typedef {Object} InputProps Options for the Input component.\n * @prop {boolean} [required] Whether this is a required field.\n * @prop {string} [name] The input name.\n * @prop {string} [placeholder] The input placeholder.\n * @prop {string} [value] The initial value.\n * @prop {string} [type] The input type.\n * @prop {*} [...props] All other options to be passed to the input element. When compiling with _Depack_, the props must be added like `<Input {...({ 'onClick': test })}>`\n */\n",
    "export default function(url, options) {\n\toptions = options || {};\n\treturn new Promise( (resolve, reject) => {\n\t\tconst request = new XMLHttpRequest();\n\t\tconst keys = [];\n\t\tconst all = [];\n\t\tconst headers = {};\n\n\t\tconst response = () => ({\n\t\t\tok: (request.status/100|0) == 2,\t\t// 200-299\n\t\t\tstatusText: request.statusText,\n\t\t\tstatus: request.status,\n\t\t\turl: request.responseURL,\n\t\t\ttext: () => Promise.resolve(request.responseText),\n\t\t\tjson: () => Promise.resolve(JSON.parse(request.responseText)),\n\t\t\tblob: () => Promise.resolve(new Blob([request.response])),\n\t\t\tclone: response,\n\t\t\theaders: {\n\t\t\t\tkeys: () => keys,\n\t\t\t\tentries: () => all,\n\t\t\t\tget: n => headers[n.toLowerCase()],\n\t\t\t\thas: n => n.toLowerCase() in headers\n\t\t\t}\n\t\t});\n\n\t\trequest.open(options.method || 'get', url, true);\n\n\t\trequest.onload = () => {\n\t\t\trequest.getAllResponseHeaders().replace(/^(.*?):[^\\S\\n]*([\\s\\S]*?)$/gm, (m, key, value) => {\n\t\t\t\tkeys.push(key = key.toLowerCase());\n\t\t\t\tall.push([key, value]);\n\t\t\t\theaders[key] = headers[key] ? `${headers[key]},${value}` : value;\n\t\t\t});\n\t\t\tresolve(response());\n\t\t};\n\n\t\trequest.onerror = reject;\n\n\t\trequest.withCredentials = options.credentials=='include';\n\n\t\tfor (const i in options.headers) {\n\t\t\trequest.setRequestHeader(i, options.headers[i]);\n\t\t}\n\n\t\trequest.send(options.body || null);\n\t});\n}\n",
    "import { h } from '../../node_modules/preact/dist/preact.mjs'\nimport { Component } from '../../node_modules/preact/dist/preact.mjs'\nimport fetch from '../../node_modules/unfetch/dist/unfetch.mjs'\n\n/**\n * The class that has the `submit` method for sending data to the server and controlling the loading state. The response will be read as `JSON` and if it has an `error` property, it will be set in the state, otherwise, the `success` is set to 1 on the state.\n */\nexport default class SubmitForm extends Component {\n  constructor() {\n    super()\n    /**\n     * @type {SubmitFormProps}\n     */\n    this.props = this.props\n    /**\n     * @type {SubmitFormState}\n     */\n    this.state = {\n      formLoading: false,\n      error: null,\n      success: null,\n    }\n  }\n  /**\n   * Submits the form to the `path` property, setting `formLoading` during this time. Also sets the `error` and `success` state.\n   */\n  async submit(e) {\n    e.preventDefault()\n    if (!this.props.path) {\n      this.setState({ error: 'Path is not set in the properties of the form.' })\n      return false\n    }\n    this.setState({ error: null, success: null })\n    const data = new FormData(e.target)\n    this.setState({ formLoading: true })\n    let res\n    try {\n      res = await fetch(this.props.path, {\n        method: 'POST',\n        body: data,\n      })\n      const { 'error': error } = await res.json()\n      if (error) this.setState({ error })\n      else this.setState({ success: 1 })\n    } catch (error) {\n      this.setState({ error })\n    } finally {\n      this.setState({ formLoading: false })\n    }\n    if (this.props.submitFinish) {\n      await this.props.submitFinish(res)\n    }\n    return false\n  }\n  /**\n   * Remove the error and the success states.\n   */\n  reset() {\n    this.setState({\n      error: null,\n      success: null,\n    })\n  }\n}\n\n/* documentary types/SubmitForm.xml */\n/**\n * @typedef {Object} SubmitFormProps Options for the SubmitForm component.\n * @prop {string} path The path where to send data.\n * @prop {(result: Object) => Promise} [submitFinish] The callback after the data has been sent with possible response from the server.\n *\n * @typedef {Object} SubmitFormState The state structure for the SubmitForm.\n * @prop {boolean} formLoading Whether the data has been sent for submission.\n * @prop {string} error The error returned by the server.\n * @prop {boolean} success Whether the form has been submitted successfully.\n */\n",
    "import { h } from '../../node_modules/preact/dist/preact.mjs'\nimport { Component } from '../../node_modules/preact/dist/preact.mjs'\n\nexport default class Form extends Component {\n  constructor() {\n    super()\n    this.state = {\n      values: {},\n    }\n    /**\n     * @type {FormProps}\n     */\n    this.props = this.props\n  }\n  getChildContext() {\n    return {\n      values: this.state.values,\n      onChange: this.onChange.bind(this),\n    }\n  }\n  onChange(name, value) {\n    this.setState({\n      values: {\n        ...this.state.values,\n        [name]: value,\n      },\n    })\n    if (this.props.onChange)\n      this.props.onChange(this.state.values)\n  }\n  /**\n   * @param {FormProps} props Options for the Form component.\n * @param {function} [props.onChange] The callback to call when a change is made to any of the inputs inside of the form.\n * @param {function} [props.formRef] The function to call with the reference to the form HTML.\n * @param {function} [props.onSubmit] The function to call on form submit.\n   */\n  render({ children, formRef, onSubmit, onChange, ...props }) {\n    return    h('form',{...props,'ref':formRef, 'onSubmit':onSubmit},\n      children,\n    )\n  }\n}\n\n/**\n * The div with `form-group` class to hold the label, input, help and validation message.\n */\nexport class FormGroup extends Component {\n  constructor() {\n    super()\n    this.id = `i${Math.floor(Math.random() * 100000)}`\n    this.hid = `h${this.id}`\n    /**\n     * @type {FormGroupProps}\n     */\n    this.props = this.props\n  }\n  getChildContext() {\n    return {\n      id: this.id,\n      hid: this.hid,\n    }\n  }\n  render() {\n    const { children, label, help } = this.props\n    return h('div',{'className':\"form-group\"},\n      label && h('label',{'htmlFor':this.id},label),\n      children,\n      help && h('small',{'id':this.hid,'dangerouslySetInnerHTML':{ __html: help },'className':\"form-text text-muted\"}),\n    )\n  }\n}\n\nexport { default as Select } from './Select.jsx'\nexport { default as TextArea } from './TextArea.jsx'\nexport { default as Input } from './Input.jsx'\nexport { default as SubmitForm } from './SubmitForm.jsx'\n\n/**\n * The button with `type=\"submit\"` which can be loading with a spinner indicator.\n * @param {SubmitButtonProps} props Options for the SubmitButton component.\n * @param {boolean} [props.loading=false] Whether the button should display as loading. Default `false`.\n * @param {string} [props.loadingText] The text to show during the loading progress.\n * @param {string} props.confirmText The text for the normal state.\n * @param {string} [props.className] The class name, such as `btn-lg`.\n * @param {('primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark')} [props.type=\"primary\"] The type of the button to add to the class as `btn-{type}`. Default `primary`.\n * @param {boolean} [props.outline=false] Display the outline style of the button via setting the `btn-outline-{type}` class. Default `false`.\n */\nexport const SubmitButton = (props) => {\n  const { loading, confirmText, loadingText = confirmText, className, type = 'primary', outline = false } = props\n  const classes = ['btn', `btn-${outline ? 'outline-' : ''}${type}`, className].filter(Boolean)\n  return (h('button',{ 'className':classes.join(' '),'type':\"submit\", 'disabled':loading},\n    loading && h('span',{'className':`spinner-border spinner-border-sm${loadingText ? ' mr-2' : ''}`,'role':\"status\",'aria-hidden':\"true\"}),\n    loading ? loadingText : confirmText,\n  ))\n}\n\n/* documentary types/index.xml */\n/**\n * @typedef {Object} FormProps Options for the Form component.\n * @prop {function} [onChange] The callback to call when a change is made to any of the inputs inside of the form.\n * @prop {function} [formRef] The function to call with the reference to the form HTML.\n * @prop {function} [onSubmit] The function to call on form submit.\n *\n * @typedef {Object} FormGroupProps Options for the FormGroup component.\n * @prop {string} [label] The label to display for the group.\n * @prop {string} [help] The help text to show in `<small className=\"form-text text-muted\">{help}</small>`\n *\n * @typedef {Object} SubmitButtonProps Options for the SubmitButton component.\n * @prop {boolean} [loading=false] Whether the button should display as loading. Default `false`.\n * @prop {string} [loadingText] The text to show during the loading progress.\n * @prop {string} confirmText The text for the normal state.\n * @prop {string} [className] The class name, such as `btn-lg`.\n * @prop {('primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark')} [type=\"primary\"] The type of the button to add to the class as `btn-{type}`. Default `primary`.\n * @prop {boolean} [outline=false] Display the outline style of the button via setting the `btn-outline-{type}` class. Default `false`.\n */\n",
    "import { h } from '../../node_modules/preact/dist/preact.mjs'\nimport Form, {\n  FormGroup, TextArea, Input, Select, SubmitButton, SubmitForm,\n} from './../src/index.jsx'\n\nclass ExampleForm extends SubmitForm {\n  render({ onChange, ...props }) {\n    const { formLoading, error, success } = this.state\n\n    return (                                        h(Form,{...props, onSubmit:this.submit.bind(this), onChange:values => {\n      this.reset()\n      if(onChange) onChange(values)\n    }},\n      h(FormGroup,{label:\"Input\",help:\"Type in something...\"},\n        h(Input,{name:\"input\",value:\"hello-world\"}),\n      ),\n      h(FormGroup,{label:\"Select\",help:\"Please select...\"},\n        h(Select,{options:[\n          {\n            title: 'Free will',\n            value: '1',\n          },\n          {\n            title: 'Unfree will',\n            value: '2',\n          },\n        ],name:\"select\",value:\"2\"}),\n      ),\n      h(FormGroup,{label:\"TextArea\",help:\"Multiple row input...\"},\n        h(TextArea,{name:\"textarea\"},\n          `One must still have chaos in oneself to be able to give birth to a dancing star.`\n        ),\n      ),\n      h(SubmitButton,{loading:formLoading,type:\"warning\",confirmText:\"Submit Data\"}),\n      error && `Error: ${error}`,\n      success && `OK`,\n    ))\n  }\n}\n\nexport default ExampleForm",
    "import { h } from '../../node_modules/preact/dist/preact.mjs'\nimport { render, Component } from '../../node_modules/preact/dist/preact.mjs'\n// import 'preact/devtools/'\nimport ExampleForm from './ExampleForm.jsx'\n\nclass Main extends Component {\n  render() {\n    return (\n      h('div',{'className':\"container\"},\n        h('h1',{},`@Depack/Form`),\n        h('blockquote',{'className':\"blockquote\"},\n          `The Preact component that creates and maintains\n          the form state (designed for Depack bundler).`\n        ),\n        h('div',{'className':\"row\"},\n          h('div',{'className':\"col-sm-6\"},\n            h(ExampleForm,{onChange:(values) => {\n              this.setState(values)\n            },path:\"/form\"}),\n          ),\n          h('div',{'className':\"col-sm-6\"},\n            h('pre',{'style':\"white-space: pre-wrap;\"},\n              JSON.stringify(this.state, null, 2)\n            ),\n          ),\n        ),\n      ))\n  }\n}\n\nrender( h(Main), document.querySelector('#preact'))"
  ],
  "names": [
    "$jscomp.arrayIteratorImpl",
    "$jscomp.objectCreate",
    "$jscomp.setPrototypeOf",
    "$jscomp.global",
    "$jscomp.defineProperty",
    "$jscomp.polyfill",
    "$jscomp.makeIterator",
    "$jscomp.initSymbol",
    "$jscomp.Symbol",
    "$jscomp.SYMBOL_PREFIX",
    "$jscomp.iteratorPrototype",
    "$jscomp.initSymbolIterator",
    "$jscomp.generator.Context",
    "$jscomp.iteratorFromArray",
    "$jscomp.assign",
    "VNode",
    "options",
    "stack",
    "EMPTY_CHILDREN",
    "h",
    "nodeName",
    "attributes",
    "children",
    "child",
    "simple",
    "i",
    "arguments",
    "push",
    "undefined",
    "String",
    "lastSimple",
    "p",
    "key",
    "extend",
    "obj",
    "props",
    "applyRef",
    "ref",
    "value",
    "defer",
    "Promise",
    "setTimeout",
    "NO_RENDER",
    "SYNC_RENDER",
    "enqueueRender",
    "FORCE_RENDER",
    "component",
    "_dirty",
    "items",
    "debounceRendering",
    "rerender",
    "IS_NON_DIMENSIONAL",
    "pop",
    "renderComponent",
    "getNodeProps",
    "node",
    "_componentConstructor",
    "vnode",
    "defaultProps",
    "isNamedNode",
    "normalizedNodeName",
    "removeNode",
    "parentNode",
    "removeChild",
    "setAccessor",
    "document",
    "createElementNS",
    "isSvg",
    "isSvgMode",
    "name",
    "old",
    "style",
    "cssText",
    "innerHTML",
    "__html",
    "useCapture",
    "replace",
    "toLowerCase",
    "substring",
    "eventProxy",
    "removeEventListener",
    "_listeners",
    "removeAttribute",
    "ns",
    "setAttributeNS",
    "setAttribute",
    "className",
    "e",
    "type",
    "event",
    "mounts",
    "diffLevel",
    "hydrating",
    "flushMounts",
    "c",
    "afterMount",
    "componentDidMount",
    "diff",
    "context",
    "mountAll",
    "parent",
    "componentRoot",
    "ownerSVGElement",
    "shift",
    "dom",
    "ret",
    "idiff",
    "appendChild",
    "out",
    "prevSvgMode",
    "splitText",
    "_component",
    "nodeValue",
    "replaceChild",
    "recollectNodeTree",
    "vnodeName",
    "originalComponent",
    "snapshot",
    "oldDom",
    "isDirectOwner",
    "isOwner",
    "_renderCallbacks",
    "isChild",
    "setComponentProps",
    "unmountComponent",
    "createComponent",
    "nextBase",
    "base",
    "ATTR_KEY",
    "createElement",
    "buildComponentFromVNode",
    "firstChild",
    "fc",
    "vchildren",
    "a",
    "length",
    "nextSibling",
    "dangerouslySetInnerHTML",
    "originalChildren",
    "childNodes",
    "keyed",
    "keyedLen",
    "min",
    "len",
    "childrenLen",
    "vlen",
    "j",
    "_child",
    "__key",
    "vchild",
    "isHydrating",
    "trim",
    "f",
    "next",
    "previousSibling",
    "attrs",
    "diffAttributes",
    "unmountOnly",
    "removeChildren",
    "lastChild",
    "recyclerComponents",
    "Ctor",
    "prototype",
    "render",
    "inst",
    "Component",
    "call",
    "constructor",
    "splice",
    "doRender",
    "renderMode",
    "_disable",
    "__ref",
    "getDerivedStateFromProps",
    "componentWillMount",
    "componentWillReceiveProps",
    "prevContext",
    "prevProps",
    "syncComponentUpdates",
    "state",
    "previousProps",
    "previousState",
    "previousContext",
    "isUpdate",
    "initialChildComponent",
    "rendered",
    "shouldComponentUpdate",
    "skip",
    "componentWillUpdate",
    "getChildContext",
    "childComponent",
    "getSnapshotBeforeUpdate",
    "childProps",
    "toUnmount",
    "_parentComponent",
    "cbase",
    "initialBase",
    "baseParent",
    "t",
    "componentRef",
    "componentDidUpdate",
    "afterUpdate",
    "beforeUnmount",
    "componentWillUnmount",
    "inner",
    "setState",
    "callback",
    "prevState",
    "forceUpdate",
    "newProps",
    "newContext",
    "newValue",
    "values",
    "onChange",
    "Select",
    "$jscomp.inherits",
    "__",
    "res",
    "selectValue",
    "required",
    "id",
    "hid",
    "currentTarget",
    "map",
    "v",
    "title",
    "TextArea",
    "placeholder",
    "rows",
    "Input",
    "file",
    "url",
    "resolve",
    "reject",
    "response",
    "ok",
    "request",
    "statusText",
    "status",
    "text",
    "json",
    "JSON",
    "blob",
    "Blob",
    "clone",
    "headers",
    "keys",
    "entries",
    "all",
    "get",
    "n",
    "has",
    "XMLHttpRequest",
    "onload",
    "m",
    "SubmitForm",
    "formLoading",
    "error",
    "success",
    "submit",
    "data",
    "$jscomp.asyncExecutePromiseGenerator",
    "$jscomp.generator.Generator_",
    "$jscomp.generator.Engine_",
    "preventDefault",
    "path",
    "FormData",
    "target",
    "fetch",
    "method",
    "body",
    "submitFinish",
    "reset",
    "Form",
    "bind",
    "formRef",
    "onSubmit",
    "FormGroup",
    "Math",
    "floor",
    "random",
    "label",
    "help",
    "SubmitButton",
    "loading",
    "confirmText",
    "loadingText",
    "classes",
    "outline",
    "filter",
    "Boolean",
    "join",
    "exports",
    "ExampleForm",
    "Main",
    "stringify",
    "merge",
    "querySelector"
  ]
}