{
  "version": 3,
  "file": "splendid/js/main.js",
  "lineCount": 782,
  "mappings": "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",
  "sources": [
    " [synthetic:es6/util/arrayiterator] ",
    " [synthetic:es6/util/makeiterator] ",
    " [synthetic:es6/util/arrayfromiterator] ",
    " [synthetic:util/objectcreate] ",
    " [synthetic:es6/util/setprototypeof] ",
    " [synthetic:es6/util/inherits] ",
    " [synthetic:util/global] ",
    " [synthetic:util/defineproperty] ",
    " [synthetic:util/polyfill] ",
    " [synthetic:es6/promise/promise] ",
    " [synthetic:es6/symbol] ",
    " [synthetic:es6/generator_engine] ",
    " [synthetic:es6/execute_async_generator] ",
    " [synthetic:es6/util/iteratorfromarray] ",
    " [synthetic:es6/array/values] ",
    " [synthetic:es6/object/entries] ",
    " [synthetic:util/owns] ",
    " [synthetic:es6/string/startswith] ",
    " [synthetic:util/checkstringargs] ",
    "/../node_modules/@externs/preact/src/index.js",
    "/src/help.jsx",
    "/src/lib/index.js",
    "/src/form-group.jsx",
    " [synthetic:es6/util/arrayfromiterable] ",
    "/src/Select.jsx",
    "/src/TextArea.jsx",
    "/src/Input.jsx",
    "/../node_modules/unfetch/src/index.mjs",
    "/src/SubmitForm.jsx",
    "/src/index.jsx",
    "/example/ExampleForm.jsx",
    "/example/App.jsx"
  ],
  "sourcesContent": [
    "/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Utility method for creating an iterator for Arrays.\n */\n'require base';\n\n/**\n * Returns an internal iterator from the given array.\n * @param {!Array<T>} array\n * @return {function():!IIterableResult<T>}\n * @template T\n */\n$jscomp.arrayIteratorImpl = function(array) {\n  var index = 0;\n  return function() {\n    if (index < array.length) {\n      return {\n        done: false,\n        value: array[index++],\n      };\n    } else {\n      return {done: true};\n    }\n  };\n};\n\n/**\n * Returns an internal iterator from the given array.\n * @param {!Array<T>} array\n * @return {!Iterator<T>}\n * @template T\n */\n$jscomp.arrayIterator = function(array) {\n  return /** @type {!Iterator<T>} */ ({next: $jscomp.arrayIteratorImpl(array)});\n};\n\n",
    "/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Polyfill for for-of loops.\n */\n'require es6/util/arrayiterator';\n\n/**\n * Creates an iterator for the given iterable.  This iterator should never\n * be exposed to user code.\n *\n * @param {string|!Iterable<T>|!Iterator<T>|!Arguments<T>} iterable\n * @return {!Iterator<T>}\n * @template T\n * @suppress {reportUnknownTypes}\n */\n$jscomp.makeIterator = function(iterable) {\n  // NOTE: Disabling typechecking because [] not allowed on @struct.\n  var iteratorFunction = typeof Symbol != 'undefined' && Symbol.iterator &&\n      (/** @type {?} */ (iterable)[Symbol.iterator]);\n  return iteratorFunction ? iteratorFunction.call(iterable) :\n      $jscomp.arrayIterator(/** @type {!Array} */ (iterable));\n};\n",
    "/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Polyfill for array destructuring.\n */\n'require base';\n\n\n/**\n * Copies the values from an Iterator into an Array. The important difference\n * between this and $jscomp.arrayFromIterable is that if the iterator's\n * next() method has already been called one or more times, this method returns\n * only the values that haven't been yielded yet.\n * @param {!Iterator<T>} iterator\n * @return {!Array<T>}\n * @template T\n * @suppress {reportUnknownTypes}\n */\n$jscomp.arrayFromIterator = function(iterator) {\n  var i;\n  var arr = [];\n  while (!(i = iterator.next()).done) {\n    arr.push(i.value);\n  }\n  return arr;\n};\n",
    "/*\n * Copyright 2017 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides a partial internal polyfill for Object.create.\n */\n'require util/defines';\n\n\n/**\n * Polyfill for Object.create() method:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/create\n *\n * Does not implement the second argument.\n * @param {!Object} prototype\n * @return {!Object}\n */\n$jscomp.objectCreate =\n    ($jscomp.ASSUME_ES5 || typeof Object.create == 'function') ?\n    Object.create :\n    function(prototype) {\n      /** @constructor */\n      var ctor = function() {};\n      ctor.prototype = prototype;\n      return new ctor();\n    };\n",
    "/*\n * Copyright 2017 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview\n * @suppress {uselessCode}\n */\n\n/**\n * @suppress {missingProperties,reportUnknownTypes}\n * @return {boolean}\n */\n$jscomp.underscoreProtoCanBeSet = function() {\n  var x = {a: true};\n  var y = {};\n  try {\n    y.__proto__ = x;\n    return y.a;\n  } catch (e) {\n    // __proto__ property is readonly (possibly IE 10?)\n  }\n  return false;\n};\n\n/**\n * If we can implement it, this will be a function that attempts to set the\n * prototype of an object, otherwise it will be `null`.\n *\n * It returns the first argument if successful. Throws a `TypeError` if the\n * object is not extensible.\n *\n * @type {null|function(!Object, ?Object): !Object}\n */\n$jscomp.setPrototypeOf = (typeof Object.setPrototypeOf == 'function') ?\n    Object.setPrototypeOf :\n    $jscomp.underscoreProtoCanBeSet() ?\n    function(target, proto) {\n      target.__proto__ = proto;\n      if (target.__proto__ !== proto) {\n        throw new TypeError(target + ' is not extensible');\n      }\n      return target;\n    } :\n    null;\n",
    "/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Polyfill for ES6 extends keyword.\n * @suppress {uselessCode}\n */\n'require base';\n'require util/objectcreate';\n'require es6/util/setprototypeof';\n\n\n/**\n * Inherit the prototype methods and static methods from one constructor\n * into another.\n *\n * This wires up the prototype chain (like goog.inherits) and copies static\n * properties, for ES6-to-ES{3,5} transpilation.\n *\n * Usage:\n * <pre>\n *   function ParentClass() {}\n *\n *   // Regular method.\n *   ParentClass.prototype.foo = function(a) {};\n *\n *   // Static method.\n *   ParentClass.bar = function() {};\n *\n *   function ChildClass() {\n *     ParentClass.call(this);\n *   }\n *   $jscomp.inherits(ChildClass, ParentClass);\n *\n *   var child = new ChildClass();\n *   child.foo();\n *   ChildClass.bar();  // Static inheritance.\n * </pre>\n *\n * @param {!Function} childCtor Child class.\n * @param {!Function} parentCtor Parent class.\n * @suppress {strictMissingProperties} 'superClass_' is not defined on Function\n */\n$jscomp.inherits = function(childCtor, parentCtor) {\n  childCtor.prototype = $jscomp.objectCreate(parentCtor.prototype);\n  /** @override */ childCtor.prototype.constructor = childCtor;\n  if ($jscomp.setPrototypeOf) {\n    // avoid null dereference warning\n    /** @const {!Function} */\n    var setPrototypeOf = $jscomp.setPrototypeOf;\n    setPrototypeOf(childCtor, parentCtor);\n  } else {\n    // setPrototypeOf is not available so we need to copy the static\n    // methods to the child\n    for (var p in parentCtor) {\n      if (p == 'prototype') {\n        // Don't copy parentCtor.prototype to childCtor.\n        continue;\n      }\n      if (Object.defineProperties) {\n        var descriptor = Object.getOwnPropertyDescriptor(parentCtor, p);\n        if (descriptor) {\n          Object.defineProperty(childCtor, p, descriptor);\n        }\n      } else {\n        // Pre-ES5 browser. Just copy with an assignment.\n        childCtor[p] = parentCtor[p];\n      }\n    }\n  }\n\n  childCtor.superClass_ = parentCtor.prototype;\n};\n",
    "/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Runtime code to store the global object.\n */\n'require base';\n\n\n/**\n * @param {!Object} maybeGlobal\n * @return {!Object} The global object.\n * @suppress {undefinedVars|reportUnknownTypes}\n */\n$jscomp.getGlobal = function(maybeGlobal) {\n  // This logic can be simplified to be made more optimizable.\n  return (typeof window != 'undefined' && window === maybeGlobal) ?\n      maybeGlobal :\n      (typeof global != 'undefined' && global != null) ?\n      /** @type {!Object} */ (global) :\n      maybeGlobal;\n};\n\n\n// TODO(sdh): This should be typed as \"the global object\" now that the type\n// of \"Global\" has landed in the type system.\n/**\n * The global object. For browsers we could just use `this` but in Node that\n * doesn't work.\n * @const {?}\n */\n$jscomp.global = $jscomp.getGlobal(this);\n",
    "/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides methods to polyfill native objects.\n * @suppress {reportUnknownTypes}\n */\n'require util/defines';\n\n\n/**\n * Polyfill for Object.defineProperty() method:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\n *\n * Refuses to define properties on Array.prototype and Object.prototype,\n * since we can't make them non-enumerable and this messes up peoples' for\n * loops.  Beyond this, we simply assign values and not worry\n * about enumerability or writeability.\n * @param {?} target\n * @param {string} property\n * @param {?} descriptor\n * @suppress {reportUnknownTypes}\n */\n$jscomp.defineProperty =\n    $jscomp.ASSUME_ES5 || typeof Object.defineProperties == 'function' ?\n    Object.defineProperty :\n    function(target, property, descriptor) {\n      descriptor = /** @type {!ObjectPropertyDescriptor} */ (descriptor);\n      // NOTE: This is currently never called with a descriptor outside\n      // the control of the compiler.  If we ever decide to polyfill either\n      // Object.defineProperty or Reflect.defineProperty for ES3, we should\n      // explicitly check for `get` or `set` on the descriptor and throw a\n      // TypeError, since it's impossible to properly polyfill it.\n      if (target == Array.prototype || target == Object.prototype) return;\n      target[property] = descriptor.value;\n    };\n",
    "/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides methods to polyfill native objects.\n */\n'require util/defineproperty';\n'require util/global';\n\n\n/**\n * @param {string} target Qualified name of the class or method to polyfill,\n *     e.g. 'Array.prototype.includes' or 'Map'.\n * @param {?function(*): *} polyfill A function that takes the current browser\n *     implementation of the target and returns an optional new polyfill\n *     implementation.  If null is returned, then no polyfill will be added.  A\n *     null argument for this parameter indicates that the function will not be\n *     polyfilled, and is only useful for `build_polyfill_table.js` bookkeeping.\n * @param {string} fromLang The language level in which the target is expected\n *     to already be present in the browser.  The compiler requires that\n *     `languageOut < fromLang` before injecting a polyfill (i.e. if the\n *     specified output language already includes the feature then there's no\n *     need to polyfill it).\n * @param {string} toLang The language level required by the polyfill\n *     implementation.  The compiler will issue an error if a polyfill is\n *     required, but `languageOut < toLang`.  Additionally, the\n *     `build_polyfill_table.js` script audits the polyfill dependency tree to\n *     ensure that no polyfill with a lower `toLang` depends on one with a\n *     higher `toLang`.\n * @suppress {reportUnknownTypes}\n * @noinline\n * NOTE: We prevent inlining so RemoveUnusedPolyfills can always recognize this\n * call.\n */\n$jscomp.polyfill = function(target, polyfill, fromLang, toLang) {\n  if (!polyfill) return;\n  var obj = $jscomp.global;\n  var split = target.split('.');\n  for (var i = 0; i < split.length - 1; i++) {\n    var key = split[i];\n    if (!(key in obj)) obj[key] = {};  // Might want to be defineProperty.\n    obj = obj[key];\n  }\n  var property = split[split.length - 1];\n  var orig = obj[property];\n  var impl = polyfill(orig);\n  if (impl == orig || impl == null) return;\n  $jscomp.defineProperty(\n      obj, property, {configurable: true, writable: true, value: impl});\n};\n",
    "/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require base';\n'require es6/util/makeiterator';\n'require util/global';\n'require util/polyfill';\n\n/**\n * Should we unconditionally override a native Promise implementation with our\n * own?\n * @define {boolean}\n */\n$jscomp.FORCE_POLYFILL_PROMISE = false;\n\n\n$jscomp.polyfill('Promise',\n    /**\n     * @param {*} NativePromise\n     * @return {*}\n     * @suppress {reportUnknownTypes}\n     */\n    function(NativePromise) {\n  // TODO(bradfordcsmith): Do we need to add checks for standards conformance?\n  //     e.g. The version of FireFox we currently use for testing has a Promise\n  //     that fails to reject attempts to fulfill it with itself, but that\n  //     isn't reasonably testable here.\n  if (NativePromise && !$jscomp.FORCE_POLYFILL_PROMISE) {\n    return NativePromise;\n  }\n\n  /**\n    * Schedules code to be executed asynchronously.\n    * @constructor\n    * @struct\n    */\n  function AsyncExecutor() {\n    /**\n     * Batch of functions to execute.\n     *\n     * Will be `null` initially and immediately after a batch finishes\n     * executing.\n     * @private {?Array<function()>}\n     */\n    this.batch_ = null;\n  }\n\n  /**\n   * Schedule a function to execute asynchronously.\n   *\n   * -   The function will execute:\n   *     -   After the current call stack has completed executing.\n   *     -   After any functions previously scheduled using this object.\n   * -   The return value will be ignored.\n   * -   An exception thrown by the method will be caught and asynchronously\n   *     rethrown when it cannot interrupt any other code. This class provides\n   *     no way to catch such exceptions.\n   * @param {function():?} f\n   */\n  AsyncExecutor.prototype.asyncExecute = function(f) {\n    if (this.batch_ == null) {\n      // no batch created yet, or last batch was fully executed\n      this.batch_ = [];\n      var self = this;\n      this.asyncExecuteFunction(function() { self.executeBatch_(); });\n    }\n    this.batch_.push(f);\n  };\n\n  // NOTE: We want to make sure AsyncExecutor will work as expected even if\n  // testing code should override setTimeout()\n  /** @const {function(!Function, number)} */\n  var nativeSetTimeout = $jscomp.global['setTimeout'];\n\n  /**\n   * Schedule a function to execute asynchronously as soon as possible.\n   *\n   * NOTE: May be overridden for testing.\n   * @package\n   * @param {function()} f\n   */\n  AsyncExecutor.prototype.asyncExecuteFunction = function(f) {\n    nativeSetTimeout(f, 0);\n  };\n\n  /**\n   * Execute scheduled jobs in a batch until all are executed or the batch\n   * execution time limit has been reached.\n   * @private\n   */\n  AsyncExecutor.prototype.executeBatch_ = function() {\n    while (this.batch_ && this.batch_.length) {\n      var /** !Array<?function()> */ executingBatch = this.batch_;\n      // Executions scheduled while executing this batch go into a new one to\n      // avoid the batch array getting too big.\n      this.batch_ = [];\n      for (var i = 0; i < executingBatch.length; ++i) {\n        var f = /** @type {function()} */ (executingBatch[i]);\n        executingBatch[i] = null;  // free memory\n        try {\n          f();\n        } catch (error) {\n          this.asyncThrow_(error);\n        }\n      }\n    }\n    // All jobs finished executing, so force scheduling a new batch next\n    // time asyncExecute() is called.\n    this.batch_ = null;\n  };\n\n  /**\n   * @private\n   * @param {*} exception\n   */\n  AsyncExecutor.prototype.asyncThrow_ = function(exception) {\n    this.asyncExecuteFunction(function() { throw exception; });\n  };\n\n  /**\n   * @enum {number}\n   */\n  var PromiseState = {\n    /** The Promise is waiting for resolution. */\n    PENDING: 0,\n\n    /** The Promise has been resolved with a fulfillment value. */\n    FULFILLED: 1,\n\n    /** The Promise has been resolved with a rejection reason. */\n    REJECTED: 2\n  };\n\n\n  /**\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise\n   * @param {function(\n   *             function((TYPE|IThenable<TYPE>|Thenable|null)=),\n   *             function(*=))} executor\n   * @constructor\n   * @extends {Promise<TYPE>}\n   * @template TYPE\n   */\n  var PolyfillPromise = function(executor) {\n    /** @private {PromiseState} */\n    this.state_ = PromiseState.PENDING;\n\n    /**\n     * The settled result of the Promise. Immutable once set with either a\n     * fulfillment value or rejection reason.\n     * @private {*}\n     */\n    this.result_ = undefined;\n\n    /**\n     * These functions must be asynchronously executed when this promise\n     * settles.\n     * @private {?Array<function()>}\n     */\n    this.onSettledCallbacks_ = [];\n\n    var resolveAndReject = this.createResolveAndReject_();\n    try {\n      executor(resolveAndReject.resolve, resolveAndReject.reject);\n    } catch (e) {\n      resolveAndReject.reject(e);\n    }\n  };\n\n\n  /**\n   * Create a pair of functions for resolving or rejecting this Promise.\n   *\n   * <p>After the resolve or reject function has been called once, later calls\n   * do nothing.\n   * @private\n   * @return {{\n   *     resolve: function((TYPE|IThenable<TYPE>|Thenable|null)=),\n   *     reject:  function(*=)\n   * }}\n   */\n  PolyfillPromise.prototype.createResolveAndReject_ = function() {\n    var thisPromise = this;\n    var alreadyCalled = false;\n    /**\n     * @param {function(this:PolyfillPromise<TYPE>, T)} method\n     * @return {function(T)}\n     * @template T\n     */\n    function firstCallWins(method) {\n      return function(x) {\n        if (!alreadyCalled) {\n          alreadyCalled = true;\n          method.call(thisPromise, x);\n        }\n      };\n    }\n    return {\n      resolve: firstCallWins(this.resolveTo_),\n      reject: firstCallWins(this.reject_)\n    };\n  };\n\n\n  /**\n   * @private\n   * @param {*} value\n   */\n  PolyfillPromise.prototype.resolveTo_ = function(value) {\n    if (value === this) {\n      this.reject_(new TypeError('A Promise cannot resolve to itself'));\n    } else if (value instanceof PolyfillPromise) {\n      this.settleSameAsPromise_(/** @type {!PolyfillPromise} */ (value));\n    } else if (isObject(value)) {\n      this.resolveToNonPromiseObj_(/** @type {!Object} */ (value));\n    } else {\n      this.fulfill_(value);\n    }\n  };\n\n\n  /**\n   * @private\n   * @param {!Object} obj\n   * @suppress {strictMissingProperties} obj.then\n   */\n  PolyfillPromise.prototype.resolveToNonPromiseObj_ = function(obj) {\n    var thenMethod = undefined;\n\n    try {\n      thenMethod = obj.then;\n    } catch (error) {\n      this.reject_(error);\n      return;\n    }\n    if (typeof thenMethod == 'function') {\n      this.settleSameAsThenable_(thenMethod, /** @type {!Thenable} */ (obj));\n    } else {\n      this.fulfill_(obj);\n    }\n  };\n\n\n  /**\n   * @param {*} value anything\n   * @return {boolean}\n   */\n  function isObject(value) {\n    switch (typeof value) {\n      case 'object':\n        return value != null;\n      case 'function':\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Reject this promise for the given reason.\n   * @private\n   * @param {*} reason\n   * @throws {!Error} if this promise is already fulfilled or rejected.\n   */\n  PolyfillPromise.prototype.reject_ = function(reason) {\n    this.settle_(PromiseState.REJECTED, reason);\n  };\n\n  /**\n   * Fulfill this promise with the given value.\n   * @private\n   * @param {!TYPE} value\n   * @throws {!Error} when this promise is already fulfilled or rejected.\n   */\n  PolyfillPromise.prototype.fulfill_ = function(value) {\n    this.settle_(PromiseState.FULFILLED, value);\n  };\n\n  /**\n   * Fulfill or reject this promise with the given value/reason.\n   * @private\n   * @param {!PromiseState} settledState (FULFILLED or REJECTED)\n   * @param {*} valueOrReason\n   * @throws {!Error} when this promise is already fulfilled or rejected.\n   */\n  PolyfillPromise.prototype.settle_ = function(settledState, valueOrReason) {\n    if (this.state_ != PromiseState.PENDING) {\n      throw new Error(\n          'Cannot settle(' + settledState + ', ' + valueOrReason +\n          '): Promise already settled in state' + this.state_);\n    }\n    this.state_ = settledState;\n    this.result_ = valueOrReason;\n    this.executeOnSettledCallbacks_();\n  };\n\n  PolyfillPromise.prototype.executeOnSettledCallbacks_ = function() {\n    if (this.onSettledCallbacks_ != null) {\n      for (var i = 0; i < this.onSettledCallbacks_.length; ++i) {\n        asyncExecutor.asyncExecute(this.onSettledCallbacks_[i]);\n      }\n      this.onSettledCallbacks_ = null;  // free memory\n    }\n  };\n\n  /**\n   * All promise async execution is managed by a single executor for the\n   * sake of efficiency.\n   * @const {!AsyncExecutor}\n   */\n  var asyncExecutor = new AsyncExecutor();\n\n  /**\n   * Arrange to settle this promise in the same way as the given thenable.\n   * @private\n   * @param {!PolyfillPromise} promise\n   */\n  PolyfillPromise.prototype.settleSameAsPromise_ = function(promise) {\n    var methods = this.createResolveAndReject_();\n\n    // Calling then() would create an unnecessary extra promise.\n    promise.callWhenSettled_(methods.resolve, methods.reject);\n  };\n\n  /**\n   * Arrange to settle this promise in the same way as the given thenable.\n   * @private\n   * @param {function(\n   *     function((TYPE|IThenable<TYPE>|Thenable|null)=),\n   *     function(*=))\n   * } thenMethod\n   * @param {!Thenable} thenable\n   */\n  PolyfillPromise.prototype.settleSameAsThenable_ = function(\n      thenMethod, thenable) {\n    var methods = this.createResolveAndReject_();\n\n    // Don't trust an unknown thenable implementation not to throw exceptions.\n    try {\n      thenMethod.call(thenable, methods.resolve, methods.reject);\n    } catch (error) {\n      methods.reject(error);\n    }\n  };\n\n  /** @override */\n  PolyfillPromise.prototype.then = function(onFulfilled, onRejected) {\n    var resolveChild;\n    var rejectChild;\n    var childPromise = new PolyfillPromise(function(resolve, reject) {\n      resolveChild = resolve;\n      rejectChild = reject;\n    });\n    function createCallback(paramF, defaultF) {\n      // The spec says to ignore non-function values for onFulfilled and\n      // onRejected\n      if (typeof paramF == 'function') {\n        return function(x) {\n          try {\n            resolveChild(paramF(x));\n          } catch (error) {\n            rejectChild(error);\n          }\n        };\n      } else {\n        return defaultF;\n      }\n    }\n\n    this.callWhenSettled_(\n        createCallback(onFulfilled, resolveChild),\n        createCallback(onRejected, rejectChild));\n    return childPromise;\n  };\n\n  /** @override */\n  PolyfillPromise.prototype.catch = function(onRejected) {\n    return this.then(undefined, onRejected);\n  };\n\n\n  PolyfillPromise.prototype.callWhenSettled_ = function(\n      onFulfilled, onRejected) {\n    var /** !PolyfillPromise */ thisPromise = this;\n    function callback() {\n      switch (thisPromise.state_) {\n        case PromiseState.FULFILLED:\n          onFulfilled(thisPromise.result_);\n          break;\n        case PromiseState.REJECTED:\n          onRejected(thisPromise.result_);\n          break;\n        default:\n          throw new Error('Unexpected state: ' + thisPromise.state_);\n      }\n    }\n    if (this.onSettledCallbacks_ == null) {\n      // we've already settled\n      asyncExecutor.asyncExecute(callback);\n    } else {\n      this.onSettledCallbacks_.push(callback);\n    }\n  };\n\n  // called locally, so give it a name\n  function resolvingPromise(opt_value) {\n    if (opt_value instanceof PolyfillPromise) {\n      return opt_value;\n    } else {\n      return new PolyfillPromise(function(resolve, reject) {\n        resolve(opt_value);\n      });\n    }\n  }\n  PolyfillPromise['resolve'] = resolvingPromise;\n\n\n  PolyfillPromise['reject'] = function(opt_reason) {\n    return new PolyfillPromise(function(resolve, reject) {\n      reject(opt_reason);\n    });\n  };\n\n\n  PolyfillPromise['race'] = function(thenablesOrValues) {\n    return new PolyfillPromise(function(resolve, reject) {\n      var /** !Iterator<*> */ iterator =\n          $jscomp.makeIterator(thenablesOrValues);\n      for (var /** !IIterableResult<*> */ iterRec = iterator.next();\n           !iterRec.done;\n           iterRec = iterator.next()) {\n        // Using resolvingPromise() allows us to treat all elements the same\n        // way.\n        // NOTE: resolvingPromise(promise) always returns the argument\n        // unchanged.\n        // Using .callWhenSettled_() instead of .then() avoids creating an\n        // unnecessary extra promise.\n        resolvingPromise(iterRec.value).callWhenSettled_(resolve, reject);\n      }\n    });\n  };\n\n\n  PolyfillPromise['all'] = function(thenablesOrValues) {\n    var /** !Iterator<*> */ iterator = $jscomp.makeIterator(thenablesOrValues);\n    var /** !IIterableResult<*> */ iterRec = iterator.next();\n\n    if (iterRec.done) {\n      return resolvingPromise([]);\n    } else {\n      return new PolyfillPromise(function(resolveAll, rejectAll) {\n        var resultsArray = [];\n        var unresolvedCount = 0;\n\n        function onFulfilled(i) {\n          return function(ithResult) {\n            resultsArray[i] = ithResult;\n            unresolvedCount--;\n            if (unresolvedCount == 0) {\n              resolveAll(resultsArray);\n            }\n          };\n        }\n\n        do {\n          resultsArray.push(undefined);\n          unresolvedCount++;\n          // Using resolvingPromise() allows us to treat all elements the same\n          // way.\n          // NOTE: resolvingPromise(promise) always returns the argument\n          // unchanged. Using .callWhenSettled_() instead of .then() avoids\n          // creating an unnecessary extra promise.\n          resolvingPromise(iterRec.value)\n              .callWhenSettled_(\n                  onFulfilled(resultsArray.length - 1), rejectAll);\n          iterRec = iterator.next();\n        } while (!iterRec.done);\n      });\n    }\n  };\n\n  return PolyfillPromise;\n}, 'es6', 'es3');\n",
    "/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Symbol polyfill.\n * @suppress {uselessCode}\n */\n\n'require es6/util/arrayiterator';\n'require util/defineproperty';\n'require util/global';\n\n/** @const {string} */\n$jscomp.SYMBOL_PREFIX = 'jscomp_symbol_';\n\n/**\n * Initializes the Symbol function.\n * @suppress {reportUnknownTypes}\n */\n$jscomp.initSymbol = function() {\n  // Only need to do this once. All future calls are no-ops.\n  $jscomp.initSymbol = function() {};\n\n  if (!$jscomp.global['Symbol']) {\n    $jscomp.global['Symbol'] = $jscomp.Symbol;\n  }\n};\n\n\n/**\n * @struct @constructor\n * @param {string} id\n * @param {string=} opt_description\n */\n$jscomp.SymbolClass = function(id, opt_description) {\n  /** @private @const {string} */\n  this.$jscomp$symbol$id_ = id;\n\n  /** @const {string|undefined} */\n  this.description;\n\n  // description is read-only.\n  $jscomp.defineProperty(\n      this, 'description',\n      {configurable: true, writable: true, value: opt_description});\n};\n\n\n/** @override */\n$jscomp.SymbolClass.prototype.toString = function() {\n  return this.$jscomp$symbol$id_;\n};\n\n\n/**\n * Produces \"symbols\" (actually just unique strings).\n * @param {string=} opt_description\n * @return {symbol}\n */\n$jscomp.Symbol = /** @type {function(): !Function} */ (function() {\n  var counter = 0;\n\n  /**\n   * @param {string=} opt_description\n   * @return {symbol}\n   * @suppress {reportUnknownTypes}\n   */\n  function Symbol(opt_description) {\n    if (/** @type {?} */ (this) instanceof Symbol) {\n      throw new TypeError('Symbol is not a constructor');\n    }\n    return /** @type {?} */ (new $jscomp.SymbolClass(\n        $jscomp.SYMBOL_PREFIX + (opt_description || '') + '_' + (counter++),\n        opt_description));\n  }\n\n  return Symbol;\n})();\n\n/**\n * Initializes Symbol.iterator (if it's not already defined) and adds a\n * Symbol.iterator property to the Array prototype.\n * @suppress {reportUnknownTypes}\n */\n$jscomp.initSymbolIterator = function() {\n  $jscomp.initSymbol();\n  var symbolIterator = $jscomp.global['Symbol'].iterator;\n  if (!symbolIterator) {\n    symbolIterator = $jscomp.global['Symbol'].iterator =\n        $jscomp.global['Symbol']('Symbol.iterator');\n  }\n\n  if (typeof Array.prototype[symbolIterator] != 'function') {\n    $jscomp.defineProperty(\n        Array.prototype, symbolIterator, {\n          configurable: true,\n          writable: true,\n          /**\n           * @this {Array}\n           * @return {!IteratorIterable}\n           */\n          value: function() {\n            return $jscomp.iteratorPrototype(\n                $jscomp.arrayIteratorImpl(this));\n          }\n        });\n  }\n\n  // Only need to do this once. All future calls are no-ops.\n  $jscomp.initSymbolIterator = function() {};\n};\n\n\n/**\n * Initializes Symbol.asyncIterator (if it's not already defined)\n * @suppress {reportUnknownTypes}\n */\n$jscomp.initSymbolAsyncIterator = function() {\n  $jscomp.initSymbol();\n  var symbolAsyncIterator = $jscomp.global['Symbol'].asyncIterator;\n  if (!symbolAsyncIterator) {\n    symbolAsyncIterator = $jscomp.global['Symbol'].asyncIterator =\n        $jscomp.global['Symbol']('Symbol.asyncIterator');\n  }\n\n  // Only need to do this once. All future calls are no-ops.\n  $jscomp.initSymbolAsyncIterator = function() {};\n};\n\n/**\n * Returns an iterator with the given `next` method.  Passing\n * all iterators through this function allows easily extending\n * the definition of `%IteratorPrototype%` if methods are ever\n * added to it in the future.\n *\n * @param {function(this: Iterator<T>): T} next\n * @return {!IteratorIterable<T>}\n * @template T\n * @suppress {reportUnknownTypes}\n */\n$jscomp.iteratorPrototype = function(next) {\n  $jscomp.initSymbolIterator();\n\n  var iterator = {next: next};\n  /**\n   * @this {IteratorIterable}\n   * @return {!IteratorIterable}\n   */\n  iterator[$jscomp.global['Symbol'].iterator] = function() {\n    return this;\n  };\n  return /** @type {!IteratorIterable} */ (iterator);\n};\n",
    "/*\n * Copyright 2018 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require base';\n'require es6/symbol';\n'require es6/util/setprototypeof';\n'require es6/util/makeiterator';\n\n/**\n * @fileoverview Implementation for $jscomp.generator\n *\n * This closure-compiler internal JavaScript library provides an ES3-compatible\n * API for writing generator functions using a minimum of boilerplate.\n *\n * Example:\n * ```javascript\n * // yields numbers starting with the given value, then incrementing by the\n * // value supplied to the next() method until the computed value is <= min or\n * // >= max. Then it returns the total number of times it yielded.\n * // If the client code calls throw(), the error will be logged and then\n * // yielded, but the generator won't terminate.\n * function *es6Definition(start, min, max) {\n *   let currentValue = start;\n *   let yieldCount = 0;\n *   while (currentValue > min && currentValue < max) {\n *     try {\n *       currentValue += yield(currentValue);\n *     } catch (e) {\n *       yield(e);\n *       console.log('client threw error', e);\n *     } finally {\n *       yieldCount++;\n *     }\n *   }\n *   return [yieldCount, currentValue];\n * }\n *\n * function es3Definition(start, min, max) {\n *   var currentValue;\n *   var yieldCount;\n *   var e;\n *\n *   return $jscomp.generator.createGenerator(\n *       es3Definition,\n *       function (context$) {\n *         switch (context$.nextAddress) {\n *           case 1: // execution always starts with 1\n *             currentValue = start;\n *             yieldCount = 0;\n *             // fall-through\n *\n *           case 2:\n *             if (!(currentValue > min && currentValue < max)) {\n *               // exit while loop:\n *               return context$.jumpTo(3);\n *             }\n *             // try {\n *             JSCompiler_temp_const$jscomp$1 = currentValue;\n *             context$.setCatchFinallyBlocks(4, 5);\n *             return context$.yield(currentValue, 7);\n *\n *           case 7:\n *             currentValue =\n *                 JSCompiler_temp_const$jscomp$1 + context$.yieldResult;\n *             // fall-through: execute finally block\n *\n *           case 5: // finally block start\n *             context$.enterFinallyBlock();\n *             yieldCount++;\n *             return context$.leaveFinallyBlock(6);\n *\n *           case 4: // catch block start\n *             e = context$.enterCatchBlock();\n *             return context$.yield(e, 8);\n *\n *           case 8: // finish catch block\n *             console.log('client threw error', e);\n *             return context$.jumpTo(5);\n *\n *           case 6:\n *             context$.jumpTo(2);\n *             break;\n *\n *           case 3:\n *             // come back here when while loop block exits\n *             return context$.return([yieldCount, currentValue]);\n *         }\n *       }\n *   });\n * };\n * ```\n */\n\n/** @const */\n$jscomp.generator = {};\n\n/**\n * Ensures that the iterator result is actually an object.\n *\n * @private\n * @final\n * @param {*} result\n * @return {void}\n * @throws {TypeError} if the result is not an instenace of Object.\n */\n$jscomp.generator.ensureIteratorResultIsObject_ = function(result) {\n  if (result instanceof Object) {\n    return;\n  }\n  throw new TypeError('Iterator result ' + result + ' is not an object');\n};\n\n\n/**\n * Tracks state machine state used by generator.Engine.\n *\n * @template VALUE\n * @constructor\n * @final\n * @struct\n */\n$jscomp.generator.Context = function() {\n  /**\n   * Whether the generator program is being executed at the moment in the\n   * current context. Is used to prevent reentrancy.\n   *\n   * @private\n   * @type {boolean}\n   */\n  this.isRunning_ = false;\n\n  /**\n   * An iterator that should yield all its values before the main program can\n   * continue.\n   *\n   * @private\n   * @type {?Iterator<VALUE>}\n   */\n  this.yieldAllIterator_ = null;\n\n  /**\n   * The value that will be sent to the program as the result of suspended\n   * yield expression.\n   *\n   * @type {?}\n   */\n  this.yieldResult = undefined;\n\n  /**\n   * The next address where the state machine execution should be resumed.\n   *\n   * <p>Program execution starts at 1 and ends at 0.\n   *\n   * @type {number}\n   */\n  this.nextAddress = 1;\n\n  /**\n   * The address that should be executed once an exception is thrown.\n   *\n   * <p>Value of 0 means no catch block exist that would handles an exception.\n   *\n   * @private\n   * @type {number}\n   */\n  this.catchAddress_ = 0;\n\n  /**\n   * The address that should be executed once the result is being returned\n   * or if the exception is thrown and there is no catchAddress specified.\n   *\n   * <p>Value of 0 means no finally block is set.\n   *\n   * @private\n   * @type {number}\n   */\n  this.finallyAddress_ = 0;\n\n  /**\n   * Stores information for the runtime propagation of values and control\n   * flow such as the behaviour of statements (break, continue, return and\n   * throw) that perform nonlocal transfers of control.\n   *\n   * @private\n   * @type {null|{return: VALUE}|{exception, isException: boolean}|{jumpTo: number}}.\n   */\n  this.abruptCompletion_ = null;\n\n  /**\n   * The preserved abruptCompletion_ when entering a `finally` block. If\n   * the `finally` block completes normally the preserved abruptCompletion_ is\n   * restored:\n   * <pre>\n   * try {\n   * } finally {  // nesting level 0\n   *   // abruptCompletion_ is saved in finallyContexts_[0]\n   *   try {\n   *   } finally {  // nesting level 1\n   *     // abruptCompletion_ is saved in finallyContexts_[1]\n   *     ...\n   *     // abruptCompletion_ is restored from finallyContexts_[1]\n   *   }\n   *   // abruptCompletion_ is restored from finallyContexts_[0]\n   * }\n   * <pre>\n   *\n   * @private\n   * @type {?Array<null|{return: VALUE}|{exception, isException: boolean}|{jumpTo: number}>}.\n   */\n  this.finallyContexts_ = null;\n};\n\n/**\n * Marks generator program as being run.\n *\n * @private\n * @final\n * @return {void}\n * @throws {TypeError} if generator is already running.\n */\n$jscomp.generator.Context.prototype.start_ = function() {\n  if (this.isRunning_) {\n    throw new TypeError('Generator is already running');\n  }\n  this.isRunning_ = true;\n};\n\n/**\n *\n *\n * @private\n * @final\n * @return {void}\n */\n$jscomp.generator.Context.prototype.stop_ = function() {\n  this.isRunning_ = false;\n};\n\n/**\n * Transfers program execution to an appropriate catch/finally block that\n * should be executed if exception occurs.\n *\n * @private\n * @final\n * @return {void}\n */\n$jscomp.generator.Context.prototype.jumpToErrorHandler_ = function() {\n  this.nextAddress = this.catchAddress_ || this.finallyAddress_;\n};\n\n/**\n * Sets the result of suspended yield expression.\n *\n * @private\n * @final\n * @param {?=} value The value to send to the generator.\n * @return {void}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Context.prototype.next_ = function(value) {\n  this.yieldResult = value;\n};\n\n/**\n * Throws exception as the result of suspended yield.\n *\n * @private\n * @final\n * @param {?} e\n * @return {void}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Context.prototype.throw_ = function(e) {\n  this.abruptCompletion_ = {exception: e, isException: true};\n  this.jumpToErrorHandler_();\n};\n\n/**\n * Returns a value as the result of generator function.\n *\n * @final\n * @param {VALUE=} value\n * @return {void}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Context.prototype.return = function(value) {\n  this.abruptCompletion_ = {return: /** @type {VALUE} */ (value)};\n  this.nextAddress = this.finallyAddress_;\n};\n\n/**\n * Changes the context so the program execution will continue from the given\n * state after executing nessesary pending finally blocks first.\n *\n * @final\n * @param {number} nextAddress The state that should be run.\n * @return {void}\n */\n$jscomp.generator.Context.prototype.jumpThroughFinallyBlocks = function(\n    nextAddress) {\n  this.abruptCompletion_ = {jumpTo: nextAddress};\n  this.nextAddress = this.finallyAddress_;\n};\n\n/**\n * Pauses the state machine program assosiated with generator function to yield\n * a value.\n *\n * @final\n * @param {VALUE} value The value to return from the generator function via\n *     the iterator protocol.\n * @param {number} resumeAddress The address where the program should resume.\n * @return {{value: VALUE}}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Context.prototype.yield = function(value, resumeAddress) {\n  this.nextAddress = resumeAddress;\n  return {value: value};\n};\n\n/**\n * Causes the state machine program to yield all values from an iterator.\n *\n * @final\n * @param {string|!Iterator<VALUE>|!Iterable<VALUE>|!Arguments<VALUE>} iterable\n *     Iterator to yeild all values from.\n * @param {number} resumeAddress The address where the program should resume.\n * @return {void | {value: VALUE}}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Context.prototype.yieldAll = function(\n    iterable, resumeAddress) {\n  /** @const @type {!Iterator<VALUE>} */ var iterator =\n      $jscomp.makeIterator(iterable);\n  /** @const */ var result = iterator.next();\n  $jscomp.generator.ensureIteratorResultIsObject_(result);\n  if (result.done) {\n    // If `someGenerator` in `x = yield *someGenerator` completes immediately,\n    // x is the return value of that generator.\n    this.yieldResult = result.value;\n    this.nextAddress = resumeAddress;\n    return;\n  }\n  this.yieldAllIterator_ = iterator;\n  return this.yield(result.value, resumeAddress);\n};\n\n/**\n * Changes the context so the program execution will continue from the given\n * state.\n *\n * @final\n * @param {number} nextAddress The state the program should continue\n * @return {void}\n */\n$jscomp.generator.Context.prototype.jumpTo = function(nextAddress) {\n  this.nextAddress = nextAddress;\n};\n\n/**\n * Changes the context so the program execution ends.\n *\n * @final\n * @return {void}\n */\n$jscomp.generator.Context.prototype.jumpToEnd = function() {\n  this.nextAddress = 0;\n};\n\n/**\n * Sets catch / finally handlers.\n * Used for try statements with catch blocks.\n *\n * @final\n * @param {number} catchAddress The address of the catch block.\n * @param {number=} finallyAddress The address of the finally block.\n * @return {void}\n */\n$jscomp.generator.Context.prototype.setCatchFinallyBlocks = function(\n    catchAddress, finallyAddress) {\n  this.catchAddress_ = catchAddress;\n  if (finallyAddress != undefined) {\n    this.finallyAddress_ = finallyAddress;\n  }\n};\n\n/**\n * Sets finally handler.\n * Used for try statements without catch blocks.\n *\n * @const\n * @param {number=} finallyAddress The address of the finally block or 0.\n * @return {void}\n */\n$jscomp.generator.Context.prototype.setFinallyBlock = function(finallyAddress) {\n  this.catchAddress_ = 0;\n  this.finallyAddress_ = finallyAddress || 0;\n};\n\n/**\n * Sets a catch handler and jumps to the next address.\n * Used for try statements without finally blocks.\n *\n * @final\n * @param {number} nextAddress The state that should be run next.\n * @param {number=} catchAddress The address of the catch block or 0.\n * @return {void}\n */\n$jscomp.generator.Context.prototype.leaveTryBlock = function(\n    nextAddress, catchAddress) {\n  this.nextAddress = nextAddress;\n  this.catchAddress_ = catchAddress || 0;\n};\n\n/**\n * Initializes exception variable in the beginning of catch block.\n *\n * @final\n * @param {number=} nextCatchBlockAddress The address of the next catch block\n *     that is preceded by no finally blocks.\n * @return {?} Returns an exception that was thrown from \"try\" block.\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Context.prototype.enterCatchBlock = function(\n    nextCatchBlockAddress) {\n  this.catchAddress_ = nextCatchBlockAddress || 0;\n  /** @const */ var exception =\n      /** @type {{exception, isException: boolean}} */ (this.abruptCompletion_)\n          .exception;\n  this.abruptCompletion_ = null;\n  return exception;\n};\n\n/**\n * Saves the current throw context which will be restored at the end of finally\n * block.\n *\n * @final\n * @param {number=} nextCatchAddress\n * @param {number=} nextFinallyAddress\n * @param {number=} finallyDepth The nesting level of current \"finally\" block.\n * @return {void}\n */\n$jscomp.generator.Context.prototype.enterFinallyBlock = function(\n    nextCatchAddress, nextFinallyAddress, finallyDepth) {\n  if (!finallyDepth) {\n    this.finallyContexts_ = [this.abruptCompletion_];\n  } else {\n    /**\n     * @type {!Array<null|{return: VALUE}|{exception, isException: boolean}|{jumpTo: number}>}\n     */\n    (this.finallyContexts_)[finallyDepth] = this.abruptCompletion_;\n  }\n  this.catchAddress_ = nextCatchAddress || 0;\n  this.finallyAddress_ = nextFinallyAddress || 0;\n};\n\n/**\n * Figures out whether the program execution should continue normally, or jump\n * to the closest catch/finally block.\n *\n * @final\n * @param {number} nextAddress The state that should be run next.\n * @param {number=} finallyDepth The nesting level of current \"finally\" block.\n * @return {void}\n * @suppress {strictMissingProperties}\n */\n$jscomp.generator.Context.prototype.leaveFinallyBlock = function(\n    nextAddress, finallyDepth) {\n  // There could be trailing finally contexts if a nested finally throws an\n  // exception or return.\n  // e.g.\n  // try {\n  //   ...\n  //   return 1;\n  // } finally {\n  //   // finallyDepth == 0\n  //   // finallyContext == [{return: 1}]\n  //   try {\n  //     ...\n  //     try {\n  //       throw new Error(2);\n  //     } finally {\n  //       // finallyDepth == 1\n  //       // finallyContext == [{return: 1}, {exception: Error(2)}]\n  //       try {\n  //         throw new Error(3);\n  //       } finally {\n  //         // finallyDepth == 2\n  //         // finallyContext == [\n  //         //     {return: 1},\n  //         //     {exception: Error(2)},\n  //         //     {exception: Error(3)}\n  //         // ]\n  //         throw new Error(4); // gets written in abruptCompletion_\n  //         // leaveFinallyBlock() never gets called here\n  //       }\n  //       // leaveFinallyBlock() never gets called here\n  //     }\n  //   } catch (e) {\n  //      // swallow error\n  //      // abruptCompletion becomes null\n  //   } finally {\n  //     // finallyDepth == 1\n  //     // finallyContext == [\n  //     //     {return: 1},\n  //     //     null, // overwritten, because catch swallowed the error\n  //     //     {exception: Error(3)}  // left over\n  //     // ]\n  //     // leaveFinallyBlock() called here\n  //     // finallyContext == [{return: 1}]\n  //     // abruptCompletion == null\n  //   }\n  //   // leaveFinallyBlock() called here\n  //   // finallyContext = []\n  //   // abruptCompletion == {return: 1};\n  // }\n  /** @const */ var preservedContext =\n      /**\n       * @type {!Array<null|{return: VALUE}|{exception, isException: boolean}|{jumpTo: number}>}\n       */\n      (this.finallyContexts_).splice(finallyDepth || 0)[0];\n  /** @const */ var abruptCompletion = this.abruptCompletion_ =\n      this.abruptCompletion_ || preservedContext;\n  if (abruptCompletion) {\n    if (abruptCompletion.isException) {\n      return this.jumpToErrorHandler_();\n    }\n    // Check if there is a pending break/continue jump that is not preceded by\n    // finally blocks that should be executed before.\n    // We always generate case numbers for the start and end of loops before\n    // numbers for anything they contain, so any finally blocks within will be\n    // guaranteed to have higher addresses than the loop break and continue\n    // positions.\n    // e.g.\n    // l1: while (...) {            // generated addresses: 100: break l1;\n    //       try {                  // generated addresses: 101: finally,\n    //         try {                // generated addresses: 102: finally,\n    //           l2: while (...) {  // generated addresses: 103: break l2;\n    //\n    //                 if (...) {\n    //                   break l1;  // becomes\n    //                              // $context.jumpThroughFinallyBlocks(101),\n    //                              // since 2 finally blocks must be crossed\n    //                 }\n    //                 break l2;    // becomes $context.jumpTo(103)\n    //               }\n    //         } finally {\n    //           // When leaving this finally block:\n    //           // 1. We keep the abrupt completion indicating 'break l1'\n    //           // 2. We jump to the enclosing finally block.\n    //         }\n    //       } finally {\n    //         // When leaving this finally block:\n    //         // 1. We complete the abruptCompletion indicating 'break l1' by\n    //         //   jumping to the loop start address.\n    //         // 2. Abrupt completion is now null, so normal execution\n    //         //   continues from there.\n    //       }\n    //     }\n    if (abruptCompletion.jumpTo != undefined &&\n        this.finallyAddress_ < abruptCompletion.jumpTo) {\n      this.nextAddress = abruptCompletion.jumpTo;\n      this.abruptCompletion_ = null;\n    } else {\n      this.nextAddress = this.finallyAddress_;\n    }\n  } else {\n    this.nextAddress = nextAddress;\n  }\n};\n\n/**\n * Is used in transpilation of `for in` statements.\n *\n * <p><code>for (var i in obj) {...}</code> becomes:\n * <pre>\n * for (var i, $for$in = context$.forIn(obj);\n *      (i = $for$in.getNext()) != null;\n *      ) {\n *   ...\n * }\n * </pre>\n *\n * @final\n * @param {?} object\n * @return {!$jscomp.generator.Context.PropertyIterator}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Context.prototype.forIn = function(object) {\n  return new $jscomp.generator.Context.PropertyIterator(object);\n};\n\n/**\n * @constructor\n * @final\n * @struct\n * @param {?} object\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Context.PropertyIterator = function(object) {\n  /**\n   * @private\n   * @const\n   * @type {?}\n   */\n  this.object_ = object;\n\n  /**\n   * @private\n   * @const\n   * @type {!Array<string>}\n   */\n  this.properties_ = [];\n\n  for (var property in /** @type {!Object} */ (object)) {\n    this.properties_.push(property);\n  }\n  this.properties_.reverse();\n};\n\n/**\n * Returns the next object's property that is still valid.\n *\n * @final\n * @return {?string}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Context.PropertyIterator.prototype.getNext = function() {\n  // The JS spec does not require that properties added after the loop begins\n  // be included in the loop, but it does require that the current property\n  // must still exist on the object when the loop iteration starts.\n  while (this.properties_.length > 0) {\n    /** @const */ var property = this.properties_.pop();\n    if (property in /** @type {!Object} */ (this.object_)) {\n      return property;\n    }\n  }\n  return null;\n};\n\n/**\n * Engine handling execution of a state machine associated with the generator\n * program and its context.\n *\n * @private\n * @template VALUE\n * @constructor\n * @final\n * @struct\n * @param {function(!$jscomp.generator.Context<VALUE>): (void|{value: VALUE})} program\n */\n$jscomp.generator.Engine_ = function(program) {\n  /**\n   * @private\n   * @const\n   * @type {!$jscomp.generator.Context<VALUE>}\n   */\n  this.context_ = new $jscomp.generator.Context();\n\n  /**\n   * @private\n   * @const\n   * @type {function(!$jscomp.generator.Context<VALUE>): (void|{value: VALUE})}\n   */\n  this.program_ = program;\n};\n\n/**\n * Returns an object with two properties done and value.\n * You can also provide a parameter to the next method to send a value to the\n * generator.\n *\n * @private\n * @final\n * @param {?=} value The value to send to the generator.\n * @return {!IIterableResult<VALUE>}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Engine_.prototype.next_ = function(value) {\n  this.context_.start_();\n  if (this.context_.yieldAllIterator_) {\n    return this.yieldAllStep_(\n        this.context_.yieldAllIterator_.next, value, this.context_.next_);\n  }\n  this.context_.next_(value);\n  return this.nextStep_();\n};\n\n/**\n * Attempts to finish the generator with a given value.\n *\n * @private\n * @final\n * @param {VALUE} value The value to return.\n * @return {!IIterableResult<VALUE>}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Engine_.prototype.return_ = function(value) {\n  this.context_.start_();\n  /** @const */ var yieldAllIterator = this.context_.yieldAllIterator_;\n  if (yieldAllIterator) {\n    /** @const @type {function(VALUE): !IIterableResult<VALUE>} */ var\n        returnFunction =\n            'return' in yieldAllIterator ? yieldAllIterator['return'] :\n                                           function(v) {\n                                             return {value: v, done: true};\n                                           };\n    return this.yieldAllStep_(returnFunction, value, this.context_.return);\n  }\n  this.context_.return(value);\n  return this.nextStep_();\n};\n\n/**\n * Resumes the execution of a generator by throwing an error into it and\n * returns an object with two properties done and value.\n *\n * @private\n * @final\n * @param {?} exception The exception to throw.\n * @return {!IIterableResult<VALUE>}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Engine_.prototype.throw_ = function(exception) {\n  this.context_.start_();\n  if (this.context_.yieldAllIterator_) {\n    return this.yieldAllStep_(\n        this.context_.yieldAllIterator_['throw'], exception,\n        this.context_.next_);\n  }\n  this.context_.throw_(exception);\n  return this.nextStep_();\n};\n\n/**\n * Redirects next/throw/return method calls to an iterator passed to \"yield *\".\n *\n * @private\n * @final\n * @template T\n * @param {function(this:Iterator<VALUE>, T): !IIterableResult<VALUE>} action\n * @param {T} value\n * @param {function(this:$jscomp.generator.Context, VALUE): void} nextAction\n * @return {!IIterableResult<VALUE>}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Engine_.prototype.yieldAllStep_ = function(\n    action, value, nextAction) {\n  try {\n    /** @const */ var result = action.call(\n        /** @type {!Iterator<VALUE>} */ (this.context_.yieldAllIterator_),\n        value);\n    $jscomp.generator.ensureIteratorResultIsObject_(result);\n    if (!result.done) {\n      this.context_.stop_();\n      return result;\n    }\n    // After `x = yield *someGenerator()` x is the return value of the\n    // generator, not a value passed to this generator by the next() method.\n    /** @const */ var resultValue = result.value;\n  } catch (e) {\n    this.context_.yieldAllIterator_ = null;\n    this.context_.throw_(e);\n    return this.nextStep_();\n  }\n  this.context_.yieldAllIterator_ = null;\n  nextAction.call(this.context_, resultValue);\n  return this.nextStep_();\n};\n\n/**\n * Continues/resumes program execution until the next suspension point (yield).\n *\n * @private\n * @final\n * @return {!IIterableResult<VALUE>}\n * @suppress {reportUnknownTypes, strictMissingProperties}\n */\n$jscomp.generator.Engine_.prototype.nextStep_ = function() {\n  while (this.context_.nextAddress) {\n    try {\n      /** @const */ var yieldValue = this.program_(this.context_);\n      if (yieldValue) {\n        this.context_.stop_();\n        return {value: yieldValue.value, done: false};\n      }\n    } catch (e) {\n      this.context_.yieldResult = undefined;\n      this.context_.throw_(e);\n    }\n  }\n\n  this.context_.stop_();\n  if (this.context_.abruptCompletion_) {\n    /** @const */ var abruptCompletion = this.context_.abruptCompletion_;\n    this.context_.abruptCompletion_ = null;\n    if (abruptCompletion.isException) {\n      throw abruptCompletion.exception;\n    }\n    return {value: abruptCompletion.return, done: true};\n  }\n  return {value: /** @type {?} */ (undefined), done: true};\n};\n\n/**\n * The Generator object that is returned by a generator function and it\n * conforms to both the iterable protocol and the iterator protocol.\n *\n * @private\n * @template VALUE\n * @constructor\n * @final\n * @implements {Generator<VALUE>}\n * @param {!$jscomp.generator.Engine_<VALUE>} engine\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.Generator_ = function(engine) {\n  /** @const @override */\n  this.next = function(opt_value) {\n    return engine.next_(opt_value);\n  };\n\n  /** @const @override */\n  this.throw = function(exception) {\n    return engine.throw_(exception);\n  };\n\n  /** @const @override */\n  this.return = function(value) {\n    return engine.return_(value);\n  };\n\n  $jscomp.initSymbolIterator();\n\n  /** @this {$jscomp.generator.Generator_<VALUE>} */\n  this[Symbol.iterator] = function() {\n    return this;\n  };\n\n  // TODO(skill): uncomment once Symbol.toStringTag is polyfilled:\n  // this[Symbol.toStringTag] = 'Generator';\n};\n\n/**\n * Creates a generator backed up by Engine running a given program.\n *\n * @final\n * @template VALUE\n * @param {function(this:?, ...): (!Iterator<VALUE>|!Iterable<VALUE>)} generator\n * @param {function(!$jscomp.generator.Context<VALUE>): (void|{value: VALUE})} program\n * @return {!Generator<VALUE>}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.generator.createGenerator = function(generator, program) {\n  /** @const */ var result =\n      new $jscomp.generator.Generator_(new $jscomp.generator.Engine_(program));\n  // The spec says that `myGenFunc() instanceof myGenFunc` must be true.\n  // We'll make this work by setting the prototype before calling the\n  // constructor every time. All of the methods of the object are defined on the\n  // instance by the constructor, so this does no harm.\n  // We also cast Generator_ to Object to hide dynamic inheritance from\n  // jscompiler, it makes ConformanceRules$BanUnknownThis happy.\n  if ($jscomp.setPrototypeOf) {\n    /** @type {function(!Object, ?Object): !Object} */ ($jscomp.setPrototypeOf)(\n        result, generator.prototype);\n  }\n  return result;\n};\n",
    "/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require base';\n'require es6/promise';\n'require es6/generator_engine';\n\n/**\n * Handles the execution of an async function.\n *\n * An async function, foo(a, b), will be rewritten as:\n *\n * ```\n * function foo(a, b) {\n *   let $jscomp$async$this = this;\n *   let $jscomp$async$arguments = arguments;\n *   let $jscomp$async$super$get$x = () => super.x;\n *   function* $jscomp$async$generator() {\n *     // original body of foo() with:\n *     // - await (x) replaced with yield (x)\n *     // - arguments replaced with $jscomp$async$arguments\n *     // - this replaced with $jscomp$async$this\n *     // - super.x replaced with $jscomp$async$super$get$x()\n *     // - super.x(5) replaced with  $jscomp$async$super$get$x()\n *     //      .call($jscomp$async$this, 5)\n *   }\n *   return $jscomp.executeAsyncGenerator($jscomp$async$generator());\n * }\n * ```\n * @param {!Generator<?>} generator\n * @return {!Promise<?>}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.asyncExecutePromiseGenerator = function(generator) {\n  function passValueToGenerator(value) {\n    return generator.next(value);\n  }\n\n  function passErrorToGenerator(error) {\n    return generator.throw(error);\n  }\n\n  return new Promise(function(resolve, reject) {\n    function handleGeneratorRecord(/** !IIterableResult<*> */ genRec) {\n      if (genRec.done) {\n        resolve(genRec.value);\n      } else {\n        // One can await a non-promise, so genRec.value\n        // might not already be a promise.\n        Promise.resolve(genRec.value)\n            .then(passValueToGenerator, passErrorToGenerator)\n            .then(handleGeneratorRecord, reject);\n      }\n    }\n\n    handleGeneratorRecord(generator.next());\n  });\n};\n\n/**\n * Handles the execution of a generator function returning promises.\n *\n * An async function, foo(a, b), will be rewritten as:\n *\n * ```\n * function foo(a, b) {\n *   let $jscomp$async$this = this;\n *   let $jscomp$async$arguments = arguments;\n *   let $jscomp$async$super$get$x = () => super.x;\n *   return $jscomp.asyncExecutePromiseGeneratorFunction(\n *       function* () {\n *         // original body of foo() with:\n *         // - await (x) replaced with yield (x)\n *         // - arguments replaced with $jscomp$async$arguments\n *         // - this replaced with $jscomp$async$this\n *         // - super.x replaced with $jscomp$async$super$get$x()\n *         // - super.x(5) replaced with  $jscomp$async$super$get$x()\n *         //      .call($jscomp$async$this, 5)\n *       });\n * }\n * ```\n * @param {function(): !Generator<?>} generatorFunction\n * @return {!Promise<?>}\n * @suppress {reportUnknownTypes}\n */\n$jscomp.asyncExecutePromiseGeneratorFunction = function(generatorFunction) {\n  return $jscomp.asyncExecutePromiseGenerator(generatorFunction());\n};\n\n/**\n * Handles the execution of a state machine program that represents transpiled\n * async function.\n *\n * @final\n * @param {function(!$jscomp.generator.Context<?>): (void|{value: ?})} program\n * @return {!Promise<?>}\n * @suppress {reportUnknownTypes, visibility}\n */\n$jscomp.asyncExecutePromiseGeneratorProgram = function(program) {\n  return $jscomp.asyncExecutePromiseGenerator(\n      new $jscomp.generator.Generator_(\n          new $jscomp.generator.Engine_(\n              program)));\n};\n",
    "/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Utilities for iterator-returning methods.\n */\n'require es6/symbol';\n\n\n/**\n * Creates an iterator from an array-like, with a transformation function.\n * @param {!IArrayLike<INPUT>} array\n * @param {function(number, INPUT): OUTPUT} transform\n * @return {!IteratorIterable<OUTPUT>}\n * @template INPUT, OUTPUT\n * @suppress {checkTypes|reportUnknownTypes}\n */\n$jscomp.iteratorFromArray = function(array, transform) {\n  $jscomp.initSymbolIterator();\n  // NOTE: IE8 doesn't support indexing from boxed Strings.\n  if (array instanceof String) array = array + '';\n  var i = 0;\n  var iter = {\n    next: function() {\n      if (i < array.length) {\n        var index = i++;\n        return {value: transform(index, array[index]), done: false};\n      }\n      iter.next = function() { return {done: true, value: void 0}; };\n      return iter.next();\n    }\n  };\n  iter[Symbol.iterator] = function() { return iter; };\n  return iter;\n};\n",
    "/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require es6/util/iteratorfromarray';\n'require util/polyfill';\n\n// NOTE: Although Array.prototype.values was added to the 2015 edition of the\n// spec, we consider it an \"ES8\" feature because many browsers which are\n// otherwise ES6-compatible, have not implemented it due to web compatibility\n// issues. See https://bugs.chromium.org/p/chromium/issues/detail?id=615873\n$jscomp.polyfill('Array.prototype.values', function(orig) {\n  if (orig) return orig;\n\n  /**\n   * Returns an iterator of values of the given array.\n   *\n   * @this {!IArrayLike<VALUE>}\n   * @return {!IteratorIterable<VALUE>}\n   * @template VALUE\n   * @suppress {reportUnknownTypes}\n   */\n  var polyfill = function() {\n    return $jscomp.iteratorFromArray(this, function(k, v) { return v; });\n  };\n\n  return polyfill;\n}, 'es8', 'es3');\n",
    "/*\n * Copyright 2017 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require util/owns';\n'require util/polyfill';\n\n$jscomp.polyfill('Object.entries', function(orig) {\n  if (orig) return orig;\n\n  /**\n   * Returns an array of [key, value] arrays, one for each entry\n   * in the given object.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/entries\n   *\n   * @param {!Object<KEY, VALUE>} obj\n   * @return {!Array<!Array<KEY|VALUE>>}\n   * @template KEY, VALUE\n   */\n  var entries = function(obj) {\n    var result = [];\n    for (var key in obj) {\n      if ($jscomp.owns(obj, key)) {\n        result.push([key, obj[key]]);\n      }\n    }\n    return result;\n  };\n\n  return entries;\n}, 'es8', 'es3');\n",
    "/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require base';\n\n/**\n * Synonym for Object.prototype.hasOwnProperty.call(obj, prop).\n * @param {!Object} obj\n * @param {string} prop\n * @return {boolean}\n */\n$jscomp.owns = function(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n};\n",
    "/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require util/checkstringargs';\n'require util/polyfill';\n\n$jscomp.polyfill('String.prototype.startsWith', function(orig) {\n  if (orig) return orig;\n\n  /**\n   * Tests whether the string starts with a given substring.\n   *\n   * <p>Polyfills the instance method String.prototype.startsWith().\n   *\n   * @this {string}\n   * @param {string} searchString\n   * @param {number=} opt_position\n   * @return {boolean}\n   */\n  var polyfill = function(searchString, opt_position) {\n    'use strict';\n    var string = $jscomp.checkStringArgs(this, searchString, 'startsWith');\n    searchString = searchString + '';\n    var strLen = string.length;\n    var searchLen = searchString.length;\n    var i = Math.max(\n        0,\n        Math.min(/** @type {number} */ (opt_position) | 0, string.length));\n    var j = 0;\n    while (j < searchLen && i < strLen) {\n      if (string[i++] != searchString[j++]) return false;\n    }\n    return j >= searchLen;\n  };\n\n  return polyfill;\n}, 'es6', 'es3');\n",
    "/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require base';\n\n\n/**\n * Throws if the argument is a RegExp, or if thisArg is undefined.\n * @param {?} thisArg The 'this' arg, which must be defined.\n * @param {*} arg The first argument of the function, which mustn't be a RegExp.\n * @param {string} func Name of the function, for reporting.\n * @return {string} The thisArg, coerced to a string.\n * @suppress {reportUnknownTypes}\n */\n$jscomp.checkStringArgs = function(thisArg, arg, func) {\n  if (thisArg == null) {\n    throw new TypeError(\n        \"The 'this' value for String.prototype.\" + func +\n        ' must not be null or undefined');\n  }\n  if (arg instanceof RegExp) {\n    throw new TypeError(\n        'First argument to String.prototype.' + func +\n        ' must not be a regular expression');\n  }\n  return thisArg + '';\n};\n",
    "/* start example */\nexport default preact\n\nconst {\n  h,\n  createElement,\n  cloneElement,\n  createRef,\n  Component,\n  render,\n  rerender,\n  options,\n} = preact\n\nexport {\n  h,\n  createElement,\n  cloneElement,\n  createRef,\n  Component,\n  render,\n  rerender,\n  options,\n}\n/* end example */\n\n/* typal types/methods.xml namespace */\n\n/* typal types/options.xml namespace */\n\n/* typal types/vnode.xml namespace */\n\n/* typal types/component.xml namespace */\n",
    "import { h } from 'preact'\n/**\n * Help messages for form-group and inputs.\n */\nexport default function Help({ help, hid, invalid, valid }) {\n  let cc = 'text-muted'\n  if (invalid) cc = 'invalid-feedback'\n  else if (valid) cc = 'valid-feedback'\n  const c = `form-text ${cc}`\n  if (typeof help != 'string') {\n    return (  h('small',{'id':hid, 'className':c},\n      help,\n    ))\n  }\n  return (h('small',{'id':hid, 'className':c,\n    'dangerouslySetInnerHTML':{ __html: help }}))\n}",
    "/**\n * Allows for changes in values via properties, and for updates originated for the Form Model update via the context. Also fires onChange with the new value from properties.\n * @this {!preact.Component}\n */\nexport const shouldComponentUpdate = function (newProps, newContext) {\n  const { name, value } = this.props\n  const { value: newValue } = newProps\n  const newContextValue = this.context.values[name] != newContext.values[name]\n  if (newContextValue) return true\n\n  const nw = value != newValue\n  if (nw) {\n    if (newContext.onChange) newContext.onChange(newProps.name, newValue)\n    return false\n  }\n}\n\n/**\n * Extracts col classes from props and returns new props without them.\n * @param {!Object} props\n */\nexport const getClasses = (props) => {\n  const colClasses = []\n  const prop = Object.entries(props).reduce((acc, [key, value]) => {\n    if (key == 'col' || key.startsWith('col-')) {\n      colClasses.push(key)\n      return acc\n    }\n    acc[key] = value\n    return acc\n  }, {})\n  return { colClasses, prop }\n}",
    "import { h } from 'preact'\nimport { Component } from 'preact'\nimport Help from './help.jsx'\nimport { getClasses } from './lib/index.js';\n\n/**\n * The div with `form-group` class to hold the label, input, help and validation message.\n */\nexport default class FormGroup extends Component {\n  constructor() {\n    super()\n    this.id = `i${Math.floor(Math.random() * 100000)}`\n    this.hid = `h${this.id}`\n    /** @type {!_depackForm.FormGroupProps} */\n    this.props = this.props\n  }\n  getChildContext() {\n    return {\n      id: this.id,\n      hid: this.hid,\n    }\n  }\n  /**\n   * @param {!_depackForm.FormGroupProps} [props]\n   */\n  render({ children, label, help, details, className, 'form-row': formRow, row = formRow, labelClassName, ...props }) {\n    const c = [\n      'form-group', className,\n      row ? `${formRow ? 'form-' : ''}row` : null,\n    ]\n      .filter(Boolean).join(' ') || undefined\n\n    const { colClasses } = getClasses(props)\n\n    const lc = [row ? 'col-form-label' : null, labelClassName, ...colClasses]\n      .filter(Boolean).join(' ') || undefined\n\n    const lbl = label ?   h('label',{\n      'className':lc,\n      'htmlFor':this.id},label) : null\n\n    const he = ( h(Help,{help:help, hid:this.hid })) // ignore validation\n\n    if (details) {\n      return (\n                 h('details',{'className':c},\n          h('summary',{},\n            lbl,\n          ),\n          children,\n          row ? h('div',{'className':\"col-12\"},he) : he,\n        )\n      )\n    }\n\n    return (   h('div',{'className':c},\n      lbl,\n      children,\n      row ? h('div',{'className':\"col-12\"},he) : he,\n    ))\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').FormGroupProps} _depackForm.FormGroupProps\n */",
    "/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Polyfill for array destructuring.\n */\n'require es6/util/makeiterator';\n'require es6/util/arrayfromiterator';\n\n\n/**\n * Copies the values from an Iterable into an Array.\n * @param {string|!Array<T>|!Iterable<T>|!Arguments<T>} iterable\n * @return {!Array<T>}\n * @template T\n */\n$jscomp.arrayFromIterable = function(iterable) {\n  if (iterable instanceof Array) {\n    return iterable;\n  } else {\n    return $jscomp.arrayFromIterator($jscomp.makeIterator(iterable));\n  }\n};\n",
    "import { h } from 'preact'\nimport { Component } from 'preact'\nimport { shouldComponentUpdate, getClasses } from './lib/index.js'\n\nexport default class Select extends Component {\n  constructor() {\n    super()\n    /** @type {!_depackForm.SelectProps} */\n    this.props = this.props\n  }\n  shouldComponentUpdate(newProps, __, newContext) {\n    const res = shouldComponentUpdate.call(this, newProps, newContext)\n    return res\n  }\n  componentDidMount() {\n    const { value, name } = this.props\n    const { onChange } = this.context\n    if (onChange && value !== undefined) onChange(name, value)\n  }\n  /**\n   * @param {!_depackForm.SelectProps} [props]\n   */\n  render({ options, name, value, required, className, defaultText, ...props }) {\n    const { onChange, hid, id, values = {} } = this.context\n    const rendered = name in values // for SSR\n    const selectValue = rendered ? values[name] : value\n\n    const { colClasses } = getClasses(props)\n    const c = [\n      `custom-select`, className,\n    ]\n      .filter(Boolean).join(' ')\n\n    const select = (     h('select',{\n      'name':name,\n      'value':selectValue !== undefined ? selectValue : '',\n      'className':c,\n      'required':required,\n      'id':id,\n      'aria-describedby':hid,\n      'onChange':(e) => {\n        onChange(name, e.currentTarget.value)\n      }},\n      h('option',{'value':''},defaultText),\n      options.map(({ value: v, title }) => {\n        return h('option',{'key':v,'value':v,'selected':v==value},\n          title,\n        )\n      }),\n    ))\n    if (colClasses.length) {\n      return (  h('div',{'className':colClasses.join(' ')},select))\n    }\n    return select\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').SelectProps} _depackForm.SelectProps\n */",
    "import { h } from 'preact'\nimport { Component } from 'preact'\nimport { shouldComponentUpdate } from './lib/index.js'\n\n/**\n * The `<textarea>` element.\n */\nexport default class TextArea extends Component {\n  constructor() {\n    super()\n    /** @type {!_depackForm.TextAreaProps} */\n    this.props = this.props\n  }\n  shouldComponentUpdate(newProps, __, newContext) {\n    const res = shouldComponentUpdate.call(this, newProps, newContext)\n    return res\n  }\n  componentDidMount() {\n    const { children: [child], name } = this.props\n    const { onChange } = this.context\n    if (child) onChange(name, child.trim())\n  }\n  render(props) {\n    const { rows = 3, required, name, placeholder, children } =\n      /** @type {!_depackForm.TextAreaProps} */ (props)\n    const { hid, id, onChange, values = {} } = this.context\n    const rendered = name in values // for SSR\n    return h('textarea',{\n      'required':required,\n      'name':name,\n      'placeholder':placeholder,\n      'aria-describedby':hid,\n      'className':\"form-control\",\n      'id':id,\n      'onChange':(e) => {\n        onChange(name, e.currentTarget.value)\n      },\n      'rows':rows},\n        rendered ? values[name] : children\n      )\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').TextAreaProps} _depackForm.TextAreaProps\n */",
    "import { h } from 'preact'\nimport { Component } from 'preact'\nimport { shouldComponentUpdate, getClasses } from './lib/index.js'\nimport Help from './help.jsx'\n\nexport default class Input extends Component {\n  constructor() {\n    super()\n    /** @type {!_depackForm.InputProps} */\n    this.props = this.props\n  }\n  shouldComponentUpdate(newProps, __, newContext) {\n    const res = shouldComponentUpdate.call(this, newProps, newContext)\n    return res\n  }\n  componentDidMount() {\n    const { value, name } = this.props\n    const { onChange } = this.context\n    if (value !== undefined && onChange) onChange(name, value)\n  }\n  /**\n   * Triggers the onchange event on the form.\n   * @param {string} value\n   */\n  onChange(value) {\n    this.context.onChange(this.props.name, value)\n  }\n  /**\n   * @param {!_depackForm.InputProps} [props]\n   */\n  render({\n    required, name, placeholder, type = 'text', file, value, className,\n    invalid, valid, help, ...props\n  }) {\n    const { colClasses, prop } = getClasses(props)\n    const c = [\n      `form-control${file ? '-file' : ''}`, className,\n      invalid ? 'is-invalid' : null,\n      valid ? 'is-valid' : null,\n    ]\n      .filter(Boolean).join(' ')\n    const { hid, id, values = {} } = this.context\n    const rendered = name in values // for SSR\n    const input = (h('input',{...prop,\n      'required':required,\n      'name':name,\n      'placeholder':placeholder,\n      'className':c,\n      'value':rendered ? values[name] : value,\n      'type':type,\n      'aria-describedby':hid,\n      'id':id,\n      'onChange':(e) => {\n        this.onChange(e.currentTarget.value)\n      }\n    }))\n    if (colClasses.length) {\n      const he = help ? (   h(Help,{help:help, hid:hid, valid:valid, invalid:invalid })) : null\n      return (  h('div',{'className':colClasses.join(' ')},\n        input,\n        he,\n      ))\n    }\n    return input\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').InputProps} _depackForm.InputProps\n */",
    "export default function(url, options) {\n\toptions = options || {};\n\treturn new Promise( (resolve, reject) => {\n\t\tconst request = new XMLHttpRequest();\n\t\tconst keys = [];\n\t\tconst all = [];\n\t\tconst headers = {};\n\n\t\tconst response = () => ({\n\t\t\tok: (request.status/100|0) == 2,\t\t// 200-299\n\t\t\tstatusText: request.statusText,\n\t\t\tstatus: request.status,\n\t\t\turl: request.responseURL,\n\t\t\ttext: () => Promise.resolve(request.responseText),\n\t\t\tjson: () => Promise.resolve(JSON.parse(request.responseText)),\n\t\t\tblob: () => Promise.resolve(new Blob([request.response])),\n\t\t\tclone: response,\n\t\t\theaders: {\n\t\t\t\tkeys: () => keys,\n\t\t\t\tentries: () => all,\n\t\t\t\tget: n => headers[n.toLowerCase()],\n\t\t\t\thas: n => n.toLowerCase() in headers\n\t\t\t}\n\t\t});\n\n\t\trequest.open(options.method || 'get', url, true);\n\n\t\trequest.onload = () => {\n\t\t\trequest.getAllResponseHeaders().replace(/^(.*?):[^\\S\\n]*([\\s\\S]*?)$/gm, (m, key, value) => {\n\t\t\t\tkeys.push(key = key.toLowerCase());\n\t\t\t\tall.push([key, value]);\n\t\t\t\theaders[key] = headers[key] ? `${headers[key]},${value}` : value;\n\t\t\t});\n\t\t\tresolve(response());\n\t\t};\n\n\t\trequest.onerror = reject;\n\n\t\trequest.withCredentials = options.credentials=='include';\n\n\t\tfor (const i in options.headers) {\n\t\t\trequest.setRequestHeader(i, options.headers[i]);\n\t\t}\n\n\t\trequest.send(options.body || null);\n\t});\n}\n",
    "import { h } from 'preact'\nimport { Component } from 'preact'\nimport fetch from 'unfetch'\n\n/**\n * The class that has the `submit` method for sending data to the server and controlling the loading state. The response will be read as `JSON` and if it has an `error` property, it will be set in the state, otherwise, the `success` is set to 1 on the state.\n */\nexport default class SubmitForm extends Component {\n  constructor() {\n    super()\n    /** @type {!_depackForm.SubmitFormProps} */\n    this.props = this.props\n    /** @type {!_depackForm.SubmitFormState} */\n    this.state = {\n      formLoading: false,\n      error: null,\n      success: null,\n    }\n    /** @type {!RequestInit} */\n    this.fetchOptions = {}\n  }\n  /**\n   * Submits the form to the `path` property, setting `formLoading` during this time. Also sets the `error` and `success` state.\n   */\n  async submit(e) {\n    e.preventDefault()\n    if (!this.props.path) {\n      this.setState({ error: 'Path is not set in the properties of the form.' })\n      return false\n    }\n    this.setState({ error: null, success: null })\n    const data = new FormData(e.target)\n    this.setState({ formLoading: true })\n    let res\n    try {\n      res = await fetch(this.props.path, {\n        method: 'POST',\n        body: data,\n        ...this.fetchOptions,\n      })\n      const { 'error': error } = await res.json()\n      if (error) this.setState({ error })\n      else this.setState({ success: 1 })\n    } catch (error) {\n      this.setState({ error })\n    } finally {\n      this.setState({ formLoading: false })\n    }\n    if (this.props.submitFinish) {\n      await this.props.submitFinish(res)\n    }\n    return false\n  }\n  /**\n   * Remove the error and the success states.\n   */\n  reset() {\n    this.setState({\n      error: null,\n      success: null,\n    })\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').SubmitFormProps} _depackForm.SubmitFormProps\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').SubmitFormState} _depackForm.SubmitFormState\n */",
    "import { h } from 'preact'\nimport { Component } from 'preact'\n\nexport default class Form extends Component {\n  constructor() {\n    super()\n    this.state = {\n      values: {},\n    }\n    /** @type {!_depackForm.FormProps} */\n    this.props = this.props\n  }\n  getChildContext() {\n    return {\n      values: this.state.values,\n      onChange: this.onChange.bind(this),\n    }\n  }\n  onChange(name, value) {\n    this.setState({\n      values: {\n        ...this.state.values,\n        [name]: value,\n      },\n    })\n    if (this.props.onChange)\n      this.props.onChange(this.state.values)\n  }\n  render(props) {\n    const { children, formRef, onSubmit, onChange, ...prop } =\n      /** @type {!_depackForm.FormProps} */ (props)\n    return    h('form',{...prop,'ref':formRef, 'onSubmit':onSubmit},\n      children,\n    )\n  }\n}\n\nexport { default as FormGroup } from './form-group.jsx'\nexport { default as Select } from './Select.jsx'\nexport { default as TextArea } from './TextArea.jsx'\nexport { default as Input } from './Input.jsx'\nexport { default as SubmitForm } from './SubmitForm.jsx'\n\n/**\n * The button with `type=\"submit\"` which can be loading with a spinner indicator.\n * @param {!_depackForm.SubmitButtonProps} props Options for the SubmitButton component.\n */\nexport const SubmitButton = ({ loading, confirmText, loadingText = confirmText, className, type = 'primary', outline = false }) => {\n  const classes = ['btn', `btn-${outline ? 'outline-' : ''}${type}`, className].filter(Boolean)\n  return (h('button',{ 'className':classes.join(' '),'type':\"submit\", 'disabled':loading},\n    loading && h('span',{'className':`spinner-border spinner-border-sm${loadingText ? ' mr-2' : ''}`,'role':\"status\",'aria-hidden':\"true\"}),\n    loading ? loadingText : confirmText,\n  ))\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').FormProps} _depackForm.FormProps\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').SubmitButtonProps} _depackForm.SubmitButtonProps\n */",
    "import { h } from 'preact'\nimport Form, {\n  FormGroup, TextArea, Input, Select, SubmitButton, SubmitForm,\n} from './../src/index.jsx'\n\nclass ExampleForm extends SubmitForm {\n  render({ onChange, ...props }) {\n    const { formLoading, error, success } = this.state\n\n    return (                                        h(Form,{...props, onSubmit:this.submit.bind(this), onChange:values => {\n      this.reset()\n      if(onChange) onChange(values)\n    }},\n      h(FormGroup,{label:\"Input\",help:\"Type in something...\"},\n        h(Input,{name:\"input\",value:\"hello-world\"}),\n      ),\n      h(FormGroup,{label:\"Select\",help:\"Please select...\"},\n        h(Select,{options:[\n          {\n            title: 'Free will',\n            value: '1',\n          },\n          {\n            title: 'Unfree will',\n            value: '2',\n          },\n        ],name:\"select\",value:\"2\"}),\n      ),\n      h(FormGroup,{label:\"TextArea\",help:\"Multiple row input...\"},\n        h(TextArea,{name:\"textarea\"},\n          `One must still have chaos in oneself to be able to give birth to a dancing star.`\n        ),\n      ),\n      h(SubmitButton,{loading:formLoading,type:\"warning\",confirmText:\"Submit Data\"}),\n      error && `Error: ${error}`,\n      success && `OK`,\n    ))\n  }\n}\n\nexport default ExampleForm",
    "import { h } from 'preact'\nimport { render, Component } from 'preact'\n// import 'preact/devtools/'\nimport ExampleForm from './ExampleForm.jsx'\n\nclass Main extends Component {\n  render() {\n    return (\n      h('div',{'className':\"container\"},\n        h('h1',{},`@Depack/Form`),\n        h('blockquote',{'className':\"blockquote\"},\n          `The Preact component that creates and maintains\n          the form state (designed for Depack bundler).`\n        ),\n        h('div',{'className':\"row\"},\n          h('div',{'className':\"col-sm-6\"},\n            h(ExampleForm,{onChange:(values) => {\n              this.setState(values)\n            },path:\"/form\"}),\n          ),\n          h('div',{'className':\"col-sm-6\"},\n            h('pre',{'style':\"white-space: pre-wrap;\"},\n              JSON.stringify(this.state, null, 2)\n            ),\n          ),\n        ),\n      ))\n  }\n}\n\nrender( h(Main), document.querySelector('#preact'))"
  ],
  "names": [
    "$jscomp.arrayIteratorImpl",
    "$jscomp.objectCreate",
    "$jscomp.setPrototypeOf",
    "$jscomp.global",
    "$jscomp.defineProperty",
    "$jscomp.polyfill",
    "$jscomp.makeIterator",
    "$jscomp.initSymbol",
    "$jscomp.Symbol",
    "$jscomp.SymbolClass",
    "$jscomp.SYMBOL_PREFIX",
    "$jscomp.iteratorPrototype",
    "$jscomp.initSymbolIterator",
    "$jscomp.generator.Context",
    "$jscomp.iteratorFromArray",
    "preact",
    "h",
    "Component",
    "render",
    "Help",
    "help",
    "hid",
    "valid",
    "cc",
    "invalid",
    "c",
    "__html",
    "shouldComponentUpdate",
    "newProps",
    "newContext",
    "props",
    "name",
    "newValue",
    "context",
    "values",
    "value",
    "onChange",
    "getClasses",
    "colClasses",
    "prop",
    "Object",
    "entries",
    "reduce",
    "acc",
    "key",
    "startsWith",
    "push",
    "constructor",
    "FormGroup",
    "id",
    "Math",
    "floor",
    "random",
    "$jscomp.inherits",
    "getChildContext",
    "children",
    "label",
    "details",
    "className",
    "formRow",
    "row",
    "labelClassName",
    "filter",
    "Boolean",
    "join",
    "undefined",
    "lc",
    "$jscomp.arrayFromIterator",
    "lbl",
    "he",
    "Select",
    "__",
    "call",
    "res",
    "componentDidMount",
    "options",
    "required",
    "defaultText",
    "selectValue",
    "select",
    "e",
    "currentTarget",
    "map",
    "v",
    "title",
    "length",
    "TextArea",
    "child",
    "trim",
    "placeholder",
    "rows",
    "Input",
    "type",
    "file",
    "input",
    "url",
    "Promise",
    "resolve",
    "reject",
    "response",
    "ok",
    "request",
    "statusText",
    "status",
    "text",
    "json",
    "JSON",
    "blob",
    "Blob",
    "clone",
    "headers",
    "keys",
    "all",
    "get",
    "n",
    "has",
    "XMLHttpRequest",
    "i",
    "onload",
    "m",
    "SubmitForm",
    "state",
    "formLoading",
    "error",
    "success",
    "fetchOptions",
    "submit",
    "data",
    "$jscomp.asyncExecutePromiseGenerator",
    "$jscomp.generator.Generator_",
    "$jscomp.generator.Engine_",
    "preventDefault",
    "path",
    "setState",
    "FormData",
    "target",
    "fetch",
    "method",
    "body",
    "submitFinish",
    "Form",
    "bind",
    "formRef",
    "onSubmit",
    "SubmitButton",
    "loading",
    "confirmText",
    "loadingText",
    "classes",
    "outline",
    "ExampleForm",
    "reset",
    "Main",
    "stringify",
    "document",
    "querySelector"
  ]
}